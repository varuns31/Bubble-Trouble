
test_checksum.elf:     file format elf32-littlenios2
test_checksum.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0c000230

Program Header:
    LOAD off    0x00001000 vaddr 0x0c000000 paddr 0x0c000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x0c000020 paddr 0x0c000020 align 2**12
         filesz 0x0000fe80 memsz 0x0000fe80 flags r-x
    LOAD off    0x00010ea0 vaddr 0x0c00fea0 paddr 0x0c011994 align 2**12
         filesz 0x00001af4 memsz 0x00001af4 flags rw-
    LOAD off    0x00013488 vaddr 0x0c013488 paddr 0x0c013488 align 2**12
         filesz 0x00000000 memsz 0x00000160 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  0c000000  0c000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  0c000020  0c000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f914  0c000230  0c000230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000035c  0c00fb44  0c00fb44  00010b44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001af4  0c00fea0  0c011994  00010ea0  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  0c013488  0c013488  00013488  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2_0 00000000  00000000  00000000  00012994  2**0
                  CONTENTS
  7 .sdram        00000000  0c0135e8  0c0135e8  00012994  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012994  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000eb0  00000000  00000000  000129b8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00022cb7  00000000  00000000  00013868  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008ed1  00000000  00000000  0003651f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b335  00000000  00000000  0003f3f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000020c0  00000000  00000000  0004a728  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003956  00000000  00000000  0004c7e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017755  00000000  00000000  0005013e  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  00067894  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  000678a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006c2ca  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006c2cd  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006c2d9  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006c2da  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  0006c2db  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  0006c2df  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0006c2e3  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   0000000b  00000000  00000000  0006c2e7  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    0000000b  00000000  00000000  0006c2f2  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   0000000b  00000000  00000000  0006c2fd  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000007  00000000  00000000  0006c308  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000026  00000000  00000000  0006c30f  2**0
                  CONTENTS, READONLY
 30 .jdi          00004e1f  00000000  00000000  0006c335  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     0008ed85  00000000  00000000  00071154  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
0c000000 l    d  .entry	00000000 .entry
0c000020 l    d  .exceptions	00000000 .exceptions
0c000230 l    d  .text	00000000 .text
0c00fb44 l    d  .rodata	00000000 .rodata
0c00fea0 l    d  .rwdata	00000000 .rwdata
0c013488 l    d  .bss	00000000 .bss
00000000 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
0c0135e8 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../test_checksum_bsp//obj/HAL/src/crt0.o
0c000268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
0c01194c l     O .rwdata	00000004 vga_ctrl
00000000 l    df *ABS*	00000000 text_mode_vga.c
0c011950 l     O .rwdata	00000004 vga_ctrl
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0c00fbe6 l     O .rodata	00000010 zeroes.4404
0c0028c0 l     F .text	000000bc __sbprintf
0c00fbf6 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0c002ad0 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0c004628 l     F .text	00000008 __fp_unlock
0c00463c l     F .text	0000019c __sinit.part.1
0c0047d8 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0c00fea0 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0c0102e4 l     O .rwdata	00000020 lc_ctype_charset
0c0102c4 l     O .rwdata	00000020 lc_message_charset
0c010304 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0c00fc28 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0c0071bc l     F .text	000000fc __sprint_r.part.0
0c00fd4c l     O .rodata	00000010 zeroes.4349
0c0087f8 l     F .text	000000bc __sbprintf
0c00fd5c l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0c00d3a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0c00d4b4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0c00d4e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0c00d5d4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0c00d6bc l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0c00d7a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0c00d984 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0c011984 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0c00dbf8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0c00dd34 l     F .text	00000034 alt_dev_reg
0c0108ec l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0c00e028 l     F .text	0000020c altera_avalon_jtag_uart_irq
0c00e234 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0c00e86c l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0c00eaac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0c00ef0c l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0c00f06c l     F .text	0000003c alt_get_errno
0c00f0a8 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0c0134bc g     O .bss	00000004 alt_instruction_exception_handler
0c006ccc g     F .text	00000074 _mprec_log10
0c006db8 g     F .text	0000008c __any_on
0c009274 g     F .text	00000054 _isatty_r
0c00fc34 g     O .rodata	00000028 __mprec_tinytens
0c00d8c0 g     F .text	0000007c alt_main
0c0002c8 g     F .text	00000050 textVGAClr
0c0134e8 g     O .bss	00000100 alt_irq
0c0092c8 g     F .text	00000060 _lseek_r
0c011994 g       *ABS*	00000000 __flash_rwdata_start
0c00bd78 g     F .text	00000088 .hidden __eqdf2
0c0135e8 g       *ABS*	00000000 __alt_heap_start
0c00058c g     F .text	0000003c printf
0c009ba0 g     F .text	0000009c _wcrtomb_r
0c000318 g     F .text	0000021c textVGATest
0c006fe4 g     F .text	0000005c __sseek
0c004988 g     F .text	00000010 __sinit
0c009a48 g     F .text	00000140 __swbuf_r
0c004f94 g     F .text	0000007c _setlocale_r
0c0047e0 g     F .text	00000078 __sfmoreglue
0c00d960 g     F .text	00000024 __malloc_unlock
0c009328 g     F .text	0000015c memmove
0c004970 g     F .text	00000018 _cleanup
0c005d8c g     F .text	000000a8 _Balloc
0c00be00 g     F .text	000000dc .hidden __gtdf2
0c00f494 g     F .text	00000024 altera_nios2_gen2_irq_init
0c000000 g     F .entry	0000000c __reset
0c000020 g       *ABS*	00000000 __flash_exceptions_start
0c008d50 g     F .text	0000005c _fstat_r
0c0134a0 g     O .bss	00000004 errno
0c006f60 g     F .text	00000008 __seofread
0c0134a8 g     O .bss	00000004 alt_argv
0c01994c g       *ABS*	00000000 _gp
0c01076c g     O .rwdata	00000180 alt_fd_list
0c00f4b8 g     F .text	00000090 alt_find_dev
0c005b1c g     F .text	00000148 memcpy
0c004630 g     F .text	0000000c _cleanup_r
0c00d1b8 g     F .text	000000dc .hidden __floatsidf
0c00eff0 g     F .text	0000007c alt_io_redirect
0c00bedc g     F .text	000000f4 .hidden __ltdf2
0c00fb44 g       *ABS*	00000000 __DTOR_END__
0c00f714 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0c006e44 g     F .text	00000074 __fpclassifyd
0c006c28 g     F .text	000000a4 __ratio
0c0087dc g     F .text	0000001c __vfiprintf_internal
0c00e42c g     F .text	0000021c altera_avalon_jtag_uart_read
0c00055c g     F .text	00000030 _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0c00aa40 g     F .text	00000064 .hidden __udivsi3
0c00d610 g     F .text	000000ac isatty
0c00fc84 g     O .rodata	000000c8 __mprec_tens
0c005010 g     F .text	0000000c __locale_charset
0c01349c g     O .bss	00000004 __malloc_top_pad
0c01195c g     O .rwdata	00000004 __mb_cur_max
0c005040 g     F .text	0000000c _localeconv_r
0c008dac g     F .text	000004c8 __sfvwrite_r
0c0061c0 g     F .text	0000003c __i2b
0c006eb8 g     F .text	00000054 _sbrk_r
0c009484 g     F .text	00000060 _read_r
0c01197c g     O .rwdata	00000004 alt_max_fd
0c008a44 g     F .text	000000f0 _fclose_r
0c0045f8 g     F .text	00000030 fflush
0c013498 g     O .bss	00000004 __malloc_max_sbrked_mem
0c00aafc g     F .text	000008ac .hidden __adddf3
0c0069d0 g     F .text	0000010c __b2d
0c00a384 g     F .text	000005c4 .hidden __umoddi3
0c00d7e4 g     F .text	000000dc lseek
0c011954 g     O .rwdata	00000004 _global_impure_ptr
0c0094e4 g     F .text	00000564 _realloc_r
0c0135e8 g       *ABS*	00000000 __bss_end
0c00ee1c g     F .text	000000f0 alt_iic_isr_register
0c00f38c g     F .text	00000108 alt_tick
0c009d88 g     F .text	000005fc .hidden __udivdi3
0c008cac g     F .text	00000024 _fputwc_r
0c00fc5c g     O .rodata	00000028 __mprec_bigtens
0c005fa4 g     F .text	00000104 __s2b
0c00d294 g     F .text	000000a8 .hidden __floatunsidf
0c006710 g     F .text	00000060 __mcmp
0c0049a8 g     F .text	00000018 __fp_lock_all
0c00edd0 g     F .text	0000004c alt_ic_irq_enabled
0c00f2f0 g     F .text	0000009c alt_alarm_stop
0c0134b0 g     O .bss	00000004 alt_irq_active
0c0000fc g     F .exceptions	000000d4 alt_irq_handler
0c010744 g     O .rwdata	00000028 alt_dev_null
0c00ea8c g     F .text	00000020 alt_dcache_flush_all
0c0060a8 g     F .text	00000068 __hi0bits
0c00d138 g     F .text	00000080 .hidden __fixdfsi
0c011994 g       *ABS*	00000000 __ram_rwdata_end
0c011974 g     O .rwdata	00000008 alt_dev_list
0c00dc34 g     F .text	00000100 write
0c00fea0 g       *ABS*	00000000 __ram_rodata_end
0c00d51c g     F .text	000000b8 fstat
0c00bedc g     F .text	000000f4 .hidden __ledf2
0c006488 g     F .text	00000140 __pow5mult
0c0072d0 g     F .text	0000150c ___vfiprintf_internal_r
0c013490 g     O .bss	00000004 __nlocale_changed
0c00aaa4 g     F .text	00000058 .hidden __umodsi3
0c0135e8 g       *ABS*	00000000 end
0c00df68 g     F .text	000000c0 altera_avalon_jtag_uart_init
0c0001d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0c00fb44 g       *ABS*	00000000 __CTOR_LIST__
10000000 g       *ABS*	00000000 __alt_stack_pointer
0c00e8e4 g     F .text	0000007c alt_avalon_timer_sc_init
0c00d33c g     F .text	00000064 .hidden __clzsi2
0c00e648 g     F .text	00000224 altera_avalon_jtag_uart_write
0c004998 g     F .text	00000004 __sfp_lock_acquire
0c005a38 g     F .text	000000e4 memchr
0c0005c8 g     F .text	000022dc ___vfprintf_internal_r
0c004afc g     F .text	00000310 _free_r
0c00501c g     F .text	00000010 __locale_mb_cur_max
0c00f990 g     F .text	00000180 __call_exitprocs
0c01348c g     O .bss	00000004 __mlocale_changed
0c011960 g     O .rwdata	00000004 __malloc_sbrk_base
0c000230 g     F .text	0000003c _start
0c0134b4 g     O .bss	00000004 _alt_tick_rate
0c0065c8 g     F .text	00000148 __lshift
0c0134b8 g     O .bss	00000004 _alt_nticks
0c00d9c0 g     F .text	00000104 read
0c00dda0 g     F .text	00000064 alt_sys_init
0c00f878 g     F .text	00000118 __register_exitproc
0c0061fc g     F .text	0000028c __multiply
0c00e2d4 g     F .text	00000068 altera_avalon_jtag_uart_close
0c000534 g     F .text	00000028 .hidden __mulsi3
0c00fea0 g       *ABS*	00000000 __ram_rwdata_start
0c00fb44 g       *ABS*	00000000 __ram_rodata_start
0c0134c0 g     O .bss	00000028 __malloc_current_mallinfo
0c006adc g     F .text	0000014c __d2b
0c00de04 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0c00f650 g     F .text	000000c4 alt_get_fd
0c008914 g     F .text	00000054 _close_r
0c00f7fc g     F .text	0000007c memcmp
0c00dec4 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0c0135e8 g       *ABS*	00000000 __alt_stack_base
0c00df14 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0c00297c g     F .text	00000154 __swsetup_r
0c00b3a8 g     F .text	000009d0 .hidden __divdf3
0c004858 g     F .text	00000118 __sfp
0c006d40 g     F .text	00000078 __copybits
0c01033c g     O .rwdata	00000408 __malloc_av_
0c0049a4 g     F .text	00000004 __sinit_lock_release
0c00bfd0 g     F .text	0000086c .hidden __muldf3
0c006f0c g     F .text	00000054 __sread
0c00f548 g     F .text	00000108 alt_find_file
0c00eae8 g     F .text	000000a4 alt_dev_llist_insert
0c00d93c g     F .text	00000024 __malloc_lock
0c00db48 g     F .text	000000b0 sbrk
0c00459c g     F .text	0000005c _fflush_r
0c008968 g     F .text	000000dc _calloc_r
0c013488 g       *ABS*	00000000 __bss_start
0c005c64 g     F .text	00000128 memset
0c00026c g     F .text	00000018 main
0c0134ac g     O .bss	00000004 alt_envp
0c013494 g     O .bss	00000004 __malloc_max_total_mem
0c00de64 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0c009b88 g     F .text	00000018 __swbuf
0c007040 g     F .text	00000008 __sclose
10000000 g       *ABS*	00000000 __alt_heap_limit
0c008b34 g     F .text	00000014 fclose
0c002cf8 g     F .text	00001688 _dtoa_r
0c00522c g     F .text	0000080c _malloc_r
0c009cfc g     F .text	00000030 __ascii_wctomb
0c011980 g     O .rwdata	00000004 alt_errno
0c004e0c g     F .text	000000c4 _fwalk
0c00a948 g     F .text	00000084 .hidden __divsi3
0c0049d8 g     F .text	00000124 _malloc_trim_r
0c00fb44 g       *ABS*	00000000 __CTOR_END__
0c007048 g     F .text	000000dc strcmp
0c00fb44 g       *ABS*	00000000 __flash_rodata_start
0c00fb44 g       *ABS*	00000000 __DTOR_LIST__
0c00bd78 g     F .text	00000088 .hidden __nedf2
0c00dd68 g     F .text	00000038 alt_irq_init
0c00dac4 g     F .text	00000084 alt_release_fd
0c00fd6c g     O .rodata	00000100 .hidden __clz_tab
0c013488 g     O .bss	00000004 _PathLocale
0c00f7b0 g     F .text	00000014 atexit
0c0088b4 g     F .text	00000060 _write_r
0c00504c g     F .text	00000018 setlocale
0c000284 g     F .text	00000044 textVGASetColor
0c011958 g     O .rwdata	00000004 _impure_ptr
0c0134a4 g     O .bss	00000004 alt_argc
0c004380 g     F .text	0000021c __sflush_r
0c00ebec g     F .text	00000060 _do_dtors
0c005038 g     F .text	00000008 __locale_cjk_lang
0c000020 g       .exceptions	00000000 alt_irq_entry
0c00696c g     F .text	00000064 __ulp
0c0049c0 g     F .text	00000018 __fp_unlock_all
0c01196c g     O .rwdata	00000008 alt_fs_list
0c000020 g       *ABS*	00000000 __ram_exceptions_start
0c005064 g     F .text	0000000c localeconv
0c00ec6c g     F .text	00000050 alt_ic_isr_register
0c011994 g       *ABS*	00000000 _edata
0c0135e8 g       *ABS*	00000000 _end
0c008b48 g     F .text	00000164 __fputwc
0c000230 g       *ABS*	00000000 __ram_exceptions_end
0c00e33c g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0c00ed44 g     F .text	0000008c alt_ic_irq_disable
0c006f68 g     F .text	0000007c __swrite
0c011964 g     O .rwdata	00000004 __malloc_trim_threshold
0c00502c g     F .text	0000000c __locale_msgcharset
0c00f7c4 g     F .text	00000038 exit
0c004ed0 g     F .text	000000c4 _fwalk_reent
0c006770 g     F .text	000001fc __mdiff
0c00a9cc g     F .text	00000074 .hidden __modsi3
10000000 g       *ABS*	00000000 __alt_data_end
0c000020 g     F .exceptions	00000000 alt_exception
0c00499c g     F .text	00000004 __sfp_lock_release
0c000000 g       *ABS*	00000000 __alt_mem_sdram
0c00fb10 g     F .text	00000034 _exit
0c00e960 g     F .text	0000012c alt_alarm_start
0c005070 g     F .text	000001bc __smakebuf_r
0c007124 g     F .text	00000098 strlen
0c00f194 g     F .text	0000015c open
0c00be00 g     F .text	000000dc .hidden __gedf2
0c011968 g     O .rwdata	00000004 __wctomb
0c0072b8 g     F .text	00000018 __sprint_r
0c00ec4c g     F .text	00000020 alt_icache_flush_all
0c011988 g     O .rwdata	00000004 alt_priority_mask
0c00ecbc g     F .text	00000088 alt_ic_irq_enable
0c0028a4 g     F .text	0000001c __vfprintf_internal
0c009d2c g     F .text	0000005c _wctomb_r
0c00c83c g     F .text	000008fc .hidden __subdf3
0c006110 g     F .text	000000b0 __lo0bits
0c01198c g     O .rwdata	00000008 alt_alarm_list
0c00eb8c g     F .text	00000060 _do_ctors
0c009c3c g     F .text	000000c0 wcrtomb
0c00d3dc g     F .text	000000d8 close
0c00d724 g     F .text	00000084 alt_load
0c008cd0 g     F .text	00000080 fputwc
0c0049a0 g     F .text	00000004 __sinit_lock_acquire
0c005e5c g     F .text	00000148 __multadd
0c005e34 g     F .text	00000028 _Bfree



Disassembly of section .entry:

0c000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 c000000:	00430034 	movhi	at,3072
    ori r1, r1, %lo(_start)
 c000004:	08408c14 	ori	at,at,560
    jmp r1
 c000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

0c000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 c000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 c000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 c000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 c00002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 c000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 c000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 c000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 c00003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 c000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 c000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 c000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 c00004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 c000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 c000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 c000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 c00005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 c000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 c000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 c000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 c00006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 c000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 c000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 c000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 c00007c:	10000326 	beq	r2,zero,c00008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 c000080:	20000226 	beq	r4,zero,c00008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 c000084:	c0000fc0 	call	c0000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 c000088:	00000706 	br	c0000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 c00008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 c000090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 c000094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 c000098:	c0001d00 	call	c0001d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 c00009c:	1000021e 	bne	r2,zero,c0000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 c0000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 c0000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 c0000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 c0000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 c0000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 c0000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 c0000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 c0000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 c0000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 c0000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 c0000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 c0000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 c0000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 c0000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 c0000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 c0000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 c0000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 c0000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 c0000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 c0000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 c0000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 c0000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 c0000f8:	ef80083a 	eret

0c0000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 c0000fc:	defff904 	addi	sp,sp,-28
 c000100:	dfc00615 	stw	ra,24(sp)
 c000104:	df000515 	stw	fp,20(sp)
 c000108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 c00010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 c000110:	0005313a 	rdctl	r2,ipending
 c000114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 c000118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 c00011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 c000120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 c000124:	00800044 	movi	r2,1
 c000128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 c00012c:	e0fffb17 	ldw	r3,-20(fp)
 c000130:	e0bffc17 	ldw	r2,-16(fp)
 c000134:	1884703a 	and	r2,r3,r2
 c000138:	10001426 	beq	r2,zero,c00018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 c00013c:	00830074 	movhi	r2,3073
 c000140:	108d3a04 	addi	r2,r2,13544
 c000144:	e0fffd17 	ldw	r3,-12(fp)
 c000148:	180690fa 	slli	r3,r3,3
 c00014c:	10c5883a 	add	r2,r2,r3
 c000150:	10c00017 	ldw	r3,0(r2)
 c000154:	00830074 	movhi	r2,3073
 c000158:	108d3a04 	addi	r2,r2,13544
 c00015c:	e13ffd17 	ldw	r4,-12(fp)
 c000160:	200890fa 	slli	r4,r4,3
 c000164:	1105883a 	add	r2,r2,r4
 c000168:	10800104 	addi	r2,r2,4
 c00016c:	10800017 	ldw	r2,0(r2)
 c000170:	1009883a 	mov	r4,r2
 c000174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 c000178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 c00017c:	0005313a 	rdctl	r2,ipending
 c000180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 c000184:	e0bfff17 	ldw	r2,-4(fp)
 c000188:	00000706 	br	c0001a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 c00018c:	e0bffc17 	ldw	r2,-16(fp)
 c000190:	1085883a 	add	r2,r2,r2
 c000194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 c000198:	e0bffd17 	ldw	r2,-12(fp)
 c00019c:	10800044 	addi	r2,r2,1
 c0001a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 c0001a4:	003fe106 	br	c00012c <__alt_data_end+0xfc00012c>

    active = alt_irq_pending ();
 c0001a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 c0001ac:	e0bffb17 	ldw	r2,-20(fp)
 c0001b0:	103fdb1e 	bne	r2,zero,c000120 <__alt_data_end+0xfc000120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 c0001b4:	0001883a 	nop
}
 c0001b8:	0001883a 	nop
 c0001bc:	e037883a 	mov	sp,fp
 c0001c0:	dfc00117 	ldw	ra,4(sp)
 c0001c4:	df000017 	ldw	fp,0(sp)
 c0001c8:	dec00204 	addi	sp,sp,8
 c0001cc:	f800283a 	ret

0c0001d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 c0001d0:	defffb04 	addi	sp,sp,-20
 c0001d4:	dfc00415 	stw	ra,16(sp)
 c0001d8:	df000315 	stw	fp,12(sp)
 c0001dc:	df000304 	addi	fp,sp,12
 c0001e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 c0001e4:	00bfffc4 	movi	r2,-1
 c0001e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 c0001ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 c0001f0:	d0a6dc17 	ldw	r2,-25744(gp)
 c0001f4:	10000726 	beq	r2,zero,c000214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 c0001f8:	d0a6dc17 	ldw	r2,-25744(gp)
 c0001fc:	e0fffd17 	ldw	r3,-12(fp)
 c000200:	e1bffe17 	ldw	r6,-8(fp)
 c000204:	e17fff17 	ldw	r5,-4(fp)
 c000208:	1809883a 	mov	r4,r3
 c00020c:	103ee83a 	callr	r2
 c000210:	00000206 	br	c00021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 c000214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 c000218:	0005883a 	mov	r2,zero
}
 c00021c:	e037883a 	mov	sp,fp
 c000220:	dfc00117 	ldw	ra,4(sp)
 c000224:	df000017 	ldw	fp,0(sp)
 c000228:	dec00204 	addi	sp,sp,8
 c00022c:	f800283a 	ret

Disassembly of section .text:

0c000230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 c000230:	06c40034 	movhi	sp,4096
    ori sp, sp, %lo(__alt_stack_pointer)
 c000234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 c000238:	06830074 	movhi	gp,3073
    ori gp, gp, %lo(_gp)
 c00023c:	d6a65314 	ori	gp,gp,39244
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 c000240:	00830074 	movhi	r2,3073
    ori r2, r2, %lo(__bss_start)
 c000244:	108d2214 	ori	r2,r2,13448

    movhi r3, %hi(__bss_end)
 c000248:	00c30074 	movhi	r3,3073
    ori r3, r3, %lo(__bss_end)
 c00024c:	18cd7a14 	ori	r3,r3,13800

    beq r2, r3, 1f
 c000250:	10c00326 	beq	r2,r3,c000260 <_start+0x30>

0:
    stw zero, (r2)
 c000254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 c000258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 c00025c:	10fffd36 	bltu	r2,r3,c000254 <__alt_data_end+0xfc000254>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 c000260:	c00d7240 	call	c00d724 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 c000264:	c00d8c00 	call	c00d8c0 <alt_main>

0c000268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 c000268:	003fff06 	br	c000268 <__alt_data_end+0xfc000268>

0c00026c <main>:
#include <alt_types.h>
#include "text_mode_vga.h"


int main()
{
 c00026c:	defffe04 	addi	sp,sp,-8
 c000270:	dfc00115 	stw	ra,4(sp)
 c000274:	df000015 	stw	fp,0(sp)
 c000278:	d839883a 	mov	fp,sp
	while (1) {
		textVGATest();}
 c00027c:	c0003180 	call	c000318 <textVGATest>
 c000280:	003ffe06 	br	c00027c <__alt_data_end+0xfc00027c>

0c000284 <textVGASetColor>:
#include <alt_types.h>
#include "text_mode_vga.h"


void textVGASetColor(int background, int foreground)
{
 c000284:	defffd04 	addi	sp,sp,-12
 c000288:	df000215 	stw	fp,8(sp)
 c00028c:	df000204 	addi	fp,sp,8
 c000290:	e13ffe15 	stw	r4,-8(fp)
 c000294:	e17fff15 	stw	r5,-4(fp)
	vga_ctrl->CTRL = foreground << 13 |
 c000298:	d0e00117 	ldw	r3,-32764(gp)
 c00029c:	e0bfff17 	ldw	r2,-4(fp)
 c0002a0:	1008937a 	slli	r4,r2,13
					 background << 1;
 c0002a4:	e0bffe17 	ldw	r2,-8(fp)
 c0002a8:	1085883a 	add	r2,r2,r2
#include "text_mode_vga.h"


void textVGASetColor(int background, int foreground)
{
	vga_ctrl->CTRL = foreground << 13 |
 c0002ac:	2084b03a 	or	r2,r4,r2
 c0002b0:	18825815 	stw	r2,2400(r3)
					 background << 1;
}
 c0002b4:	0001883a 	nop
 c0002b8:	e037883a 	mov	sp,fp
 c0002bc:	df000017 	ldw	fp,0(sp)
 c0002c0:	dec00104 	addi	sp,sp,4
 c0002c4:	f800283a 	ret

0c0002c8 <textVGAClr>:

void textVGAClr()
{
 c0002c8:	defffe04 	addi	sp,sp,-8
 c0002cc:	df000115 	stw	fp,4(sp)
 c0002d0:	df000104 	addi	fp,sp,4
	for (int i = 0; i<(ROWS*COLUMNS); i++)
 c0002d4:	e03fff15 	stw	zero,-4(fp)
 c0002d8:	00000706 	br	c0002f8 <textVGAClr+0x30>
	{
		vga_ctrl->VRAM[i] = 0x00;
 c0002dc:	d0e00117 	ldw	r3,-32764(gp)
 c0002e0:	e0bfff17 	ldw	r2,-4(fp)
 c0002e4:	1885883a 	add	r2,r3,r2
 c0002e8:	10000005 	stb	zero,0(r2)
					 background << 1;
}

void textVGAClr()
{
	for (int i = 0; i<(ROWS*COLUMNS); i++)
 c0002ec:	e0bfff17 	ldw	r2,-4(fp)
 c0002f0:	10800044 	addi	r2,r2,1
 c0002f4:	e0bfff15 	stw	r2,-4(fp)
 c0002f8:	e0bfff17 	ldw	r2,-4(fp)
 c0002fc:	10825810 	cmplti	r2,r2,2400
 c000300:	103ff61e 	bne	r2,zero,c0002dc <__alt_data_end+0xfc0002dc>
	{
		vga_ctrl->VRAM[i] = 0x00;
	}
}
 c000304:	0001883a 	nop
 c000308:	e037883a 	mov	sp,fp
 c00030c:	df000017 	ldw	fp,0(sp)
 c000310:	dec00104 	addi	sp,sp,4
 c000314:	f800283a 	ret

0c000318 <textVGATest>:

void textVGATest()
{
 c000318:	deff8e04 	addi	sp,sp,-456
 c00031c:	dfc07115 	stw	ra,452(sp)
 c000320:	df007015 	stw	fp,448(sp)
 c000324:	dc006f15 	stw	r16,444(sp)
 c000328:	df007004 	addi	fp,sp,448
	textVGASetColor(BLACK, WHITE);
 c00032c:	0143ffc4 	movi	r5,4095
 c000330:	0009883a 	mov	r4,zero
 c000334:	c0002840 	call	c000284 <textVGASetColor>
	textVGAClr();
 c000338:	c0002c80 	call	c0002c8 <textVGAClr>

	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
 c00033c:	e03f9015 	stw	zero,-448(fp)
 c000340:	00003106 	br	c000408 <textVGATest+0xf0>
	{
		checksum[j] = 0;
 c000344:	e0bf9017 	ldw	r2,-448(fp)
 c000348:	1085883a 	add	r2,r2,r2
 c00034c:	1085883a 	add	r2,r2,r2
 c000350:	e0ff9004 	addi	r3,fp,-448
 c000354:	1885883a 	add	r2,r3,r2
 c000358:	10800404 	addi	r2,r2,16
 c00035c:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
 c000360:	e03f9115 	stw	zero,-444(fp)
 c000364:	00002206 	br	c0003f0 <textVGATest+0xd8>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
 c000368:	d4200117 	ldw	r16,-32764(gp)
 c00036c:	01401404 	movi	r5,80
 c000370:	e13f9017 	ldw	r4,-448(fp)
 c000374:	c0005340 	call	c000534 <__mulsi3>
 c000378:	1007883a 	mov	r3,r2
 c00037c:	e0bf9117 	ldw	r2,-444(fp)
 c000380:	1885883a 	add	r2,r3,r2
 c000384:	e0ff9117 	ldw	r3,-444(fp)
 c000388:	1809883a 	mov	r4,r3
 c00038c:	e0ff9017 	ldw	r3,-448(fp)
 c000390:	20c7883a 	add	r3,r4,r3
 c000394:	8085883a 	add	r2,r16,r2
 c000398:	10c00005 	stb	r3,0(r2)
			checksum[j] += i + j;
 c00039c:	e0bf9017 	ldw	r2,-448(fp)
 c0003a0:	1085883a 	add	r2,r2,r2
 c0003a4:	1085883a 	add	r2,r2,r2
 c0003a8:	e13f9004 	addi	r4,fp,-448
 c0003ac:	2085883a 	add	r2,r4,r2
 c0003b0:	10800404 	addi	r2,r2,16
 c0003b4:	10800017 	ldw	r2,0(r2)
 c0003b8:	e13f9117 	ldw	r4,-444(fp)
 c0003bc:	e0ff9017 	ldw	r3,-448(fp)
 c0003c0:	20c7883a 	add	r3,r4,r3
 c0003c4:	10c7883a 	add	r3,r2,r3
 c0003c8:	e0bf9017 	ldw	r2,-448(fp)
 c0003cc:	1085883a 	add	r2,r2,r2
 c0003d0:	1085883a 	add	r2,r2,r2
 c0003d4:	e13f9004 	addi	r4,fp,-448
 c0003d8:	2085883a 	add	r2,r4,r2
 c0003dc:	10800404 	addi	r2,r2,16
 c0003e0:	10c00015 	stw	r3,0(r2)
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
	{
		checksum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
 c0003e4:	e0bf9117 	ldw	r2,-444(fp)
 c0003e8:	10800044 	addi	r2,r2,1
 c0003ec:	e0bf9115 	stw	r2,-444(fp)
 c0003f0:	e0bf9117 	ldw	r2,-444(fp)
 c0003f4:	10801410 	cmplti	r2,r2,80
 c0003f8:	103fdb1e 	bne	r2,zero,c000368 <__alt_data_end+0xfc000368>
	textVGAClr();

	//Register write and readback test
	alt_u32 checksum[ROWS], readsum[ROWS];

	for (int j = 0; j < ROWS; j++)
 c0003fc:	e0bf9017 	ldw	r2,-448(fp)
 c000400:	10800044 	addi	r2,r2,1
 c000404:	e0bf9015 	stw	r2,-448(fp)
 c000408:	e0bf9017 	ldw	r2,-448(fp)
 c00040c:	10800790 	cmplti	r2,r2,30
 c000410:	103fcc1e 	bne	r2,zero,c000344 <__alt_data_end+0xfc000344>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
 c000414:	e03f9215 	stw	zero,-440(fp)
 c000418:	00003f06 	br	c000518 <textVGATest+0x200>
	{
		readsum[j] = 0;
 c00041c:	e0bf9217 	ldw	r2,-440(fp)
 c000420:	1085883a 	add	r2,r2,r2
 c000424:	1085883a 	add	r2,r2,r2
 c000428:	e0ff9004 	addi	r3,fp,-448
 c00042c:	1885883a 	add	r2,r3,r2
 c000430:	10802204 	addi	r2,r2,136
 c000434:	10000015 	stw	zero,0(r2)
		for (int i = 0; i < COLUMNS; i++)
 c000438:	e03f9315 	stw	zero,-436(fp)
 c00043c:	00001c06 	br	c0004b0 <textVGATest+0x198>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
 c000440:	d4200117 	ldw	r16,-32764(gp)
 c000444:	01401404 	movi	r5,80
 c000448:	e13f9217 	ldw	r4,-440(fp)
 c00044c:	c0005340 	call	c000534 <__mulsi3>
 c000450:	1007883a 	mov	r3,r2
 c000454:	e0bf9317 	ldw	r2,-436(fp)
 c000458:	1885883a 	add	r2,r3,r2
 c00045c:	8085883a 	add	r2,r16,r2
 c000460:	11000003 	ldbu	r4,0(r2)
 c000464:	e0bf9217 	ldw	r2,-440(fp)
 c000468:	1085883a 	add	r2,r2,r2
 c00046c:	1085883a 	add	r2,r2,r2
 c000470:	e0ff9004 	addi	r3,fp,-448
 c000474:	1885883a 	add	r2,r3,r2
 c000478:	10802204 	addi	r2,r2,136
 c00047c:	10c00017 	ldw	r3,0(r2)
 c000480:	20803fcc 	andi	r2,r4,255
 c000484:	1887883a 	add	r3,r3,r2
 c000488:	e0bf9217 	ldw	r2,-440(fp)
 c00048c:	1085883a 	add	r2,r2,r2
 c000490:	1085883a 	add	r2,r2,r2
 c000494:	e13f9004 	addi	r4,fp,-448
 c000498:	2085883a 	add	r2,r4,r2
 c00049c:	10802204 	addi	r2,r2,136
 c0004a0:	10c00015 	stw	r3,0(r2)
		}
	}
	for (int j = 0; j < ROWS; j++)
	{
		readsum[j] = 0;
		for (int i = 0; i < COLUMNS; i++)
 c0004a4:	e0bf9317 	ldw	r2,-436(fp)
 c0004a8:	10800044 	addi	r2,r2,1
 c0004ac:	e0bf9315 	stw	r2,-436(fp)
 c0004b0:	e0bf9317 	ldw	r2,-436(fp)
 c0004b4:	10801410 	cmplti	r2,r2,80
 c0004b8:	103fe11e 	bne	r2,zero,c000440 <__alt_data_end+0xfc000440>
		{
			readsum[j] += vga_ctrl->VRAM[j*COLUMNS + i];
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
 c0004bc:	e0bf9217 	ldw	r2,-440(fp)
 c0004c0:	1085883a 	add	r2,r2,r2
 c0004c4:	1085883a 	add	r2,r2,r2
 c0004c8:	e0ff9004 	addi	r3,fp,-448
 c0004cc:	1885883a 	add	r2,r3,r2
 c0004d0:	10800404 	addi	r2,r2,16
 c0004d4:	10c00017 	ldw	r3,0(r2)
 c0004d8:	e0bf9217 	ldw	r2,-440(fp)
 c0004dc:	1085883a 	add	r2,r2,r2
 c0004e0:	1085883a 	add	r2,r2,r2
 c0004e4:	e13f9004 	addi	r4,fp,-448
 c0004e8:	2085883a 	add	r2,r4,r2
 c0004ec:	10802204 	addi	r2,r2,136
 c0004f0:	10800017 	ldw	r2,0(r2)
 c0004f4:	100f883a 	mov	r7,r2
 c0004f8:	180d883a 	mov	r6,r3
 c0004fc:	e17f9217 	ldw	r5,-440(fp)
 c000500:	01030074 	movhi	r4,3073
 c000504:	213ed104 	addi	r4,r4,-1212
 c000508:	c00058c0 	call	c00058c <printf>
		{
			vga_ctrl->VRAM[j*COLUMNS + i] = i + j;
			checksum[j] += i + j;
		}
	}
	for (int j = 0; j < ROWS; j++)
 c00050c:	e0bf9217 	ldw	r2,-440(fp)
 c000510:	10800044 	addi	r2,r2,1
 c000514:	e0bf9215 	stw	r2,-440(fp)
 c000518:	e0bf9217 	ldw	r2,-440(fp)
 c00051c:	10800790 	cmplti	r2,r2,30
 c000520:	103fbe1e 	bne	r2,zero,c00041c <__alt_data_end+0xfc00041c>
			//printf ("%x \n\r", vga_ctrl->VRAM[j*COLUMNS + i]);
		}
		printf ("Row: %d, Checksum: %x, Read-back Checksum: %x\n\r", j, checksum[j], readsum[j]);
	}
	{
				printf ("Checksum mismatch!, check your Avalon-MM code\n\r");
 c000524:	01030074 	movhi	r4,3073
 c000528:	213edd04 	addi	r4,r4,-1164
 c00052c:	c00058c0 	call	c00058c <printf>
				while (1){};
 c000530:	003fff06 	br	c000530 <__alt_data_end+0xfc000530>

0c000534 <__mulsi3>:
 c000534:	0005883a 	mov	r2,zero
 c000538:	20000726 	beq	r4,zero,c000558 <__mulsi3+0x24>
 c00053c:	20c0004c 	andi	r3,r4,1
 c000540:	2008d07a 	srli	r4,r4,1
 c000544:	18000126 	beq	r3,zero,c00054c <__mulsi3+0x18>
 c000548:	1145883a 	add	r2,r2,r5
 c00054c:	294b883a 	add	r5,r5,r5
 c000550:	203ffa1e 	bne	r4,zero,c00053c <__alt_data_end+0xfc00053c>
 c000554:	f800283a 	ret
 c000558:	f800283a 	ret

0c00055c <_printf_r>:
 c00055c:	defffd04 	addi	sp,sp,-12
 c000560:	2805883a 	mov	r2,r5
 c000564:	dfc00015 	stw	ra,0(sp)
 c000568:	d9800115 	stw	r6,4(sp)
 c00056c:	d9c00215 	stw	r7,8(sp)
 c000570:	21400217 	ldw	r5,8(r4)
 c000574:	d9c00104 	addi	r7,sp,4
 c000578:	100d883a 	mov	r6,r2
 c00057c:	c0005c80 	call	c0005c8 <___vfprintf_internal_r>
 c000580:	dfc00017 	ldw	ra,0(sp)
 c000584:	dec00304 	addi	sp,sp,12
 c000588:	f800283a 	ret

0c00058c <printf>:
 c00058c:	defffc04 	addi	sp,sp,-16
 c000590:	dfc00015 	stw	ra,0(sp)
 c000594:	d9400115 	stw	r5,4(sp)
 c000598:	d9800215 	stw	r6,8(sp)
 c00059c:	d9c00315 	stw	r7,12(sp)
 c0005a0:	00830074 	movhi	r2,3073
 c0005a4:	10865604 	addi	r2,r2,6488
 c0005a8:	10800017 	ldw	r2,0(r2)
 c0005ac:	200b883a 	mov	r5,r4
 c0005b0:	d9800104 	addi	r6,sp,4
 c0005b4:	11000217 	ldw	r4,8(r2)
 c0005b8:	c0028a40 	call	c0028a4 <__vfprintf_internal>
 c0005bc:	dfc00017 	ldw	ra,0(sp)
 c0005c0:	dec00404 	addi	sp,sp,16
 c0005c4:	f800283a 	ret

0c0005c8 <___vfprintf_internal_r>:
 c0005c8:	deffb804 	addi	sp,sp,-288
 c0005cc:	dfc04715 	stw	ra,284(sp)
 c0005d0:	ddc04515 	stw	r23,276(sp)
 c0005d4:	dd404315 	stw	r21,268(sp)
 c0005d8:	d9002d15 	stw	r4,180(sp)
 c0005dc:	282f883a 	mov	r23,r5
 c0005e0:	302b883a 	mov	r21,r6
 c0005e4:	d9c02e15 	stw	r7,184(sp)
 c0005e8:	df004615 	stw	fp,280(sp)
 c0005ec:	dd804415 	stw	r22,272(sp)
 c0005f0:	dd004215 	stw	r20,264(sp)
 c0005f4:	dcc04115 	stw	r19,260(sp)
 c0005f8:	dc804015 	stw	r18,256(sp)
 c0005fc:	dc403f15 	stw	r17,252(sp)
 c000600:	dc003e15 	stw	r16,248(sp)
 c000604:	c0050400 	call	c005040 <_localeconv_r>
 c000608:	10800017 	ldw	r2,0(r2)
 c00060c:	1009883a 	mov	r4,r2
 c000610:	d8803415 	stw	r2,208(sp)
 c000614:	c0071240 	call	c007124 <strlen>
 c000618:	d8803715 	stw	r2,220(sp)
 c00061c:	d8802d17 	ldw	r2,180(sp)
 c000620:	10000226 	beq	r2,zero,c00062c <___vfprintf_internal_r+0x64>
 c000624:	10800e17 	ldw	r2,56(r2)
 c000628:	1000fb26 	beq	r2,zero,c000a18 <___vfprintf_internal_r+0x450>
 c00062c:	b880030b 	ldhu	r2,12(r23)
 c000630:	10c8000c 	andi	r3,r2,8192
 c000634:	1800061e 	bne	r3,zero,c000650 <___vfprintf_internal_r+0x88>
 c000638:	b9001917 	ldw	r4,100(r23)
 c00063c:	00f7ffc4 	movi	r3,-8193
 c000640:	10880014 	ori	r2,r2,8192
 c000644:	20c6703a 	and	r3,r4,r3
 c000648:	b880030d 	sth	r2,12(r23)
 c00064c:	b8c01915 	stw	r3,100(r23)
 c000650:	10c0020c 	andi	r3,r2,8
 c000654:	1800c326 	beq	r3,zero,c000964 <___vfprintf_internal_r+0x39c>
 c000658:	b8c00417 	ldw	r3,16(r23)
 c00065c:	1800c126 	beq	r3,zero,c000964 <___vfprintf_internal_r+0x39c>
 c000660:	1080068c 	andi	r2,r2,26
 c000664:	00c00284 	movi	r3,10
 c000668:	10c0c626 	beq	r2,r3,c000984 <___vfprintf_internal_r+0x3bc>
 c00066c:	d8c00404 	addi	r3,sp,16
 c000670:	05030074 	movhi	r20,3073
 c000674:	d9001e04 	addi	r4,sp,120
 c000678:	a53ef984 	addi	r20,r20,-1050
 c00067c:	d8c01e15 	stw	r3,120(sp)
 c000680:	d8002015 	stw	zero,128(sp)
 c000684:	d8001f15 	stw	zero,124(sp)
 c000688:	d8003315 	stw	zero,204(sp)
 c00068c:	d8003615 	stw	zero,216(sp)
 c000690:	d8003815 	stw	zero,224(sp)
 c000694:	1811883a 	mov	r8,r3
 c000698:	d8003915 	stw	zero,228(sp)
 c00069c:	d8003a15 	stw	zero,232(sp)
 c0006a0:	d8002f15 	stw	zero,188(sp)
 c0006a4:	d9002815 	stw	r4,160(sp)
 c0006a8:	a8800007 	ldb	r2,0(r21)
 c0006ac:	10028b26 	beq	r2,zero,c0010dc <___vfprintf_internal_r+0xb14>
 c0006b0:	00c00944 	movi	r3,37
 c0006b4:	a823883a 	mov	r17,r21
 c0006b8:	10c0021e 	bne	r2,r3,c0006c4 <___vfprintf_internal_r+0xfc>
 c0006bc:	00001406 	br	c000710 <___vfprintf_internal_r+0x148>
 c0006c0:	10c00326 	beq	r2,r3,c0006d0 <___vfprintf_internal_r+0x108>
 c0006c4:	8c400044 	addi	r17,r17,1
 c0006c8:	88800007 	ldb	r2,0(r17)
 c0006cc:	103ffc1e 	bne	r2,zero,c0006c0 <__alt_data_end+0xfc0006c0>
 c0006d0:	8d61c83a 	sub	r16,r17,r21
 c0006d4:	80000e26 	beq	r16,zero,c000710 <___vfprintf_internal_r+0x148>
 c0006d8:	d8c02017 	ldw	r3,128(sp)
 c0006dc:	d8801f17 	ldw	r2,124(sp)
 c0006e0:	45400015 	stw	r21,0(r8)
 c0006e4:	1c07883a 	add	r3,r3,r16
 c0006e8:	10800044 	addi	r2,r2,1
 c0006ec:	d8c02015 	stw	r3,128(sp)
 c0006f0:	44000115 	stw	r16,4(r8)
 c0006f4:	d8801f15 	stw	r2,124(sp)
 c0006f8:	00c001c4 	movi	r3,7
 c0006fc:	1880a916 	blt	r3,r2,c0009a4 <___vfprintf_internal_r+0x3dc>
 c000700:	42000204 	addi	r8,r8,8
 c000704:	d9402f17 	ldw	r5,188(sp)
 c000708:	2c0b883a 	add	r5,r5,r16
 c00070c:	d9402f15 	stw	r5,188(sp)
 c000710:	88800007 	ldb	r2,0(r17)
 c000714:	1000aa26 	beq	r2,zero,c0009c0 <___vfprintf_internal_r+0x3f8>
 c000718:	8d400044 	addi	r21,r17,1
 c00071c:	8c400047 	ldb	r17,1(r17)
 c000720:	0021883a 	mov	r16,zero
 c000724:	00bfffc4 	movi	r2,-1
 c000728:	0025883a 	mov	r18,zero
 c00072c:	dc002905 	stb	r16,164(sp)
 c000730:	d8002785 	stb	zero,158(sp)
 c000734:	d8002b05 	stb	zero,172(sp)
 c000738:	d8802a15 	stw	r2,168(sp)
 c00073c:	d8003115 	stw	zero,196(sp)
 c000740:	04c01604 	movi	r19,88
 c000744:	05800244 	movi	r22,9
 c000748:	9021883a 	mov	r16,r18
 c00074c:	4039883a 	mov	fp,r8
 c000750:	ad400044 	addi	r21,r21,1
 c000754:	88bff804 	addi	r2,r17,-32
 c000758:	98833236 	bltu	r19,r2,c001424 <___vfprintf_internal_r+0xe5c>
 c00075c:	100490ba 	slli	r2,r2,2
 c000760:	00c30034 	movhi	r3,3072
 c000764:	18c1dd04 	addi	r3,r3,1908
 c000768:	10c5883a 	add	r2,r2,r3
 c00076c:	10800017 	ldw	r2,0(r2)
 c000770:	1000683a 	jmp	r2
 c000774:	0c00131c 	xori	r16,at,76
 c000778:	0c001424 	muli	r16,at,80
 c00077c:	0c001424 	muli	r16,at,80
 c000780:	0c00133c 	xorhi	r16,at,76
 c000784:	0c001424 	muli	r16,at,80
 c000788:	0c001424 	muli	r16,at,80
 c00078c:	0c001424 	muli	r16,at,80
 c000790:	0c001424 	muli	r16,at,80
 c000794:	0c001424 	muli	r16,at,80
 c000798:	0c001424 	muli	r16,at,80
 c00079c:	0c000a24 	muli	r16,at,40
 c0007a0:	0c00122c 	andhi	r16,at,72
 c0007a4:	0c001424 	muli	r16,at,80
 c0007a8:	0c0008e8 	cmpgeui	r16,at,35
 c0007ac:	0c000a48 	cmpgei	r16,at,41
 c0007b0:	0c001424 	muli	r16,at,80
 c0007b4:	0c000a98 	cmpnei	r16,at,42
 c0007b8:	0c000aa4 	muli	r16,at,42
 c0007bc:	0c000aa4 	muli	r16,at,42
 c0007c0:	0c000aa4 	muli	r16,at,42
 c0007c4:	0c000aa4 	muli	r16,at,42
 c0007c8:	0c000aa4 	muli	r16,at,42
 c0007cc:	0c000aa4 	muli	r16,at,42
 c0007d0:	0c000aa4 	muli	r16,at,42
 c0007d4:	0c000aa4 	muli	r16,at,42
 c0007d8:	0c000aa4 	muli	r16,at,42
 c0007dc:	0c001424 	muli	r16,at,80
 c0007e0:	0c001424 	muli	r16,at,80
 c0007e4:	0c001424 	muli	r16,at,80
 c0007e8:	0c001424 	muli	r16,at,80
 c0007ec:	0c001424 	muli	r16,at,80
 c0007f0:	0c001424 	muli	r16,at,80
 c0007f4:	0c001424 	muli	r16,at,80
 c0007f8:	0c001424 	muli	r16,at,80
 c0007fc:	0c001424 	muli	r16,at,80
 c000800:	0c001424 	muli	r16,at,80
 c000804:	0c000ae0 	cmpeqi	r16,at,43
 c000808:	0c000ba8 	cmpgeui	r16,at,46
 c00080c:	0c001424 	muli	r16,at,80
 c000810:	0c000ba8 	cmpgeui	r16,at,46
 c000814:	0c001424 	muli	r16,at,80
 c000818:	0c001424 	muli	r16,at,80
 c00081c:	0c001424 	muli	r16,at,80
 c000820:	0c001424 	muli	r16,at,80
 c000824:	0c000c54 	ori	r16,at,49
 c000828:	0c001424 	muli	r16,at,80
 c00082c:	0c001424 	muli	r16,at,80
 c000830:	0c000c60 	cmpeqi	r16,at,49
 c000834:	0c001424 	muli	r16,at,80
 c000838:	0c001424 	muli	r16,at,80
 c00083c:	0c001424 	muli	r16,at,80
 c000840:	0c001424 	muli	r16,at,80
 c000844:	0c001424 	muli	r16,at,80
 c000848:	0c0010e4 	muli	r16,at,67
 c00084c:	0c001424 	muli	r16,at,80
 c000850:	0c001424 	muli	r16,at,80
 c000854:	0c001150 	cmplti	r16,at,69
 c000858:	0c001424 	muli	r16,at,80
 c00085c:	0c001424 	muli	r16,at,80
 c000860:	0c001424 	muli	r16,at,80
 c000864:	0c001424 	muli	r16,at,80
 c000868:	0c001424 	muli	r16,at,80
 c00086c:	0c001424 	muli	r16,at,80
 c000870:	0c001424 	muli	r16,at,80
 c000874:	0c001424 	muli	r16,at,80
 c000878:	0c001424 	muli	r16,at,80
 c00087c:	0c001424 	muli	r16,at,80
 c000880:	0c0013c8 	cmpgei	r16,at,79
 c000884:	0c001348 	cmpgei	r16,at,77
 c000888:	0c000ba8 	cmpgeui	r16,at,46
 c00088c:	0c000ba8 	cmpgeui	r16,at,46
 c000890:	0c000ba8 	cmpgeui	r16,at,46
 c000894:	0c001368 	cmpgeui	r16,at,77
 c000898:	0c001348 	cmpgei	r16,at,77
 c00089c:	0c001424 	muli	r16,at,80
 c0008a0:	0c001424 	muli	r16,at,80
 c0008a4:	0c001374 	orhi	r16,at,77
 c0008a8:	0c001424 	muli	r16,at,80
 c0008ac:	0c001388 	cmpgei	r16,at,78
 c0008b0:	0c00120c 	andi	r16,at,72
 c0008b4:	0c0008f4 	orhi	r16,at,35
 c0008b8:	0c001244 	addi	r16,at,73
 c0008bc:	0c001424 	muli	r16,at,80
 c0008c0:	0c001250 	cmplti	r16,at,73
 c0008c4:	0c001424 	muli	r16,at,80
 c0008c8:	0c0012b4 	orhi	r16,at,74
 c0008cc:	0c001424 	muli	r16,at,80
 c0008d0:	0c001424 	muli	r16,at,80
 c0008d4:	0c0012d4 	ori	r16,at,75
 c0008d8:	d8c03117 	ldw	r3,196(sp)
 c0008dc:	d8802e15 	stw	r2,184(sp)
 c0008e0:	00c7c83a 	sub	r3,zero,r3
 c0008e4:	d8c03115 	stw	r3,196(sp)
 c0008e8:	84000114 	ori	r16,r16,4
 c0008ec:	ac400007 	ldb	r17,0(r21)
 c0008f0:	003f9706 	br	c000750 <__alt_data_end+0xfc000750>
 c0008f4:	00800c04 	movi	r2,48
 c0008f8:	d8802705 	stb	r2,156(sp)
 c0008fc:	00801e04 	movi	r2,120
 c000900:	d8802745 	stb	r2,157(sp)
 c000904:	d9002a17 	ldw	r4,168(sp)
 c000908:	d8802e17 	ldw	r2,184(sp)
 c00090c:	d8002785 	stb	zero,158(sp)
 c000910:	e011883a 	mov	r8,fp
 c000914:	10c00104 	addi	r3,r2,4
 c000918:	14c00017 	ldw	r19,0(r2)
 c00091c:	002d883a 	mov	r22,zero
 c000920:	80800094 	ori	r2,r16,2
 c000924:	2002ca16 	blt	r4,zero,c001450 <___vfprintf_internal_r+0xe88>
 c000928:	00bfdfc4 	movi	r2,-129
 c00092c:	80a4703a 	and	r18,r16,r2
 c000930:	d8c02e15 	stw	r3,184(sp)
 c000934:	94800094 	ori	r18,r18,2
 c000938:	9802b41e 	bne	r19,zero,c00140c <___vfprintf_internal_r+0xe44>
 c00093c:	01430074 	movhi	r5,3073
 c000940:	297ef204 	addi	r5,r5,-1080
 c000944:	d9403915 	stw	r5,228(sp)
 c000948:	04401e04 	movi	r17,120
 c00094c:	d8802a17 	ldw	r2,168(sp)
 c000950:	0039883a 	mov	fp,zero
 c000954:	1001fa26 	beq	r2,zero,c001140 <___vfprintf_internal_r+0xb78>
 c000958:	0027883a 	mov	r19,zero
 c00095c:	002d883a 	mov	r22,zero
 c000960:	00021906 	br	c0011c8 <___vfprintf_internal_r+0xc00>
 c000964:	d9002d17 	ldw	r4,180(sp)
 c000968:	b80b883a 	mov	r5,r23
 c00096c:	c00297c0 	call	c00297c <__swsetup_r>
 c000970:	1005dc1e 	bne	r2,zero,c0020e4 <___vfprintf_internal_r+0x1b1c>
 c000974:	b880030b 	ldhu	r2,12(r23)
 c000978:	00c00284 	movi	r3,10
 c00097c:	1080068c 	andi	r2,r2,26
 c000980:	10ff3a1e 	bne	r2,r3,c00066c <__alt_data_end+0xfc00066c>
 c000984:	b880038f 	ldh	r2,14(r23)
 c000988:	103f3816 	blt	r2,zero,c00066c <__alt_data_end+0xfc00066c>
 c00098c:	d9c02e17 	ldw	r7,184(sp)
 c000990:	d9002d17 	ldw	r4,180(sp)
 c000994:	a80d883a 	mov	r6,r21
 c000998:	b80b883a 	mov	r5,r23
 c00099c:	c0028c00 	call	c0028c0 <__sbprintf>
 c0009a0:	00001106 	br	c0009e8 <___vfprintf_internal_r+0x420>
 c0009a4:	d9002d17 	ldw	r4,180(sp)
 c0009a8:	d9801e04 	addi	r6,sp,120
 c0009ac:	b80b883a 	mov	r5,r23
 c0009b0:	c0072b80 	call	c0072b8 <__sprint_r>
 c0009b4:	1000081e 	bne	r2,zero,c0009d8 <___vfprintf_internal_r+0x410>
 c0009b8:	da000404 	addi	r8,sp,16
 c0009bc:	003f5106 	br	c000704 <__alt_data_end+0xfc000704>
 c0009c0:	d8802017 	ldw	r2,128(sp)
 c0009c4:	10000426 	beq	r2,zero,c0009d8 <___vfprintf_internal_r+0x410>
 c0009c8:	d9002d17 	ldw	r4,180(sp)
 c0009cc:	d9801e04 	addi	r6,sp,120
 c0009d0:	b80b883a 	mov	r5,r23
 c0009d4:	c0072b80 	call	c0072b8 <__sprint_r>
 c0009d8:	b880030b 	ldhu	r2,12(r23)
 c0009dc:	1080100c 	andi	r2,r2,64
 c0009e0:	1005c01e 	bne	r2,zero,c0020e4 <___vfprintf_internal_r+0x1b1c>
 c0009e4:	d8802f17 	ldw	r2,188(sp)
 c0009e8:	dfc04717 	ldw	ra,284(sp)
 c0009ec:	df004617 	ldw	fp,280(sp)
 c0009f0:	ddc04517 	ldw	r23,276(sp)
 c0009f4:	dd804417 	ldw	r22,272(sp)
 c0009f8:	dd404317 	ldw	r21,268(sp)
 c0009fc:	dd004217 	ldw	r20,264(sp)
 c000a00:	dcc04117 	ldw	r19,260(sp)
 c000a04:	dc804017 	ldw	r18,256(sp)
 c000a08:	dc403f17 	ldw	r17,252(sp)
 c000a0c:	dc003e17 	ldw	r16,248(sp)
 c000a10:	dec04804 	addi	sp,sp,288
 c000a14:	f800283a 	ret
 c000a18:	d9002d17 	ldw	r4,180(sp)
 c000a1c:	c0049880 	call	c004988 <__sinit>
 c000a20:	003f0206 	br	c00062c <__alt_data_end+0xfc00062c>
 c000a24:	d9002e17 	ldw	r4,184(sp)
 c000a28:	d9402e17 	ldw	r5,184(sp)
 c000a2c:	21000017 	ldw	r4,0(r4)
 c000a30:	28800104 	addi	r2,r5,4
 c000a34:	d9003115 	stw	r4,196(sp)
 c000a38:	203fa716 	blt	r4,zero,c0008d8 <__alt_data_end+0xfc0008d8>
 c000a3c:	d8802e15 	stw	r2,184(sp)
 c000a40:	ac400007 	ldb	r17,0(r21)
 c000a44:	003f4206 	br	c000750 <__alt_data_end+0xfc000750>
 c000a48:	ac400007 	ldb	r17,0(r21)
 c000a4c:	01000a84 	movi	r4,42
 c000a50:	a8c00044 	addi	r3,r21,1
 c000a54:	89075826 	beq	r17,r4,c0027b8 <___vfprintf_internal_r+0x21f0>
 c000a58:	8cbff404 	addi	r18,r17,-48
 c000a5c:	b486ae36 	bltu	r22,r18,c002518 <___vfprintf_internal_r+0x1f50>
 c000a60:	0009883a 	mov	r4,zero
 c000a64:	1823883a 	mov	r17,r3
 c000a68:	01400284 	movi	r5,10
 c000a6c:	c0005340 	call	c000534 <__mulsi3>
 c000a70:	88c00007 	ldb	r3,0(r17)
 c000a74:	1489883a 	add	r4,r2,r18
 c000a78:	8d400044 	addi	r21,r17,1
 c000a7c:	1cbff404 	addi	r18,r3,-48
 c000a80:	a823883a 	mov	r17,r21
 c000a84:	b4bff82e 	bgeu	r22,r18,c000a68 <__alt_data_end+0xfc000a68>
 c000a88:	1823883a 	mov	r17,r3
 c000a8c:	2005f616 	blt	r4,zero,c002268 <___vfprintf_internal_r+0x1ca0>
 c000a90:	d9002a15 	stw	r4,168(sp)
 c000a94:	003f2f06 	br	c000754 <__alt_data_end+0xfc000754>
 c000a98:	84002014 	ori	r16,r16,128
 c000a9c:	ac400007 	ldb	r17,0(r21)
 c000aa0:	003f2b06 	br	c000750 <__alt_data_end+0xfc000750>
 c000aa4:	8cbff404 	addi	r18,r17,-48
 c000aa8:	d8003115 	stw	zero,196(sp)
 c000aac:	0009883a 	mov	r4,zero
 c000ab0:	a823883a 	mov	r17,r21
 c000ab4:	01400284 	movi	r5,10
 c000ab8:	c0005340 	call	c000534 <__mulsi3>
 c000abc:	88c00007 	ldb	r3,0(r17)
 c000ac0:	9089883a 	add	r4,r18,r2
 c000ac4:	ad400044 	addi	r21,r21,1
 c000ac8:	1cbff404 	addi	r18,r3,-48
 c000acc:	a823883a 	mov	r17,r21
 c000ad0:	b4bff82e 	bgeu	r22,r18,c000ab4 <__alt_data_end+0xfc000ab4>
 c000ad4:	1823883a 	mov	r17,r3
 c000ad8:	d9003115 	stw	r4,196(sp)
 c000adc:	003f1d06 	br	c000754 <__alt_data_end+0xfc000754>
 c000ae0:	8025883a 	mov	r18,r16
 c000ae4:	dc002903 	ldbu	r16,164(sp)
 c000ae8:	e011883a 	mov	r8,fp
 c000aec:	84003fcc 	andi	r16,r16,255
 c000af0:	8007531e 	bne	r16,zero,c002840 <___vfprintf_internal_r+0x2278>
 c000af4:	94800414 	ori	r18,r18,16
 c000af8:	9080080c 	andi	r2,r18,32
 c000afc:	1003a326 	beq	r2,zero,c00198c <___vfprintf_internal_r+0x13c4>
 c000b00:	d9002e17 	ldw	r4,184(sp)
 c000b04:	20800117 	ldw	r2,4(r4)
 c000b08:	24c00017 	ldw	r19,0(r4)
 c000b0c:	21000204 	addi	r4,r4,8
 c000b10:	d9002e15 	stw	r4,184(sp)
 c000b14:	102d883a 	mov	r22,r2
 c000b18:	10047316 	blt	r2,zero,c001ce8 <___vfprintf_internal_r+0x1720>
 c000b1c:	d9002a17 	ldw	r4,168(sp)
 c000b20:	df002783 	ldbu	fp,158(sp)
 c000b24:	2003e416 	blt	r4,zero,c001ab8 <___vfprintf_internal_r+0x14f0>
 c000b28:	00ffdfc4 	movi	r3,-129
 c000b2c:	9d84b03a 	or	r2,r19,r22
 c000b30:	90e4703a 	and	r18,r18,r3
 c000b34:	10018026 	beq	r2,zero,c001138 <___vfprintf_internal_r+0xb70>
 c000b38:	b003ab26 	beq	r22,zero,c0019e8 <___vfprintf_internal_r+0x1420>
 c000b3c:	dc402915 	stw	r17,164(sp)
 c000b40:	dc001e04 	addi	r16,sp,120
 c000b44:	b023883a 	mov	r17,r22
 c000b48:	402d883a 	mov	r22,r8
 c000b4c:	9809883a 	mov	r4,r19
 c000b50:	880b883a 	mov	r5,r17
 c000b54:	01800284 	movi	r6,10
 c000b58:	000f883a 	mov	r7,zero
 c000b5c:	c00a3840 	call	c00a384 <__umoddi3>
 c000b60:	10800c04 	addi	r2,r2,48
 c000b64:	843fffc4 	addi	r16,r16,-1
 c000b68:	9809883a 	mov	r4,r19
 c000b6c:	880b883a 	mov	r5,r17
 c000b70:	80800005 	stb	r2,0(r16)
 c000b74:	01800284 	movi	r6,10
 c000b78:	000f883a 	mov	r7,zero
 c000b7c:	c009d880 	call	c009d88 <__udivdi3>
 c000b80:	1027883a 	mov	r19,r2
 c000b84:	10c4b03a 	or	r2,r2,r3
 c000b88:	1823883a 	mov	r17,r3
 c000b8c:	103fef1e 	bne	r2,zero,c000b4c <__alt_data_end+0xfc000b4c>
 c000b90:	d8c02817 	ldw	r3,160(sp)
 c000b94:	dc402917 	ldw	r17,164(sp)
 c000b98:	b011883a 	mov	r8,r22
 c000b9c:	1c07c83a 	sub	r3,r3,r16
 c000ba0:	d8c02b15 	stw	r3,172(sp)
 c000ba4:	00005f06 	br	c000d24 <___vfprintf_internal_r+0x75c>
 c000ba8:	8025883a 	mov	r18,r16
 c000bac:	dc002903 	ldbu	r16,164(sp)
 c000bb0:	e011883a 	mov	r8,fp
 c000bb4:	84003fcc 	andi	r16,r16,255
 c000bb8:	80071e1e 	bne	r16,zero,c002834 <___vfprintf_internal_r+0x226c>
 c000bbc:	9080020c 	andi	r2,r18,8
 c000bc0:	1004af26 	beq	r2,zero,c001e80 <___vfprintf_internal_r+0x18b8>
 c000bc4:	d9002e17 	ldw	r4,184(sp)
 c000bc8:	d9402e17 	ldw	r5,184(sp)
 c000bcc:	d8802e17 	ldw	r2,184(sp)
 c000bd0:	21000017 	ldw	r4,0(r4)
 c000bd4:	29400117 	ldw	r5,4(r5)
 c000bd8:	10800204 	addi	r2,r2,8
 c000bdc:	d9003615 	stw	r4,216(sp)
 c000be0:	d9403815 	stw	r5,224(sp)
 c000be4:	d8802e15 	stw	r2,184(sp)
 c000be8:	d9003617 	ldw	r4,216(sp)
 c000bec:	d9403817 	ldw	r5,224(sp)
 c000bf0:	da003d15 	stw	r8,244(sp)
 c000bf4:	04000044 	movi	r16,1
 c000bf8:	c006e440 	call	c006e44 <__fpclassifyd>
 c000bfc:	da003d17 	ldw	r8,244(sp)
 c000c00:	1404441e 	bne	r2,r16,c001d14 <___vfprintf_internal_r+0x174c>
 c000c04:	d9003617 	ldw	r4,216(sp)
 c000c08:	d9403817 	ldw	r5,224(sp)
 c000c0c:	000d883a 	mov	r6,zero
 c000c10:	000f883a 	mov	r7,zero
 c000c14:	c00bedc0 	call	c00bedc <__ledf2>
 c000c18:	da003d17 	ldw	r8,244(sp)
 c000c1c:	1005e316 	blt	r2,zero,c0023ac <___vfprintf_internal_r+0x1de4>
 c000c20:	df002783 	ldbu	fp,158(sp)
 c000c24:	008011c4 	movi	r2,71
 c000c28:	1445580e 	bge	r2,r17,c00218c <___vfprintf_internal_r+0x1bc4>
 c000c2c:	04030074 	movhi	r16,3073
 c000c30:	843eea04 	addi	r16,r16,-1112
 c000c34:	00c000c4 	movi	r3,3
 c000c38:	00bfdfc4 	movi	r2,-129
 c000c3c:	d8c02915 	stw	r3,164(sp)
 c000c40:	90a4703a 	and	r18,r18,r2
 c000c44:	d8c02b15 	stw	r3,172(sp)
 c000c48:	d8002a15 	stw	zero,168(sp)
 c000c4c:	d8003215 	stw	zero,200(sp)
 c000c50:	00003a06 	br	c000d3c <___vfprintf_internal_r+0x774>
 c000c54:	84000214 	ori	r16,r16,8
 c000c58:	ac400007 	ldb	r17,0(r21)
 c000c5c:	003ebc06 	br	c000750 <__alt_data_end+0xfc000750>
 c000c60:	8025883a 	mov	r18,r16
 c000c64:	dc002903 	ldbu	r16,164(sp)
 c000c68:	e011883a 	mov	r8,fp
 c000c6c:	84003fcc 	andi	r16,r16,255
 c000c70:	8007001e 	bne	r16,zero,c002874 <___vfprintf_internal_r+0x22ac>
 c000c74:	94800414 	ori	r18,r18,16
 c000c78:	9080080c 	andi	r2,r18,32
 c000c7c:	1002fa26 	beq	r2,zero,c001868 <___vfprintf_internal_r+0x12a0>
 c000c80:	d9002e17 	ldw	r4,184(sp)
 c000c84:	d9402a17 	ldw	r5,168(sp)
 c000c88:	d8002785 	stb	zero,158(sp)
 c000c8c:	20800204 	addi	r2,r4,8
 c000c90:	24c00017 	ldw	r19,0(r4)
 c000c94:	25800117 	ldw	r22,4(r4)
 c000c98:	2804b116 	blt	r5,zero,c001f60 <___vfprintf_internal_r+0x1998>
 c000c9c:	013fdfc4 	movi	r4,-129
 c000ca0:	9d86b03a 	or	r3,r19,r22
 c000ca4:	d8802e15 	stw	r2,184(sp)
 c000ca8:	9124703a 	and	r18,r18,r4
 c000cac:	1802fb1e 	bne	r3,zero,c00189c <___vfprintf_internal_r+0x12d4>
 c000cb0:	d8c02a17 	ldw	r3,168(sp)
 c000cb4:	0039883a 	mov	fp,zero
 c000cb8:	1805e526 	beq	r3,zero,c002450 <___vfprintf_internal_r+0x1e88>
 c000cbc:	0027883a 	mov	r19,zero
 c000cc0:	002d883a 	mov	r22,zero
 c000cc4:	dc001e04 	addi	r16,sp,120
 c000cc8:	9806d0fa 	srli	r3,r19,3
 c000ccc:	b008977a 	slli	r4,r22,29
 c000cd0:	b02cd0fa 	srli	r22,r22,3
 c000cd4:	9cc001cc 	andi	r19,r19,7
 c000cd8:	98800c04 	addi	r2,r19,48
 c000cdc:	843fffc4 	addi	r16,r16,-1
 c000ce0:	20e6b03a 	or	r19,r4,r3
 c000ce4:	80800005 	stb	r2,0(r16)
 c000ce8:	9d86b03a 	or	r3,r19,r22
 c000cec:	183ff61e 	bne	r3,zero,c000cc8 <__alt_data_end+0xfc000cc8>
 c000cf0:	90c0004c 	andi	r3,r18,1
 c000cf4:	18014126 	beq	r3,zero,c0011fc <___vfprintf_internal_r+0xc34>
 c000cf8:	10803fcc 	andi	r2,r2,255
 c000cfc:	1080201c 	xori	r2,r2,128
 c000d00:	10bfe004 	addi	r2,r2,-128
 c000d04:	00c00c04 	movi	r3,48
 c000d08:	10c13c26 	beq	r2,r3,c0011fc <___vfprintf_internal_r+0xc34>
 c000d0c:	80ffffc5 	stb	r3,-1(r16)
 c000d10:	d8c02817 	ldw	r3,160(sp)
 c000d14:	80bfffc4 	addi	r2,r16,-1
 c000d18:	1021883a 	mov	r16,r2
 c000d1c:	1887c83a 	sub	r3,r3,r2
 c000d20:	d8c02b15 	stw	r3,172(sp)
 c000d24:	d8802b17 	ldw	r2,172(sp)
 c000d28:	d9002a17 	ldw	r4,168(sp)
 c000d2c:	1100010e 	bge	r2,r4,c000d34 <___vfprintf_internal_r+0x76c>
 c000d30:	2005883a 	mov	r2,r4
 c000d34:	d8802915 	stw	r2,164(sp)
 c000d38:	d8003215 	stw	zero,200(sp)
 c000d3c:	e7003fcc 	andi	fp,fp,255
 c000d40:	e700201c 	xori	fp,fp,128
 c000d44:	e73fe004 	addi	fp,fp,-128
 c000d48:	e0000326 	beq	fp,zero,c000d58 <___vfprintf_internal_r+0x790>
 c000d4c:	d8c02917 	ldw	r3,164(sp)
 c000d50:	18c00044 	addi	r3,r3,1
 c000d54:	d8c02915 	stw	r3,164(sp)
 c000d58:	90c0008c 	andi	r3,r18,2
 c000d5c:	d8c02c15 	stw	r3,176(sp)
 c000d60:	18000326 	beq	r3,zero,c000d70 <___vfprintf_internal_r+0x7a8>
 c000d64:	d8c02917 	ldw	r3,164(sp)
 c000d68:	18c00084 	addi	r3,r3,2
 c000d6c:	d8c02915 	stw	r3,164(sp)
 c000d70:	90c0210c 	andi	r3,r18,132
 c000d74:	d8c03015 	stw	r3,192(sp)
 c000d78:	1801c51e 	bne	r3,zero,c001490 <___vfprintf_internal_r+0xec8>
 c000d7c:	d9003117 	ldw	r4,196(sp)
 c000d80:	d8c02917 	ldw	r3,164(sp)
 c000d84:	20e7c83a 	sub	r19,r4,r3
 c000d88:	04c1c10e 	bge	zero,r19,c001490 <___vfprintf_internal_r+0xec8>
 c000d8c:	02400404 	movi	r9,16
 c000d90:	d8c02017 	ldw	r3,128(sp)
 c000d94:	d8801f17 	ldw	r2,124(sp)
 c000d98:	4cc52f0e 	bge	r9,r19,c002258 <___vfprintf_internal_r+0x1c90>
 c000d9c:	01430074 	movhi	r5,3073
 c000da0:	297efd84 	addi	r5,r5,-1034
 c000da4:	dc403b15 	stw	r17,236(sp)
 c000da8:	d9403515 	stw	r5,212(sp)
 c000dac:	9823883a 	mov	r17,r19
 c000db0:	482d883a 	mov	r22,r9
 c000db4:	9027883a 	mov	r19,r18
 c000db8:	070001c4 	movi	fp,7
 c000dbc:	8025883a 	mov	r18,r16
 c000dc0:	dc002d17 	ldw	r16,180(sp)
 c000dc4:	00000306 	br	c000dd4 <___vfprintf_internal_r+0x80c>
 c000dc8:	8c7ffc04 	addi	r17,r17,-16
 c000dcc:	42000204 	addi	r8,r8,8
 c000dd0:	b440130e 	bge	r22,r17,c000e20 <___vfprintf_internal_r+0x858>
 c000dd4:	01030074 	movhi	r4,3073
 c000dd8:	18c00404 	addi	r3,r3,16
 c000ddc:	10800044 	addi	r2,r2,1
 c000de0:	213efd84 	addi	r4,r4,-1034
 c000de4:	41000015 	stw	r4,0(r8)
 c000de8:	45800115 	stw	r22,4(r8)
 c000dec:	d8c02015 	stw	r3,128(sp)
 c000df0:	d8801f15 	stw	r2,124(sp)
 c000df4:	e0bff40e 	bge	fp,r2,c000dc8 <__alt_data_end+0xfc000dc8>
 c000df8:	d9801e04 	addi	r6,sp,120
 c000dfc:	b80b883a 	mov	r5,r23
 c000e00:	8009883a 	mov	r4,r16
 c000e04:	c0072b80 	call	c0072b8 <__sprint_r>
 c000e08:	103ef31e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c000e0c:	8c7ffc04 	addi	r17,r17,-16
 c000e10:	d8c02017 	ldw	r3,128(sp)
 c000e14:	d8801f17 	ldw	r2,124(sp)
 c000e18:	da000404 	addi	r8,sp,16
 c000e1c:	b47fed16 	blt	r22,r17,c000dd4 <__alt_data_end+0xfc000dd4>
 c000e20:	9021883a 	mov	r16,r18
 c000e24:	9825883a 	mov	r18,r19
 c000e28:	8827883a 	mov	r19,r17
 c000e2c:	dc403b17 	ldw	r17,236(sp)
 c000e30:	d9403517 	ldw	r5,212(sp)
 c000e34:	98c7883a 	add	r3,r19,r3
 c000e38:	10800044 	addi	r2,r2,1
 c000e3c:	41400015 	stw	r5,0(r8)
 c000e40:	44c00115 	stw	r19,4(r8)
 c000e44:	d8c02015 	stw	r3,128(sp)
 c000e48:	d8801f15 	stw	r2,124(sp)
 c000e4c:	010001c4 	movi	r4,7
 c000e50:	2082c516 	blt	r4,r2,c001968 <___vfprintf_internal_r+0x13a0>
 c000e54:	df002787 	ldb	fp,158(sp)
 c000e58:	42000204 	addi	r8,r8,8
 c000e5c:	e0000c26 	beq	fp,zero,c000e90 <___vfprintf_internal_r+0x8c8>
 c000e60:	d8801f17 	ldw	r2,124(sp)
 c000e64:	d9002784 	addi	r4,sp,158
 c000e68:	18c00044 	addi	r3,r3,1
 c000e6c:	10800044 	addi	r2,r2,1
 c000e70:	41000015 	stw	r4,0(r8)
 c000e74:	01000044 	movi	r4,1
 c000e78:	41000115 	stw	r4,4(r8)
 c000e7c:	d8c02015 	stw	r3,128(sp)
 c000e80:	d8801f15 	stw	r2,124(sp)
 c000e84:	010001c4 	movi	r4,7
 c000e88:	20825e16 	blt	r4,r2,c001804 <___vfprintf_internal_r+0x123c>
 c000e8c:	42000204 	addi	r8,r8,8
 c000e90:	d8802c17 	ldw	r2,176(sp)
 c000e94:	10000c26 	beq	r2,zero,c000ec8 <___vfprintf_internal_r+0x900>
 c000e98:	d8801f17 	ldw	r2,124(sp)
 c000e9c:	d9002704 	addi	r4,sp,156
 c000ea0:	18c00084 	addi	r3,r3,2
 c000ea4:	10800044 	addi	r2,r2,1
 c000ea8:	41000015 	stw	r4,0(r8)
 c000eac:	01000084 	movi	r4,2
 c000eb0:	41000115 	stw	r4,4(r8)
 c000eb4:	d8c02015 	stw	r3,128(sp)
 c000eb8:	d8801f15 	stw	r2,124(sp)
 c000ebc:	010001c4 	movi	r4,7
 c000ec0:	20825816 	blt	r4,r2,c001824 <___vfprintf_internal_r+0x125c>
 c000ec4:	42000204 	addi	r8,r8,8
 c000ec8:	d9003017 	ldw	r4,192(sp)
 c000ecc:	00802004 	movi	r2,128
 c000ed0:	2081bb26 	beq	r4,r2,c0015c0 <___vfprintf_internal_r+0xff8>
 c000ed4:	d9402a17 	ldw	r5,168(sp)
 c000ed8:	d8802b17 	ldw	r2,172(sp)
 c000edc:	28adc83a 	sub	r22,r5,r2
 c000ee0:	0580310e 	bge	zero,r22,c000fa8 <___vfprintf_internal_r+0x9e0>
 c000ee4:	07000404 	movi	fp,16
 c000ee8:	d8801f17 	ldw	r2,124(sp)
 c000eec:	e584360e 	bge	fp,r22,c001fc8 <___vfprintf_internal_r+0x1a00>
 c000ef0:	01430074 	movhi	r5,3073
 c000ef4:	297ef984 	addi	r5,r5,-1050
 c000ef8:	dc402a15 	stw	r17,168(sp)
 c000efc:	d9402c15 	stw	r5,176(sp)
 c000f00:	b023883a 	mov	r17,r22
 c000f04:	04c001c4 	movi	r19,7
 c000f08:	a82d883a 	mov	r22,r21
 c000f0c:	902b883a 	mov	r21,r18
 c000f10:	8025883a 	mov	r18,r16
 c000f14:	dc002d17 	ldw	r16,180(sp)
 c000f18:	00000306 	br	c000f28 <___vfprintf_internal_r+0x960>
 c000f1c:	8c7ffc04 	addi	r17,r17,-16
 c000f20:	42000204 	addi	r8,r8,8
 c000f24:	e440110e 	bge	fp,r17,c000f6c <___vfprintf_internal_r+0x9a4>
 c000f28:	18c00404 	addi	r3,r3,16
 c000f2c:	10800044 	addi	r2,r2,1
 c000f30:	45000015 	stw	r20,0(r8)
 c000f34:	47000115 	stw	fp,4(r8)
 c000f38:	d8c02015 	stw	r3,128(sp)
 c000f3c:	d8801f15 	stw	r2,124(sp)
 c000f40:	98bff60e 	bge	r19,r2,c000f1c <__alt_data_end+0xfc000f1c>
 c000f44:	d9801e04 	addi	r6,sp,120
 c000f48:	b80b883a 	mov	r5,r23
 c000f4c:	8009883a 	mov	r4,r16
 c000f50:	c0072b80 	call	c0072b8 <__sprint_r>
 c000f54:	103ea01e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c000f58:	8c7ffc04 	addi	r17,r17,-16
 c000f5c:	d8c02017 	ldw	r3,128(sp)
 c000f60:	d8801f17 	ldw	r2,124(sp)
 c000f64:	da000404 	addi	r8,sp,16
 c000f68:	e47fef16 	blt	fp,r17,c000f28 <__alt_data_end+0xfc000f28>
 c000f6c:	9021883a 	mov	r16,r18
 c000f70:	a825883a 	mov	r18,r21
 c000f74:	b02b883a 	mov	r21,r22
 c000f78:	882d883a 	mov	r22,r17
 c000f7c:	dc402a17 	ldw	r17,168(sp)
 c000f80:	d9002c17 	ldw	r4,176(sp)
 c000f84:	1d87883a 	add	r3,r3,r22
 c000f88:	10800044 	addi	r2,r2,1
 c000f8c:	41000015 	stw	r4,0(r8)
 c000f90:	45800115 	stw	r22,4(r8)
 c000f94:	d8c02015 	stw	r3,128(sp)
 c000f98:	d8801f15 	stw	r2,124(sp)
 c000f9c:	010001c4 	movi	r4,7
 c000fa0:	20821016 	blt	r4,r2,c0017e4 <___vfprintf_internal_r+0x121c>
 c000fa4:	42000204 	addi	r8,r8,8
 c000fa8:	9080400c 	andi	r2,r18,256
 c000fac:	10013a1e 	bne	r2,zero,c001498 <___vfprintf_internal_r+0xed0>
 c000fb0:	d9402b17 	ldw	r5,172(sp)
 c000fb4:	d8801f17 	ldw	r2,124(sp)
 c000fb8:	44000015 	stw	r16,0(r8)
 c000fbc:	1947883a 	add	r3,r3,r5
 c000fc0:	10800044 	addi	r2,r2,1
 c000fc4:	41400115 	stw	r5,4(r8)
 c000fc8:	d8c02015 	stw	r3,128(sp)
 c000fcc:	d8801f15 	stw	r2,124(sp)
 c000fd0:	010001c4 	movi	r4,7
 c000fd4:	2081f516 	blt	r4,r2,c0017ac <___vfprintf_internal_r+0x11e4>
 c000fd8:	42000204 	addi	r8,r8,8
 c000fdc:	9480010c 	andi	r18,r18,4
 c000fe0:	90003226 	beq	r18,zero,c0010ac <___vfprintf_internal_r+0xae4>
 c000fe4:	d9403117 	ldw	r5,196(sp)
 c000fe8:	d8802917 	ldw	r2,164(sp)
 c000fec:	28a1c83a 	sub	r16,r5,r2
 c000ff0:	04002e0e 	bge	zero,r16,c0010ac <___vfprintf_internal_r+0xae4>
 c000ff4:	04400404 	movi	r17,16
 c000ff8:	d8801f17 	ldw	r2,124(sp)
 c000ffc:	8c04c40e 	bge	r17,r16,c002310 <___vfprintf_internal_r+0x1d48>
 c001000:	01430074 	movhi	r5,3073
 c001004:	297efd84 	addi	r5,r5,-1034
 c001008:	d9403515 	stw	r5,212(sp)
 c00100c:	048001c4 	movi	r18,7
 c001010:	dcc02d17 	ldw	r19,180(sp)
 c001014:	00000306 	br	c001024 <___vfprintf_internal_r+0xa5c>
 c001018:	843ffc04 	addi	r16,r16,-16
 c00101c:	42000204 	addi	r8,r8,8
 c001020:	8c00130e 	bge	r17,r16,c001070 <___vfprintf_internal_r+0xaa8>
 c001024:	01030074 	movhi	r4,3073
 c001028:	18c00404 	addi	r3,r3,16
 c00102c:	10800044 	addi	r2,r2,1
 c001030:	213efd84 	addi	r4,r4,-1034
 c001034:	41000015 	stw	r4,0(r8)
 c001038:	44400115 	stw	r17,4(r8)
 c00103c:	d8c02015 	stw	r3,128(sp)
 c001040:	d8801f15 	stw	r2,124(sp)
 c001044:	90bff40e 	bge	r18,r2,c001018 <__alt_data_end+0xfc001018>
 c001048:	d9801e04 	addi	r6,sp,120
 c00104c:	b80b883a 	mov	r5,r23
 c001050:	9809883a 	mov	r4,r19
 c001054:	c0072b80 	call	c0072b8 <__sprint_r>
 c001058:	103e5f1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c00105c:	843ffc04 	addi	r16,r16,-16
 c001060:	d8c02017 	ldw	r3,128(sp)
 c001064:	d8801f17 	ldw	r2,124(sp)
 c001068:	da000404 	addi	r8,sp,16
 c00106c:	8c3fed16 	blt	r17,r16,c001024 <__alt_data_end+0xfc001024>
 c001070:	d9403517 	ldw	r5,212(sp)
 c001074:	1c07883a 	add	r3,r3,r16
 c001078:	10800044 	addi	r2,r2,1
 c00107c:	41400015 	stw	r5,0(r8)
 c001080:	44000115 	stw	r16,4(r8)
 c001084:	d8c02015 	stw	r3,128(sp)
 c001088:	d8801f15 	stw	r2,124(sp)
 c00108c:	010001c4 	movi	r4,7
 c001090:	2080060e 	bge	r4,r2,c0010ac <___vfprintf_internal_r+0xae4>
 c001094:	d9002d17 	ldw	r4,180(sp)
 c001098:	d9801e04 	addi	r6,sp,120
 c00109c:	b80b883a 	mov	r5,r23
 c0010a0:	c0072b80 	call	c0072b8 <__sprint_r>
 c0010a4:	103e4c1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0010a8:	d8c02017 	ldw	r3,128(sp)
 c0010ac:	d8803117 	ldw	r2,196(sp)
 c0010b0:	d9002917 	ldw	r4,164(sp)
 c0010b4:	1100010e 	bge	r2,r4,c0010bc <___vfprintf_internal_r+0xaf4>
 c0010b8:	2005883a 	mov	r2,r4
 c0010bc:	d9402f17 	ldw	r5,188(sp)
 c0010c0:	288b883a 	add	r5,r5,r2
 c0010c4:	d9402f15 	stw	r5,188(sp)
 c0010c8:	1801c01e 	bne	r3,zero,c0017cc <___vfprintf_internal_r+0x1204>
 c0010cc:	a8800007 	ldb	r2,0(r21)
 c0010d0:	d8001f15 	stw	zero,124(sp)
 c0010d4:	da000404 	addi	r8,sp,16
 c0010d8:	103d751e 	bne	r2,zero,c0006b0 <__alt_data_end+0xfc0006b0>
 c0010dc:	a823883a 	mov	r17,r21
 c0010e0:	003d8b06 	br	c000710 <__alt_data_end+0xfc000710>
 c0010e4:	8025883a 	mov	r18,r16
 c0010e8:	dc002903 	ldbu	r16,164(sp)
 c0010ec:	e011883a 	mov	r8,fp
 c0010f0:	84003fcc 	andi	r16,r16,255
 c0010f4:	8005e51e 	bne	r16,zero,c00288c <___vfprintf_internal_r+0x22c4>
 c0010f8:	94800414 	ori	r18,r18,16
 c0010fc:	9080080c 	andi	r2,r18,32
 c001100:	10022b26 	beq	r2,zero,c0019b0 <___vfprintf_internal_r+0x13e8>
 c001104:	d9002e17 	ldw	r4,184(sp)
 c001108:	d9402a17 	ldw	r5,168(sp)
 c00110c:	d8002785 	stb	zero,158(sp)
 c001110:	20c00204 	addi	r3,r4,8
 c001114:	24c00017 	ldw	r19,0(r4)
 c001118:	25800117 	ldw	r22,4(r4)
 c00111c:	28042e16 	blt	r5,zero,c0021d8 <___vfprintf_internal_r+0x1c10>
 c001120:	013fdfc4 	movi	r4,-129
 c001124:	9d84b03a 	or	r2,r19,r22
 c001128:	d8c02e15 	stw	r3,184(sp)
 c00112c:	9124703a 	and	r18,r18,r4
 c001130:	0039883a 	mov	fp,zero
 c001134:	103e801e 	bne	r2,zero,c000b38 <__alt_data_end+0xfc000b38>
 c001138:	d9002a17 	ldw	r4,168(sp)
 c00113c:	2002e01e 	bne	r4,zero,c001cc0 <___vfprintf_internal_r+0x16f8>
 c001140:	d8002a15 	stw	zero,168(sp)
 c001144:	d8002b15 	stw	zero,172(sp)
 c001148:	dc001e04 	addi	r16,sp,120
 c00114c:	003ef506 	br	c000d24 <__alt_data_end+0xfc000d24>
 c001150:	8025883a 	mov	r18,r16
 c001154:	dc002903 	ldbu	r16,164(sp)
 c001158:	e011883a 	mov	r8,fp
 c00115c:	84003fcc 	andi	r16,r16,255
 c001160:	8005ba1e 	bne	r16,zero,c00284c <___vfprintf_internal_r+0x2284>
 c001164:	01030074 	movhi	r4,3073
 c001168:	213eed04 	addi	r4,r4,-1100
 c00116c:	d9003915 	stw	r4,228(sp)
 c001170:	9080080c 	andi	r2,r18,32
 c001174:	10006126 	beq	r2,zero,c0012fc <___vfprintf_internal_r+0xd34>
 c001178:	d9402e17 	ldw	r5,184(sp)
 c00117c:	2cc00017 	ldw	r19,0(r5)
 c001180:	2d800117 	ldw	r22,4(r5)
 c001184:	29400204 	addi	r5,r5,8
 c001188:	d9402e15 	stw	r5,184(sp)
 c00118c:	9080004c 	andi	r2,r18,1
 c001190:	1001ac26 	beq	r2,zero,c001844 <___vfprintf_internal_r+0x127c>
 c001194:	9d84b03a 	or	r2,r19,r22
 c001198:	10038526 	beq	r2,zero,c001fb0 <___vfprintf_internal_r+0x19e8>
 c00119c:	d8c02a17 	ldw	r3,168(sp)
 c0011a0:	00800c04 	movi	r2,48
 c0011a4:	d8802705 	stb	r2,156(sp)
 c0011a8:	dc402745 	stb	r17,157(sp)
 c0011ac:	d8002785 	stb	zero,158(sp)
 c0011b0:	90800094 	ori	r2,r18,2
 c0011b4:	18047916 	blt	r3,zero,c00239c <___vfprintf_internal_r+0x1dd4>
 c0011b8:	00bfdfc4 	movi	r2,-129
 c0011bc:	90a4703a 	and	r18,r18,r2
 c0011c0:	94800094 	ori	r18,r18,2
 c0011c4:	0039883a 	mov	fp,zero
 c0011c8:	d9003917 	ldw	r4,228(sp)
 c0011cc:	dc001e04 	addi	r16,sp,120
 c0011d0:	988003cc 	andi	r2,r19,15
 c0011d4:	b006973a 	slli	r3,r22,28
 c0011d8:	2085883a 	add	r2,r4,r2
 c0011dc:	9826d13a 	srli	r19,r19,4
 c0011e0:	10800003 	ldbu	r2,0(r2)
 c0011e4:	b02cd13a 	srli	r22,r22,4
 c0011e8:	843fffc4 	addi	r16,r16,-1
 c0011ec:	1ce6b03a 	or	r19,r3,r19
 c0011f0:	80800005 	stb	r2,0(r16)
 c0011f4:	9d84b03a 	or	r2,r19,r22
 c0011f8:	103ff51e 	bne	r2,zero,c0011d0 <__alt_data_end+0xfc0011d0>
 c0011fc:	d8c02817 	ldw	r3,160(sp)
 c001200:	1c07c83a 	sub	r3,r3,r16
 c001204:	d8c02b15 	stw	r3,172(sp)
 c001208:	003ec606 	br	c000d24 <__alt_data_end+0xfc000d24>
 c00120c:	8025883a 	mov	r18,r16
 c001210:	dc002903 	ldbu	r16,164(sp)
 c001214:	e011883a 	mov	r8,fp
 c001218:	84003fcc 	andi	r16,r16,255
 c00121c:	803e9626 	beq	r16,zero,c000c78 <__alt_data_end+0xfc000c78>
 c001220:	d8c02b03 	ldbu	r3,172(sp)
 c001224:	d8c02785 	stb	r3,158(sp)
 c001228:	003e9306 	br	c000c78 <__alt_data_end+0xfc000c78>
 c00122c:	00c00044 	movi	r3,1
 c001230:	d8c02905 	stb	r3,164(sp)
 c001234:	00c00ac4 	movi	r3,43
 c001238:	d8c02b05 	stb	r3,172(sp)
 c00123c:	ac400007 	ldb	r17,0(r21)
 c001240:	003d4306 	br	c000750 <__alt_data_end+0xfc000750>
 c001244:	84000814 	ori	r16,r16,32
 c001248:	ac400007 	ldb	r17,0(r21)
 c00124c:	003d4006 	br	c000750 <__alt_data_end+0xfc000750>
 c001250:	d8802e17 	ldw	r2,184(sp)
 c001254:	8025883a 	mov	r18,r16
 c001258:	d8002785 	stb	zero,158(sp)
 c00125c:	14000017 	ldw	r16,0(r2)
 c001260:	e011883a 	mov	r8,fp
 c001264:	14c00104 	addi	r19,r2,4
 c001268:	80042d26 	beq	r16,zero,c002320 <___vfprintf_internal_r+0x1d58>
 c00126c:	d8c02a17 	ldw	r3,168(sp)
 c001270:	1803e416 	blt	r3,zero,c002204 <___vfprintf_internal_r+0x1c3c>
 c001274:	180d883a 	mov	r6,r3
 c001278:	000b883a 	mov	r5,zero
 c00127c:	8009883a 	mov	r4,r16
 c001280:	df003d15 	stw	fp,244(sp)
 c001284:	c005a380 	call	c005a38 <memchr>
 c001288:	da003d17 	ldw	r8,244(sp)
 c00128c:	10046826 	beq	r2,zero,c002430 <___vfprintf_internal_r+0x1e68>
 c001290:	1405c83a 	sub	r2,r2,r16
 c001294:	d8802b15 	stw	r2,172(sp)
 c001298:	1003e016 	blt	r2,zero,c00221c <___vfprintf_internal_r+0x1c54>
 c00129c:	df002783 	ldbu	fp,158(sp)
 c0012a0:	d8802915 	stw	r2,164(sp)
 c0012a4:	dcc02e15 	stw	r19,184(sp)
 c0012a8:	d8002a15 	stw	zero,168(sp)
 c0012ac:	d8003215 	stw	zero,200(sp)
 c0012b0:	003ea206 	br	c000d3c <__alt_data_end+0xfc000d3c>
 c0012b4:	8025883a 	mov	r18,r16
 c0012b8:	dc002903 	ldbu	r16,164(sp)
 c0012bc:	e011883a 	mov	r8,fp
 c0012c0:	84003fcc 	andi	r16,r16,255
 c0012c4:	803f8d26 	beq	r16,zero,c0010fc <__alt_data_end+0xfc0010fc>
 c0012c8:	d8c02b03 	ldbu	r3,172(sp)
 c0012cc:	d8c02785 	stb	r3,158(sp)
 c0012d0:	003f8a06 	br	c0010fc <__alt_data_end+0xfc0010fc>
 c0012d4:	8025883a 	mov	r18,r16
 c0012d8:	dc002903 	ldbu	r16,164(sp)
 c0012dc:	e011883a 	mov	r8,fp
 c0012e0:	84003fcc 	andi	r16,r16,255
 c0012e4:	8005661e 	bne	r16,zero,c002880 <___vfprintf_internal_r+0x22b8>
 c0012e8:	01030074 	movhi	r4,3073
 c0012ec:	213ef204 	addi	r4,r4,-1080
 c0012f0:	d9003915 	stw	r4,228(sp)
 c0012f4:	9080080c 	andi	r2,r18,32
 c0012f8:	103f9f1e 	bne	r2,zero,c001178 <__alt_data_end+0xfc001178>
 c0012fc:	9080040c 	andi	r2,r18,16
 c001300:	1002eb26 	beq	r2,zero,c001eb0 <___vfprintf_internal_r+0x18e8>
 c001304:	d8802e17 	ldw	r2,184(sp)
 c001308:	002d883a 	mov	r22,zero
 c00130c:	14c00017 	ldw	r19,0(r2)
 c001310:	10800104 	addi	r2,r2,4
 c001314:	d8802e15 	stw	r2,184(sp)
 c001318:	003f9c06 	br	c00118c <__alt_data_end+0xfc00118c>
 c00131c:	d8802b07 	ldb	r2,172(sp)
 c001320:	1002e11e 	bne	r2,zero,c001ea8 <___vfprintf_internal_r+0x18e0>
 c001324:	00c00044 	movi	r3,1
 c001328:	d8c02905 	stb	r3,164(sp)
 c00132c:	00c00804 	movi	r3,32
 c001330:	d8c02b05 	stb	r3,172(sp)
 c001334:	ac400007 	ldb	r17,0(r21)
 c001338:	003d0506 	br	c000750 <__alt_data_end+0xfc000750>
 c00133c:	84000054 	ori	r16,r16,1
 c001340:	ac400007 	ldb	r17,0(r21)
 c001344:	003d0206 	br	c000750 <__alt_data_end+0xfc000750>
 c001348:	8025883a 	mov	r18,r16
 c00134c:	dc002903 	ldbu	r16,164(sp)
 c001350:	e011883a 	mov	r8,fp
 c001354:	84003fcc 	andi	r16,r16,255
 c001358:	803de726 	beq	r16,zero,c000af8 <__alt_data_end+0xfc000af8>
 c00135c:	d8c02b03 	ldbu	r3,172(sp)
 c001360:	d8c02785 	stb	r3,158(sp)
 c001364:	003de406 	br	c000af8 <__alt_data_end+0xfc000af8>
 c001368:	84001014 	ori	r16,r16,64
 c00136c:	ac400007 	ldb	r17,0(r21)
 c001370:	003cf706 	br	c000750 <__alt_data_end+0xfc000750>
 c001374:	ac400007 	ldb	r17,0(r21)
 c001378:	00801b04 	movi	r2,108
 c00137c:	88838f26 	beq	r17,r2,c0021bc <___vfprintf_internal_r+0x1bf4>
 c001380:	84000414 	ori	r16,r16,16
 c001384:	003cf206 	br	c000750 <__alt_data_end+0xfc000750>
 c001388:	8025883a 	mov	r18,r16
 c00138c:	dc002903 	ldbu	r16,164(sp)
 c001390:	e011883a 	mov	r8,fp
 c001394:	84003fcc 	andi	r16,r16,255
 c001398:	80053f1e 	bne	r16,zero,c002898 <___vfprintf_internal_r+0x22d0>
 c00139c:	9080080c 	andi	r2,r18,32
 c0013a0:	1002d226 	beq	r2,zero,c001eec <___vfprintf_internal_r+0x1924>
 c0013a4:	d9002e17 	ldw	r4,184(sp)
 c0013a8:	d9402f17 	ldw	r5,188(sp)
 c0013ac:	20800017 	ldw	r2,0(r4)
 c0013b0:	2807d7fa 	srai	r3,r5,31
 c0013b4:	21000104 	addi	r4,r4,4
 c0013b8:	d9002e15 	stw	r4,184(sp)
 c0013bc:	11400015 	stw	r5,0(r2)
 c0013c0:	10c00115 	stw	r3,4(r2)
 c0013c4:	003cb806 	br	c0006a8 <__alt_data_end+0xfc0006a8>
 c0013c8:	d8c02e17 	ldw	r3,184(sp)
 c0013cc:	d9002e17 	ldw	r4,184(sp)
 c0013d0:	8025883a 	mov	r18,r16
 c0013d4:	18800017 	ldw	r2,0(r3)
 c0013d8:	21000104 	addi	r4,r4,4
 c0013dc:	00c00044 	movi	r3,1
 c0013e0:	e011883a 	mov	r8,fp
 c0013e4:	d8c02915 	stw	r3,164(sp)
 c0013e8:	d8002785 	stb	zero,158(sp)
 c0013ec:	d8801405 	stb	r2,80(sp)
 c0013f0:	d9002e15 	stw	r4,184(sp)
 c0013f4:	d8c02b15 	stw	r3,172(sp)
 c0013f8:	d8002a15 	stw	zero,168(sp)
 c0013fc:	d8003215 	stw	zero,200(sp)
 c001400:	dc001404 	addi	r16,sp,80
 c001404:	0039883a 	mov	fp,zero
 c001408:	003e5306 	br	c000d58 <__alt_data_end+0xfc000d58>
 c00140c:	01030074 	movhi	r4,3073
 c001410:	213ef204 	addi	r4,r4,-1080
 c001414:	0039883a 	mov	fp,zero
 c001418:	d9003915 	stw	r4,228(sp)
 c00141c:	04401e04 	movi	r17,120
 c001420:	003f6906 	br	c0011c8 <__alt_data_end+0xfc0011c8>
 c001424:	8025883a 	mov	r18,r16
 c001428:	dc002903 	ldbu	r16,164(sp)
 c00142c:	e011883a 	mov	r8,fp
 c001430:	84003fcc 	andi	r16,r16,255
 c001434:	8005081e 	bne	r16,zero,c002858 <___vfprintf_internal_r+0x2290>
 c001438:	883d6126 	beq	r17,zero,c0009c0 <__alt_data_end+0xfc0009c0>
 c00143c:	00c00044 	movi	r3,1
 c001440:	d8c02915 	stw	r3,164(sp)
 c001444:	dc401405 	stb	r17,80(sp)
 c001448:	d8002785 	stb	zero,158(sp)
 c00144c:	003fe906 	br	c0013f4 <__alt_data_end+0xfc0013f4>
 c001450:	01430074 	movhi	r5,3073
 c001454:	297ef204 	addi	r5,r5,-1080
 c001458:	d9403915 	stw	r5,228(sp)
 c00145c:	d8c02e15 	stw	r3,184(sp)
 c001460:	1025883a 	mov	r18,r2
 c001464:	04401e04 	movi	r17,120
 c001468:	9d84b03a 	or	r2,r19,r22
 c00146c:	1000fc1e 	bne	r2,zero,c001860 <___vfprintf_internal_r+0x1298>
 c001470:	0039883a 	mov	fp,zero
 c001474:	00800084 	movi	r2,2
 c001478:	10803fcc 	andi	r2,r2,255
 c00147c:	00c00044 	movi	r3,1
 c001480:	10c20f26 	beq	r2,r3,c001cc0 <___vfprintf_internal_r+0x16f8>
 c001484:	00c00084 	movi	r3,2
 c001488:	10fd3326 	beq	r2,r3,c000958 <__alt_data_end+0xfc000958>
 c00148c:	003e0b06 	br	c000cbc <__alt_data_end+0xfc000cbc>
 c001490:	d8c02017 	ldw	r3,128(sp)
 c001494:	003e7106 	br	c000e5c <__alt_data_end+0xfc000e5c>
 c001498:	00801944 	movi	r2,101
 c00149c:	14407e0e 	bge	r2,r17,c001698 <___vfprintf_internal_r+0x10d0>
 c0014a0:	d9003617 	ldw	r4,216(sp)
 c0014a4:	d9403817 	ldw	r5,224(sp)
 c0014a8:	000d883a 	mov	r6,zero
 c0014ac:	000f883a 	mov	r7,zero
 c0014b0:	d8c03c15 	stw	r3,240(sp)
 c0014b4:	da003d15 	stw	r8,244(sp)
 c0014b8:	c00bd780 	call	c00bd78 <__eqdf2>
 c0014bc:	d8c03c17 	ldw	r3,240(sp)
 c0014c0:	da003d17 	ldw	r8,244(sp)
 c0014c4:	1000f71e 	bne	r2,zero,c0018a4 <___vfprintf_internal_r+0x12dc>
 c0014c8:	d8801f17 	ldw	r2,124(sp)
 c0014cc:	01030074 	movhi	r4,3073
 c0014d0:	213ef904 	addi	r4,r4,-1052
 c0014d4:	18c00044 	addi	r3,r3,1
 c0014d8:	10800044 	addi	r2,r2,1
 c0014dc:	41000015 	stw	r4,0(r8)
 c0014e0:	01000044 	movi	r4,1
 c0014e4:	41000115 	stw	r4,4(r8)
 c0014e8:	d8c02015 	stw	r3,128(sp)
 c0014ec:	d8801f15 	stw	r2,124(sp)
 c0014f0:	010001c4 	movi	r4,7
 c0014f4:	2082b816 	blt	r4,r2,c001fd8 <___vfprintf_internal_r+0x1a10>
 c0014f8:	42000204 	addi	r8,r8,8
 c0014fc:	d8802617 	ldw	r2,152(sp)
 c001500:	d9403317 	ldw	r5,204(sp)
 c001504:	11400216 	blt	r2,r5,c001510 <___vfprintf_internal_r+0xf48>
 c001508:	9080004c 	andi	r2,r18,1
 c00150c:	103eb326 	beq	r2,zero,c000fdc <__alt_data_end+0xfc000fdc>
 c001510:	d8803717 	ldw	r2,220(sp)
 c001514:	d9003417 	ldw	r4,208(sp)
 c001518:	d9403717 	ldw	r5,220(sp)
 c00151c:	1887883a 	add	r3,r3,r2
 c001520:	d8801f17 	ldw	r2,124(sp)
 c001524:	41000015 	stw	r4,0(r8)
 c001528:	41400115 	stw	r5,4(r8)
 c00152c:	10800044 	addi	r2,r2,1
 c001530:	d8c02015 	stw	r3,128(sp)
 c001534:	d8801f15 	stw	r2,124(sp)
 c001538:	010001c4 	movi	r4,7
 c00153c:	20832916 	blt	r4,r2,c0021e4 <___vfprintf_internal_r+0x1c1c>
 c001540:	42000204 	addi	r8,r8,8
 c001544:	d8803317 	ldw	r2,204(sp)
 c001548:	143fffc4 	addi	r16,r2,-1
 c00154c:	043ea30e 	bge	zero,r16,c000fdc <__alt_data_end+0xfc000fdc>
 c001550:	04400404 	movi	r17,16
 c001554:	d8801f17 	ldw	r2,124(sp)
 c001558:	8c00880e 	bge	r17,r16,c00177c <___vfprintf_internal_r+0x11b4>
 c00155c:	01430074 	movhi	r5,3073
 c001560:	297ef984 	addi	r5,r5,-1050
 c001564:	d9402c15 	stw	r5,176(sp)
 c001568:	058001c4 	movi	r22,7
 c00156c:	dcc02d17 	ldw	r19,180(sp)
 c001570:	00000306 	br	c001580 <___vfprintf_internal_r+0xfb8>
 c001574:	42000204 	addi	r8,r8,8
 c001578:	843ffc04 	addi	r16,r16,-16
 c00157c:	8c00820e 	bge	r17,r16,c001788 <___vfprintf_internal_r+0x11c0>
 c001580:	18c00404 	addi	r3,r3,16
 c001584:	10800044 	addi	r2,r2,1
 c001588:	45000015 	stw	r20,0(r8)
 c00158c:	44400115 	stw	r17,4(r8)
 c001590:	d8c02015 	stw	r3,128(sp)
 c001594:	d8801f15 	stw	r2,124(sp)
 c001598:	b0bff60e 	bge	r22,r2,c001574 <__alt_data_end+0xfc001574>
 c00159c:	d9801e04 	addi	r6,sp,120
 c0015a0:	b80b883a 	mov	r5,r23
 c0015a4:	9809883a 	mov	r4,r19
 c0015a8:	c0072b80 	call	c0072b8 <__sprint_r>
 c0015ac:	103d0a1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0015b0:	d8c02017 	ldw	r3,128(sp)
 c0015b4:	d8801f17 	ldw	r2,124(sp)
 c0015b8:	da000404 	addi	r8,sp,16
 c0015bc:	003fee06 	br	c001578 <__alt_data_end+0xfc001578>
 c0015c0:	d9403117 	ldw	r5,196(sp)
 c0015c4:	d8802917 	ldw	r2,164(sp)
 c0015c8:	28adc83a 	sub	r22,r5,r2
 c0015cc:	05be410e 	bge	zero,r22,c000ed4 <__alt_data_end+0xfc000ed4>
 c0015d0:	07000404 	movi	fp,16
 c0015d4:	d8801f17 	ldw	r2,124(sp)
 c0015d8:	e5838f0e 	bge	fp,r22,c002418 <___vfprintf_internal_r+0x1e50>
 c0015dc:	01430074 	movhi	r5,3073
 c0015e0:	297ef984 	addi	r5,r5,-1050
 c0015e4:	dc403015 	stw	r17,192(sp)
 c0015e8:	d9402c15 	stw	r5,176(sp)
 c0015ec:	b023883a 	mov	r17,r22
 c0015f0:	04c001c4 	movi	r19,7
 c0015f4:	a82d883a 	mov	r22,r21
 c0015f8:	902b883a 	mov	r21,r18
 c0015fc:	8025883a 	mov	r18,r16
 c001600:	dc002d17 	ldw	r16,180(sp)
 c001604:	00000306 	br	c001614 <___vfprintf_internal_r+0x104c>
 c001608:	8c7ffc04 	addi	r17,r17,-16
 c00160c:	42000204 	addi	r8,r8,8
 c001610:	e440110e 	bge	fp,r17,c001658 <___vfprintf_internal_r+0x1090>
 c001614:	18c00404 	addi	r3,r3,16
 c001618:	10800044 	addi	r2,r2,1
 c00161c:	45000015 	stw	r20,0(r8)
 c001620:	47000115 	stw	fp,4(r8)
 c001624:	d8c02015 	stw	r3,128(sp)
 c001628:	d8801f15 	stw	r2,124(sp)
 c00162c:	98bff60e 	bge	r19,r2,c001608 <__alt_data_end+0xfc001608>
 c001630:	d9801e04 	addi	r6,sp,120
 c001634:	b80b883a 	mov	r5,r23
 c001638:	8009883a 	mov	r4,r16
 c00163c:	c0072b80 	call	c0072b8 <__sprint_r>
 c001640:	103ce51e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001644:	8c7ffc04 	addi	r17,r17,-16
 c001648:	d8c02017 	ldw	r3,128(sp)
 c00164c:	d8801f17 	ldw	r2,124(sp)
 c001650:	da000404 	addi	r8,sp,16
 c001654:	e47fef16 	blt	fp,r17,c001614 <__alt_data_end+0xfc001614>
 c001658:	9021883a 	mov	r16,r18
 c00165c:	a825883a 	mov	r18,r21
 c001660:	b02b883a 	mov	r21,r22
 c001664:	882d883a 	mov	r22,r17
 c001668:	dc403017 	ldw	r17,192(sp)
 c00166c:	d9002c17 	ldw	r4,176(sp)
 c001670:	1d87883a 	add	r3,r3,r22
 c001674:	10800044 	addi	r2,r2,1
 c001678:	41000015 	stw	r4,0(r8)
 c00167c:	45800115 	stw	r22,4(r8)
 c001680:	d8c02015 	stw	r3,128(sp)
 c001684:	d8801f15 	stw	r2,124(sp)
 c001688:	010001c4 	movi	r4,7
 c00168c:	20818e16 	blt	r4,r2,c001cc8 <___vfprintf_internal_r+0x1700>
 c001690:	42000204 	addi	r8,r8,8
 c001694:	003e0f06 	br	c000ed4 <__alt_data_end+0xfc000ed4>
 c001698:	d9403317 	ldw	r5,204(sp)
 c00169c:	00800044 	movi	r2,1
 c0016a0:	18c00044 	addi	r3,r3,1
 c0016a4:	1141530e 	bge	r2,r5,c001bf4 <___vfprintf_internal_r+0x162c>
 c0016a8:	dc401f17 	ldw	r17,124(sp)
 c0016ac:	00800044 	movi	r2,1
 c0016b0:	40800115 	stw	r2,4(r8)
 c0016b4:	8c400044 	addi	r17,r17,1
 c0016b8:	44000015 	stw	r16,0(r8)
 c0016bc:	d8c02015 	stw	r3,128(sp)
 c0016c0:	dc401f15 	stw	r17,124(sp)
 c0016c4:	008001c4 	movi	r2,7
 c0016c8:	14416b16 	blt	r2,r17,c001c78 <___vfprintf_internal_r+0x16b0>
 c0016cc:	42000204 	addi	r8,r8,8
 c0016d0:	d8803717 	ldw	r2,220(sp)
 c0016d4:	d9003417 	ldw	r4,208(sp)
 c0016d8:	8c400044 	addi	r17,r17,1
 c0016dc:	10c7883a 	add	r3,r2,r3
 c0016e0:	40800115 	stw	r2,4(r8)
 c0016e4:	41000015 	stw	r4,0(r8)
 c0016e8:	d8c02015 	stw	r3,128(sp)
 c0016ec:	dc401f15 	stw	r17,124(sp)
 c0016f0:	008001c4 	movi	r2,7
 c0016f4:	14416916 	blt	r2,r17,c001c9c <___vfprintf_internal_r+0x16d4>
 c0016f8:	45800204 	addi	r22,r8,8
 c0016fc:	d9003617 	ldw	r4,216(sp)
 c001700:	d9403817 	ldw	r5,224(sp)
 c001704:	000d883a 	mov	r6,zero
 c001708:	000f883a 	mov	r7,zero
 c00170c:	d8c03c15 	stw	r3,240(sp)
 c001710:	c00bd780 	call	c00bd78 <__eqdf2>
 c001714:	d8c03c17 	ldw	r3,240(sp)
 c001718:	1000bc26 	beq	r2,zero,c001a0c <___vfprintf_internal_r+0x1444>
 c00171c:	d9403317 	ldw	r5,204(sp)
 c001720:	84000044 	addi	r16,r16,1
 c001724:	8c400044 	addi	r17,r17,1
 c001728:	28bfffc4 	addi	r2,r5,-1
 c00172c:	1887883a 	add	r3,r3,r2
 c001730:	b0800115 	stw	r2,4(r22)
 c001734:	b4000015 	stw	r16,0(r22)
 c001738:	d8c02015 	stw	r3,128(sp)
 c00173c:	dc401f15 	stw	r17,124(sp)
 c001740:	008001c4 	movi	r2,7
 c001744:	14414316 	blt	r2,r17,c001c54 <___vfprintf_internal_r+0x168c>
 c001748:	b5800204 	addi	r22,r22,8
 c00174c:	d9003a17 	ldw	r4,232(sp)
 c001750:	df0022c4 	addi	fp,sp,139
 c001754:	8c400044 	addi	r17,r17,1
 c001758:	20c7883a 	add	r3,r4,r3
 c00175c:	b7000015 	stw	fp,0(r22)
 c001760:	b1000115 	stw	r4,4(r22)
 c001764:	d8c02015 	stw	r3,128(sp)
 c001768:	dc401f15 	stw	r17,124(sp)
 c00176c:	008001c4 	movi	r2,7
 c001770:	14400e16 	blt	r2,r17,c0017ac <___vfprintf_internal_r+0x11e4>
 c001774:	b2000204 	addi	r8,r22,8
 c001778:	003e1806 	br	c000fdc <__alt_data_end+0xfc000fdc>
 c00177c:	01030074 	movhi	r4,3073
 c001780:	213ef984 	addi	r4,r4,-1050
 c001784:	d9002c15 	stw	r4,176(sp)
 c001788:	d9002c17 	ldw	r4,176(sp)
 c00178c:	1c07883a 	add	r3,r3,r16
 c001790:	44000115 	stw	r16,4(r8)
 c001794:	41000015 	stw	r4,0(r8)
 c001798:	10800044 	addi	r2,r2,1
 c00179c:	d8c02015 	stw	r3,128(sp)
 c0017a0:	d8801f15 	stw	r2,124(sp)
 c0017a4:	010001c4 	movi	r4,7
 c0017a8:	20be0b0e 	bge	r4,r2,c000fd8 <__alt_data_end+0xfc000fd8>
 c0017ac:	d9002d17 	ldw	r4,180(sp)
 c0017b0:	d9801e04 	addi	r6,sp,120
 c0017b4:	b80b883a 	mov	r5,r23
 c0017b8:	c0072b80 	call	c0072b8 <__sprint_r>
 c0017bc:	103c861e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0017c0:	d8c02017 	ldw	r3,128(sp)
 c0017c4:	da000404 	addi	r8,sp,16
 c0017c8:	003e0406 	br	c000fdc <__alt_data_end+0xfc000fdc>
 c0017cc:	d9002d17 	ldw	r4,180(sp)
 c0017d0:	d9801e04 	addi	r6,sp,120
 c0017d4:	b80b883a 	mov	r5,r23
 c0017d8:	c0072b80 	call	c0072b8 <__sprint_r>
 c0017dc:	103e3b26 	beq	r2,zero,c0010cc <__alt_data_end+0xfc0010cc>
 c0017e0:	003c7d06 	br	c0009d8 <__alt_data_end+0xfc0009d8>
 c0017e4:	d9002d17 	ldw	r4,180(sp)
 c0017e8:	d9801e04 	addi	r6,sp,120
 c0017ec:	b80b883a 	mov	r5,r23
 c0017f0:	c0072b80 	call	c0072b8 <__sprint_r>
 c0017f4:	103c781e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0017f8:	d8c02017 	ldw	r3,128(sp)
 c0017fc:	da000404 	addi	r8,sp,16
 c001800:	003de906 	br	c000fa8 <__alt_data_end+0xfc000fa8>
 c001804:	d9002d17 	ldw	r4,180(sp)
 c001808:	d9801e04 	addi	r6,sp,120
 c00180c:	b80b883a 	mov	r5,r23
 c001810:	c0072b80 	call	c0072b8 <__sprint_r>
 c001814:	103c701e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001818:	d8c02017 	ldw	r3,128(sp)
 c00181c:	da000404 	addi	r8,sp,16
 c001820:	003d9b06 	br	c000e90 <__alt_data_end+0xfc000e90>
 c001824:	d9002d17 	ldw	r4,180(sp)
 c001828:	d9801e04 	addi	r6,sp,120
 c00182c:	b80b883a 	mov	r5,r23
 c001830:	c0072b80 	call	c0072b8 <__sprint_r>
 c001834:	103c681e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001838:	d8c02017 	ldw	r3,128(sp)
 c00183c:	da000404 	addi	r8,sp,16
 c001840:	003da106 	br	c000ec8 <__alt_data_end+0xfc000ec8>
 c001844:	d9402a17 	ldw	r5,168(sp)
 c001848:	d8002785 	stb	zero,158(sp)
 c00184c:	283f0616 	blt	r5,zero,c001468 <__alt_data_end+0xfc001468>
 c001850:	00ffdfc4 	movi	r3,-129
 c001854:	9d84b03a 	or	r2,r19,r22
 c001858:	90e4703a 	and	r18,r18,r3
 c00185c:	103c3b26 	beq	r2,zero,c00094c <__alt_data_end+0xfc00094c>
 c001860:	0039883a 	mov	fp,zero
 c001864:	003e5806 	br	c0011c8 <__alt_data_end+0xfc0011c8>
 c001868:	9080040c 	andi	r2,r18,16
 c00186c:	1001b326 	beq	r2,zero,c001f3c <___vfprintf_internal_r+0x1974>
 c001870:	d8c02e17 	ldw	r3,184(sp)
 c001874:	d9002a17 	ldw	r4,168(sp)
 c001878:	d8002785 	stb	zero,158(sp)
 c00187c:	18800104 	addi	r2,r3,4
 c001880:	1cc00017 	ldw	r19,0(r3)
 c001884:	002d883a 	mov	r22,zero
 c001888:	2001b516 	blt	r4,zero,c001f60 <___vfprintf_internal_r+0x1998>
 c00188c:	00ffdfc4 	movi	r3,-129
 c001890:	d8802e15 	stw	r2,184(sp)
 c001894:	90e4703a 	and	r18,r18,r3
 c001898:	983d0526 	beq	r19,zero,c000cb0 <__alt_data_end+0xfc000cb0>
 c00189c:	0039883a 	mov	fp,zero
 c0018a0:	003d0806 	br	c000cc4 <__alt_data_end+0xfc000cc4>
 c0018a4:	dc402617 	ldw	r17,152(sp)
 c0018a8:	0441d30e 	bge	zero,r17,c001ff8 <___vfprintf_internal_r+0x1a30>
 c0018ac:	dc403217 	ldw	r17,200(sp)
 c0018b0:	d8803317 	ldw	r2,204(sp)
 c0018b4:	1440010e 	bge	r2,r17,c0018bc <___vfprintf_internal_r+0x12f4>
 c0018b8:	1023883a 	mov	r17,r2
 c0018bc:	04400a0e 	bge	zero,r17,c0018e8 <___vfprintf_internal_r+0x1320>
 c0018c0:	d8801f17 	ldw	r2,124(sp)
 c0018c4:	1c47883a 	add	r3,r3,r17
 c0018c8:	44000015 	stw	r16,0(r8)
 c0018cc:	10800044 	addi	r2,r2,1
 c0018d0:	44400115 	stw	r17,4(r8)
 c0018d4:	d8c02015 	stw	r3,128(sp)
 c0018d8:	d8801f15 	stw	r2,124(sp)
 c0018dc:	010001c4 	movi	r4,7
 c0018e0:	20826516 	blt	r4,r2,c002278 <___vfprintf_internal_r+0x1cb0>
 c0018e4:	42000204 	addi	r8,r8,8
 c0018e8:	88026116 	blt	r17,zero,c002270 <___vfprintf_internal_r+0x1ca8>
 c0018ec:	d9003217 	ldw	r4,200(sp)
 c0018f0:	2463c83a 	sub	r17,r4,r17
 c0018f4:	04407b0e 	bge	zero,r17,c001ae4 <___vfprintf_internal_r+0x151c>
 c0018f8:	05800404 	movi	r22,16
 c0018fc:	d8801f17 	ldw	r2,124(sp)
 c001900:	b4419d0e 	bge	r22,r17,c001f78 <___vfprintf_internal_r+0x19b0>
 c001904:	01030074 	movhi	r4,3073
 c001908:	213ef984 	addi	r4,r4,-1050
 c00190c:	d9002c15 	stw	r4,176(sp)
 c001910:	070001c4 	movi	fp,7
 c001914:	dcc02d17 	ldw	r19,180(sp)
 c001918:	00000306 	br	c001928 <___vfprintf_internal_r+0x1360>
 c00191c:	42000204 	addi	r8,r8,8
 c001920:	8c7ffc04 	addi	r17,r17,-16
 c001924:	b441970e 	bge	r22,r17,c001f84 <___vfprintf_internal_r+0x19bc>
 c001928:	18c00404 	addi	r3,r3,16
 c00192c:	10800044 	addi	r2,r2,1
 c001930:	45000015 	stw	r20,0(r8)
 c001934:	45800115 	stw	r22,4(r8)
 c001938:	d8c02015 	stw	r3,128(sp)
 c00193c:	d8801f15 	stw	r2,124(sp)
 c001940:	e0bff60e 	bge	fp,r2,c00191c <__alt_data_end+0xfc00191c>
 c001944:	d9801e04 	addi	r6,sp,120
 c001948:	b80b883a 	mov	r5,r23
 c00194c:	9809883a 	mov	r4,r19
 c001950:	c0072b80 	call	c0072b8 <__sprint_r>
 c001954:	103c201e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001958:	d8c02017 	ldw	r3,128(sp)
 c00195c:	d8801f17 	ldw	r2,124(sp)
 c001960:	da000404 	addi	r8,sp,16
 c001964:	003fee06 	br	c001920 <__alt_data_end+0xfc001920>
 c001968:	d9002d17 	ldw	r4,180(sp)
 c00196c:	d9801e04 	addi	r6,sp,120
 c001970:	b80b883a 	mov	r5,r23
 c001974:	c0072b80 	call	c0072b8 <__sprint_r>
 c001978:	103c171e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c00197c:	d8c02017 	ldw	r3,128(sp)
 c001980:	df002787 	ldb	fp,158(sp)
 c001984:	da000404 	addi	r8,sp,16
 c001988:	003d3406 	br	c000e5c <__alt_data_end+0xfc000e5c>
 c00198c:	9080040c 	andi	r2,r18,16
 c001990:	10016126 	beq	r2,zero,c001f18 <___vfprintf_internal_r+0x1950>
 c001994:	d9402e17 	ldw	r5,184(sp)
 c001998:	2cc00017 	ldw	r19,0(r5)
 c00199c:	29400104 	addi	r5,r5,4
 c0019a0:	d9402e15 	stw	r5,184(sp)
 c0019a4:	982dd7fa 	srai	r22,r19,31
 c0019a8:	b005883a 	mov	r2,r22
 c0019ac:	003c5a06 	br	c000b18 <__alt_data_end+0xfc000b18>
 c0019b0:	9080040c 	andi	r2,r18,16
 c0019b4:	10003526 	beq	r2,zero,c001a8c <___vfprintf_internal_r+0x14c4>
 c0019b8:	d8c02e17 	ldw	r3,184(sp)
 c0019bc:	d9002a17 	ldw	r4,168(sp)
 c0019c0:	d8002785 	stb	zero,158(sp)
 c0019c4:	18800104 	addi	r2,r3,4
 c0019c8:	1cc00017 	ldw	r19,0(r3)
 c0019cc:	002d883a 	mov	r22,zero
 c0019d0:	20003716 	blt	r4,zero,c001ab0 <___vfprintf_internal_r+0x14e8>
 c0019d4:	00ffdfc4 	movi	r3,-129
 c0019d8:	d8802e15 	stw	r2,184(sp)
 c0019dc:	90e4703a 	and	r18,r18,r3
 c0019e0:	0039883a 	mov	fp,zero
 c0019e4:	983dd426 	beq	r19,zero,c001138 <__alt_data_end+0xfc001138>
 c0019e8:	00800244 	movi	r2,9
 c0019ec:	14fc5336 	bltu	r2,r19,c000b3c <__alt_data_end+0xfc000b3c>
 c0019f0:	d8c02817 	ldw	r3,160(sp)
 c0019f4:	dc001dc4 	addi	r16,sp,119
 c0019f8:	9cc00c04 	addi	r19,r19,48
 c0019fc:	1c07c83a 	sub	r3,r3,r16
 c001a00:	dcc01dc5 	stb	r19,119(sp)
 c001a04:	d8c02b15 	stw	r3,172(sp)
 c001a08:	003cc606 	br	c000d24 <__alt_data_end+0xfc000d24>
 c001a0c:	d8803317 	ldw	r2,204(sp)
 c001a10:	143fffc4 	addi	r16,r2,-1
 c001a14:	043f4d0e 	bge	zero,r16,c00174c <__alt_data_end+0xfc00174c>
 c001a18:	07000404 	movi	fp,16
 c001a1c:	e400810e 	bge	fp,r16,c001c24 <___vfprintf_internal_r+0x165c>
 c001a20:	01430074 	movhi	r5,3073
 c001a24:	297ef984 	addi	r5,r5,-1050
 c001a28:	d9402c15 	stw	r5,176(sp)
 c001a2c:	01c001c4 	movi	r7,7
 c001a30:	dcc02d17 	ldw	r19,180(sp)
 c001a34:	00000306 	br	c001a44 <___vfprintf_internal_r+0x147c>
 c001a38:	b5800204 	addi	r22,r22,8
 c001a3c:	843ffc04 	addi	r16,r16,-16
 c001a40:	e4007b0e 	bge	fp,r16,c001c30 <___vfprintf_internal_r+0x1668>
 c001a44:	18c00404 	addi	r3,r3,16
 c001a48:	8c400044 	addi	r17,r17,1
 c001a4c:	b5000015 	stw	r20,0(r22)
 c001a50:	b7000115 	stw	fp,4(r22)
 c001a54:	d8c02015 	stw	r3,128(sp)
 c001a58:	dc401f15 	stw	r17,124(sp)
 c001a5c:	3c7ff60e 	bge	r7,r17,c001a38 <__alt_data_end+0xfc001a38>
 c001a60:	d9801e04 	addi	r6,sp,120
 c001a64:	b80b883a 	mov	r5,r23
 c001a68:	9809883a 	mov	r4,r19
 c001a6c:	d9c03c15 	stw	r7,240(sp)
 c001a70:	c0072b80 	call	c0072b8 <__sprint_r>
 c001a74:	d9c03c17 	ldw	r7,240(sp)
 c001a78:	103bd71e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001a7c:	d8c02017 	ldw	r3,128(sp)
 c001a80:	dc401f17 	ldw	r17,124(sp)
 c001a84:	dd800404 	addi	r22,sp,16
 c001a88:	003fec06 	br	c001a3c <__alt_data_end+0xfc001a3c>
 c001a8c:	9080100c 	andi	r2,r18,64
 c001a90:	d8002785 	stb	zero,158(sp)
 c001a94:	10010e26 	beq	r2,zero,c001ed0 <___vfprintf_internal_r+0x1908>
 c001a98:	d9402e17 	ldw	r5,184(sp)
 c001a9c:	d8c02a17 	ldw	r3,168(sp)
 c001aa0:	002d883a 	mov	r22,zero
 c001aa4:	28800104 	addi	r2,r5,4
 c001aa8:	2cc0000b 	ldhu	r19,0(r5)
 c001aac:	183fc90e 	bge	r3,zero,c0019d4 <__alt_data_end+0xfc0019d4>
 c001ab0:	d8802e15 	stw	r2,184(sp)
 c001ab4:	0039883a 	mov	fp,zero
 c001ab8:	9d84b03a 	or	r2,r19,r22
 c001abc:	103c1e1e 	bne	r2,zero,c000b38 <__alt_data_end+0xfc000b38>
 c001ac0:	00800044 	movi	r2,1
 c001ac4:	003e6c06 	br	c001478 <__alt_data_end+0xfc001478>
 c001ac8:	d9002d17 	ldw	r4,180(sp)
 c001acc:	d9801e04 	addi	r6,sp,120
 c001ad0:	b80b883a 	mov	r5,r23
 c001ad4:	c0072b80 	call	c0072b8 <__sprint_r>
 c001ad8:	103bbf1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001adc:	d8c02017 	ldw	r3,128(sp)
 c001ae0:	da000404 	addi	r8,sp,16
 c001ae4:	d9003217 	ldw	r4,200(sp)
 c001ae8:	d8802617 	ldw	r2,152(sp)
 c001aec:	d9403317 	ldw	r5,204(sp)
 c001af0:	8123883a 	add	r17,r16,r4
 c001af4:	11400216 	blt	r2,r5,c001b00 <___vfprintf_internal_r+0x1538>
 c001af8:	9100004c 	andi	r4,r18,1
 c001afc:	20000d26 	beq	r4,zero,c001b34 <___vfprintf_internal_r+0x156c>
 c001b00:	d9003717 	ldw	r4,220(sp)
 c001b04:	d9403417 	ldw	r5,208(sp)
 c001b08:	1907883a 	add	r3,r3,r4
 c001b0c:	d9001f17 	ldw	r4,124(sp)
 c001b10:	41400015 	stw	r5,0(r8)
 c001b14:	d9403717 	ldw	r5,220(sp)
 c001b18:	21000044 	addi	r4,r4,1
 c001b1c:	d8c02015 	stw	r3,128(sp)
 c001b20:	41400115 	stw	r5,4(r8)
 c001b24:	d9001f15 	stw	r4,124(sp)
 c001b28:	014001c4 	movi	r5,7
 c001b2c:	2901e816 	blt	r5,r4,c0022d0 <___vfprintf_internal_r+0x1d08>
 c001b30:	42000204 	addi	r8,r8,8
 c001b34:	d9003317 	ldw	r4,204(sp)
 c001b38:	8121883a 	add	r16,r16,r4
 c001b3c:	2085c83a 	sub	r2,r4,r2
 c001b40:	8461c83a 	sub	r16,r16,r17
 c001b44:	1400010e 	bge	r2,r16,c001b4c <___vfprintf_internal_r+0x1584>
 c001b48:	1021883a 	mov	r16,r2
 c001b4c:	04000a0e 	bge	zero,r16,c001b78 <___vfprintf_internal_r+0x15b0>
 c001b50:	d9001f17 	ldw	r4,124(sp)
 c001b54:	1c07883a 	add	r3,r3,r16
 c001b58:	44400015 	stw	r17,0(r8)
 c001b5c:	21000044 	addi	r4,r4,1
 c001b60:	44000115 	stw	r16,4(r8)
 c001b64:	d8c02015 	stw	r3,128(sp)
 c001b68:	d9001f15 	stw	r4,124(sp)
 c001b6c:	014001c4 	movi	r5,7
 c001b70:	2901fb16 	blt	r5,r4,c002360 <___vfprintf_internal_r+0x1d98>
 c001b74:	42000204 	addi	r8,r8,8
 c001b78:	8001f716 	blt	r16,zero,c002358 <___vfprintf_internal_r+0x1d90>
 c001b7c:	1421c83a 	sub	r16,r2,r16
 c001b80:	043d160e 	bge	zero,r16,c000fdc <__alt_data_end+0xfc000fdc>
 c001b84:	04400404 	movi	r17,16
 c001b88:	d8801f17 	ldw	r2,124(sp)
 c001b8c:	8c3efb0e 	bge	r17,r16,c00177c <__alt_data_end+0xfc00177c>
 c001b90:	01430074 	movhi	r5,3073
 c001b94:	297ef984 	addi	r5,r5,-1050
 c001b98:	d9402c15 	stw	r5,176(sp)
 c001b9c:	058001c4 	movi	r22,7
 c001ba0:	dcc02d17 	ldw	r19,180(sp)
 c001ba4:	00000306 	br	c001bb4 <___vfprintf_internal_r+0x15ec>
 c001ba8:	42000204 	addi	r8,r8,8
 c001bac:	843ffc04 	addi	r16,r16,-16
 c001bb0:	8c3ef50e 	bge	r17,r16,c001788 <__alt_data_end+0xfc001788>
 c001bb4:	18c00404 	addi	r3,r3,16
 c001bb8:	10800044 	addi	r2,r2,1
 c001bbc:	45000015 	stw	r20,0(r8)
 c001bc0:	44400115 	stw	r17,4(r8)
 c001bc4:	d8c02015 	stw	r3,128(sp)
 c001bc8:	d8801f15 	stw	r2,124(sp)
 c001bcc:	b0bff60e 	bge	r22,r2,c001ba8 <__alt_data_end+0xfc001ba8>
 c001bd0:	d9801e04 	addi	r6,sp,120
 c001bd4:	b80b883a 	mov	r5,r23
 c001bd8:	9809883a 	mov	r4,r19
 c001bdc:	c0072b80 	call	c0072b8 <__sprint_r>
 c001be0:	103b7d1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001be4:	d8c02017 	ldw	r3,128(sp)
 c001be8:	d8801f17 	ldw	r2,124(sp)
 c001bec:	da000404 	addi	r8,sp,16
 c001bf0:	003fee06 	br	c001bac <__alt_data_end+0xfc001bac>
 c001bf4:	9088703a 	and	r4,r18,r2
 c001bf8:	203eab1e 	bne	r4,zero,c0016a8 <__alt_data_end+0xfc0016a8>
 c001bfc:	dc401f17 	ldw	r17,124(sp)
 c001c00:	40800115 	stw	r2,4(r8)
 c001c04:	44000015 	stw	r16,0(r8)
 c001c08:	8c400044 	addi	r17,r17,1
 c001c0c:	d8c02015 	stw	r3,128(sp)
 c001c10:	dc401f15 	stw	r17,124(sp)
 c001c14:	008001c4 	movi	r2,7
 c001c18:	14400e16 	blt	r2,r17,c001c54 <___vfprintf_internal_r+0x168c>
 c001c1c:	45800204 	addi	r22,r8,8
 c001c20:	003eca06 	br	c00174c <__alt_data_end+0xfc00174c>
 c001c24:	01030074 	movhi	r4,3073
 c001c28:	213ef984 	addi	r4,r4,-1050
 c001c2c:	d9002c15 	stw	r4,176(sp)
 c001c30:	d8802c17 	ldw	r2,176(sp)
 c001c34:	1c07883a 	add	r3,r3,r16
 c001c38:	8c400044 	addi	r17,r17,1
 c001c3c:	b0800015 	stw	r2,0(r22)
 c001c40:	b4000115 	stw	r16,4(r22)
 c001c44:	d8c02015 	stw	r3,128(sp)
 c001c48:	dc401f15 	stw	r17,124(sp)
 c001c4c:	008001c4 	movi	r2,7
 c001c50:	147ebd0e 	bge	r2,r17,c001748 <__alt_data_end+0xfc001748>
 c001c54:	d9002d17 	ldw	r4,180(sp)
 c001c58:	d9801e04 	addi	r6,sp,120
 c001c5c:	b80b883a 	mov	r5,r23
 c001c60:	c0072b80 	call	c0072b8 <__sprint_r>
 c001c64:	103b5c1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001c68:	d8c02017 	ldw	r3,128(sp)
 c001c6c:	dc401f17 	ldw	r17,124(sp)
 c001c70:	dd800404 	addi	r22,sp,16
 c001c74:	003eb506 	br	c00174c <__alt_data_end+0xfc00174c>
 c001c78:	d9002d17 	ldw	r4,180(sp)
 c001c7c:	d9801e04 	addi	r6,sp,120
 c001c80:	b80b883a 	mov	r5,r23
 c001c84:	c0072b80 	call	c0072b8 <__sprint_r>
 c001c88:	103b531e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001c8c:	d8c02017 	ldw	r3,128(sp)
 c001c90:	dc401f17 	ldw	r17,124(sp)
 c001c94:	da000404 	addi	r8,sp,16
 c001c98:	003e8d06 	br	c0016d0 <__alt_data_end+0xfc0016d0>
 c001c9c:	d9002d17 	ldw	r4,180(sp)
 c001ca0:	d9801e04 	addi	r6,sp,120
 c001ca4:	b80b883a 	mov	r5,r23
 c001ca8:	c0072b80 	call	c0072b8 <__sprint_r>
 c001cac:	103b4a1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001cb0:	d8c02017 	ldw	r3,128(sp)
 c001cb4:	dc401f17 	ldw	r17,124(sp)
 c001cb8:	dd800404 	addi	r22,sp,16
 c001cbc:	003e8f06 	br	c0016fc <__alt_data_end+0xfc0016fc>
 c001cc0:	0027883a 	mov	r19,zero
 c001cc4:	003f4a06 	br	c0019f0 <__alt_data_end+0xfc0019f0>
 c001cc8:	d9002d17 	ldw	r4,180(sp)
 c001ccc:	d9801e04 	addi	r6,sp,120
 c001cd0:	b80b883a 	mov	r5,r23
 c001cd4:	c0072b80 	call	c0072b8 <__sprint_r>
 c001cd8:	103b3f1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001cdc:	d8c02017 	ldw	r3,128(sp)
 c001ce0:	da000404 	addi	r8,sp,16
 c001ce4:	003c7b06 	br	c000ed4 <__alt_data_end+0xfc000ed4>
 c001ce8:	d9402a17 	ldw	r5,168(sp)
 c001cec:	04e7c83a 	sub	r19,zero,r19
 c001cf0:	07000b44 	movi	fp,45
 c001cf4:	9804c03a 	cmpne	r2,r19,zero
 c001cf8:	05adc83a 	sub	r22,zero,r22
 c001cfc:	df002785 	stb	fp,158(sp)
 c001d00:	b0adc83a 	sub	r22,r22,r2
 c001d04:	28017b16 	blt	r5,zero,c0022f4 <___vfprintf_internal_r+0x1d2c>
 c001d08:	00bfdfc4 	movi	r2,-129
 c001d0c:	90a4703a 	and	r18,r18,r2
 c001d10:	003b8906 	br	c000b38 <__alt_data_end+0xfc000b38>
 c001d14:	d9003617 	ldw	r4,216(sp)
 c001d18:	d9403817 	ldw	r5,224(sp)
 c001d1c:	da003d15 	stw	r8,244(sp)
 c001d20:	c006e440 	call	c006e44 <__fpclassifyd>
 c001d24:	da003d17 	ldw	r8,244(sp)
 c001d28:	1000f026 	beq	r2,zero,c0020ec <___vfprintf_internal_r+0x1b24>
 c001d2c:	d9002a17 	ldw	r4,168(sp)
 c001d30:	05bff7c4 	movi	r22,-33
 c001d34:	00bfffc4 	movi	r2,-1
 c001d38:	8dac703a 	and	r22,r17,r22
 c001d3c:	20820026 	beq	r4,r2,c002540 <___vfprintf_internal_r+0x1f78>
 c001d40:	008011c4 	movi	r2,71
 c001d44:	b081f726 	beq	r22,r2,c002524 <___vfprintf_internal_r+0x1f5c>
 c001d48:	d9003817 	ldw	r4,224(sp)
 c001d4c:	90c04014 	ori	r3,r18,256
 c001d50:	d8c02c15 	stw	r3,176(sp)
 c001d54:	20021516 	blt	r4,zero,c0025ac <___vfprintf_internal_r+0x1fe4>
 c001d58:	dcc03817 	ldw	r19,224(sp)
 c001d5c:	d8002905 	stb	zero,164(sp)
 c001d60:	00801984 	movi	r2,102
 c001d64:	8881f926 	beq	r17,r2,c00254c <___vfprintf_internal_r+0x1f84>
 c001d68:	00801184 	movi	r2,70
 c001d6c:	88821c26 	beq	r17,r2,c0025e0 <___vfprintf_internal_r+0x2018>
 c001d70:	00801144 	movi	r2,69
 c001d74:	b081ef26 	beq	r22,r2,c002534 <___vfprintf_internal_r+0x1f6c>
 c001d78:	d8c02a17 	ldw	r3,168(sp)
 c001d7c:	d8802104 	addi	r2,sp,132
 c001d80:	d8800315 	stw	r2,12(sp)
 c001d84:	d9403617 	ldw	r5,216(sp)
 c001d88:	d8802504 	addi	r2,sp,148
 c001d8c:	d9002d17 	ldw	r4,180(sp)
 c001d90:	d8800215 	stw	r2,8(sp)
 c001d94:	d8802604 	addi	r2,sp,152
 c001d98:	d8c00015 	stw	r3,0(sp)
 c001d9c:	d8800115 	stw	r2,4(sp)
 c001da0:	01c00084 	movi	r7,2
 c001da4:	980d883a 	mov	r6,r19
 c001da8:	d8c03c15 	stw	r3,240(sp)
 c001dac:	da003d15 	stw	r8,244(sp)
 c001db0:	c002cf80 	call	c002cf8 <_dtoa_r>
 c001db4:	1021883a 	mov	r16,r2
 c001db8:	008019c4 	movi	r2,103
 c001dbc:	d8c03c17 	ldw	r3,240(sp)
 c001dc0:	da003d17 	ldw	r8,244(sp)
 c001dc4:	88817126 	beq	r17,r2,c00238c <___vfprintf_internal_r+0x1dc4>
 c001dc8:	008011c4 	movi	r2,71
 c001dcc:	88829126 	beq	r17,r2,c002814 <___vfprintf_internal_r+0x224c>
 c001dd0:	80f9883a 	add	fp,r16,r3
 c001dd4:	d9003617 	ldw	r4,216(sp)
 c001dd8:	000d883a 	mov	r6,zero
 c001ddc:	000f883a 	mov	r7,zero
 c001de0:	980b883a 	mov	r5,r19
 c001de4:	da003d15 	stw	r8,244(sp)
 c001de8:	c00bd780 	call	c00bd78 <__eqdf2>
 c001dec:	da003d17 	ldw	r8,244(sp)
 c001df0:	10018d26 	beq	r2,zero,c002428 <___vfprintf_internal_r+0x1e60>
 c001df4:	d8802117 	ldw	r2,132(sp)
 c001df8:	1700062e 	bgeu	r2,fp,c001e14 <___vfprintf_internal_r+0x184c>
 c001dfc:	01000c04 	movi	r4,48
 c001e00:	10c00044 	addi	r3,r2,1
 c001e04:	d8c02115 	stw	r3,132(sp)
 c001e08:	11000005 	stb	r4,0(r2)
 c001e0c:	d8802117 	ldw	r2,132(sp)
 c001e10:	173ffb36 	bltu	r2,fp,c001e00 <__alt_data_end+0xfc001e00>
 c001e14:	1405c83a 	sub	r2,r2,r16
 c001e18:	d8803315 	stw	r2,204(sp)
 c001e1c:	008011c4 	movi	r2,71
 c001e20:	b0817626 	beq	r22,r2,c0023fc <___vfprintf_internal_r+0x1e34>
 c001e24:	00801944 	movi	r2,101
 c001e28:	1442800e 	bge	r2,r17,c00282c <___vfprintf_internal_r+0x2264>
 c001e2c:	d8c02617 	ldw	r3,152(sp)
 c001e30:	00801984 	movi	r2,102
 c001e34:	d8c03215 	stw	r3,200(sp)
 c001e38:	8881fe26 	beq	r17,r2,c002634 <___vfprintf_internal_r+0x206c>
 c001e3c:	d8c03217 	ldw	r3,200(sp)
 c001e40:	d9003317 	ldw	r4,204(sp)
 c001e44:	1901dd16 	blt	r3,r4,c0025bc <___vfprintf_internal_r+0x1ff4>
 c001e48:	9480004c 	andi	r18,r18,1
 c001e4c:	90022b1e 	bne	r18,zero,c0026fc <___vfprintf_internal_r+0x2134>
 c001e50:	1805883a 	mov	r2,r3
 c001e54:	18028316 	blt	r3,zero,c002864 <___vfprintf_internal_r+0x229c>
 c001e58:	d8c03217 	ldw	r3,200(sp)
 c001e5c:	044019c4 	movi	r17,103
 c001e60:	d8c02b15 	stw	r3,172(sp)
 c001e64:	df002907 	ldb	fp,164(sp)
 c001e68:	e001531e 	bne	fp,zero,c0023b8 <___vfprintf_internal_r+0x1df0>
 c001e6c:	df002783 	ldbu	fp,158(sp)
 c001e70:	d8802915 	stw	r2,164(sp)
 c001e74:	dc802c17 	ldw	r18,176(sp)
 c001e78:	d8002a15 	stw	zero,168(sp)
 c001e7c:	003baf06 	br	c000d3c <__alt_data_end+0xfc000d3c>
 c001e80:	d8c02e17 	ldw	r3,184(sp)
 c001e84:	d9002e17 	ldw	r4,184(sp)
 c001e88:	d9402e17 	ldw	r5,184(sp)
 c001e8c:	18c00017 	ldw	r3,0(r3)
 c001e90:	21000117 	ldw	r4,4(r4)
 c001e94:	29400204 	addi	r5,r5,8
 c001e98:	d8c03615 	stw	r3,216(sp)
 c001e9c:	d9003815 	stw	r4,224(sp)
 c001ea0:	d9402e15 	stw	r5,184(sp)
 c001ea4:	003b5006 	br	c000be8 <__alt_data_end+0xfc000be8>
 c001ea8:	ac400007 	ldb	r17,0(r21)
 c001eac:	003a2806 	br	c000750 <__alt_data_end+0xfc000750>
 c001eb0:	9080100c 	andi	r2,r18,64
 c001eb4:	1000a826 	beq	r2,zero,c002158 <___vfprintf_internal_r+0x1b90>
 c001eb8:	d8c02e17 	ldw	r3,184(sp)
 c001ebc:	002d883a 	mov	r22,zero
 c001ec0:	1cc0000b 	ldhu	r19,0(r3)
 c001ec4:	18c00104 	addi	r3,r3,4
 c001ec8:	d8c02e15 	stw	r3,184(sp)
 c001ecc:	003caf06 	br	c00118c <__alt_data_end+0xfc00118c>
 c001ed0:	d9002e17 	ldw	r4,184(sp)
 c001ed4:	d9402a17 	ldw	r5,168(sp)
 c001ed8:	002d883a 	mov	r22,zero
 c001edc:	20800104 	addi	r2,r4,4
 c001ee0:	24c00017 	ldw	r19,0(r4)
 c001ee4:	283ebb0e 	bge	r5,zero,c0019d4 <__alt_data_end+0xfc0019d4>
 c001ee8:	003ef106 	br	c001ab0 <__alt_data_end+0xfc001ab0>
 c001eec:	9080040c 	andi	r2,r18,16
 c001ef0:	1000921e 	bne	r2,zero,c00213c <___vfprintf_internal_r+0x1b74>
 c001ef4:	9480100c 	andi	r18,r18,64
 c001ef8:	90013926 	beq	r18,zero,c0023e0 <___vfprintf_internal_r+0x1e18>
 c001efc:	d9402e17 	ldw	r5,184(sp)
 c001f00:	d8c02f17 	ldw	r3,188(sp)
 c001f04:	28800017 	ldw	r2,0(r5)
 c001f08:	29400104 	addi	r5,r5,4
 c001f0c:	d9402e15 	stw	r5,184(sp)
 c001f10:	10c0000d 	sth	r3,0(r2)
 c001f14:	0039e406 	br	c0006a8 <__alt_data_end+0xfc0006a8>
 c001f18:	9080100c 	andi	r2,r18,64
 c001f1c:	10008026 	beq	r2,zero,c002120 <___vfprintf_internal_r+0x1b58>
 c001f20:	d8802e17 	ldw	r2,184(sp)
 c001f24:	14c0000f 	ldh	r19,0(r2)
 c001f28:	10800104 	addi	r2,r2,4
 c001f2c:	d8802e15 	stw	r2,184(sp)
 c001f30:	982dd7fa 	srai	r22,r19,31
 c001f34:	b005883a 	mov	r2,r22
 c001f38:	003af706 	br	c000b18 <__alt_data_end+0xfc000b18>
 c001f3c:	9080100c 	andi	r2,r18,64
 c001f40:	d8002785 	stb	zero,158(sp)
 c001f44:	10008a1e 	bne	r2,zero,c002170 <___vfprintf_internal_r+0x1ba8>
 c001f48:	d9002e17 	ldw	r4,184(sp)
 c001f4c:	d9402a17 	ldw	r5,168(sp)
 c001f50:	002d883a 	mov	r22,zero
 c001f54:	20800104 	addi	r2,r4,4
 c001f58:	24c00017 	ldw	r19,0(r4)
 c001f5c:	283e4b0e 	bge	r5,zero,c00188c <__alt_data_end+0xfc00188c>
 c001f60:	9d86b03a 	or	r3,r19,r22
 c001f64:	d8802e15 	stw	r2,184(sp)
 c001f68:	183e4c1e 	bne	r3,zero,c00189c <__alt_data_end+0xfc00189c>
 c001f6c:	0039883a 	mov	fp,zero
 c001f70:	0005883a 	mov	r2,zero
 c001f74:	003d4006 	br	c001478 <__alt_data_end+0xfc001478>
 c001f78:	01430074 	movhi	r5,3073
 c001f7c:	297ef984 	addi	r5,r5,-1050
 c001f80:	d9402c15 	stw	r5,176(sp)
 c001f84:	d9402c17 	ldw	r5,176(sp)
 c001f88:	1c47883a 	add	r3,r3,r17
 c001f8c:	10800044 	addi	r2,r2,1
 c001f90:	41400015 	stw	r5,0(r8)
 c001f94:	44400115 	stw	r17,4(r8)
 c001f98:	d8c02015 	stw	r3,128(sp)
 c001f9c:	d8801f15 	stw	r2,124(sp)
 c001fa0:	010001c4 	movi	r4,7
 c001fa4:	20bec816 	blt	r4,r2,c001ac8 <__alt_data_end+0xfc001ac8>
 c001fa8:	42000204 	addi	r8,r8,8
 c001fac:	003ecd06 	br	c001ae4 <__alt_data_end+0xfc001ae4>
 c001fb0:	d9002a17 	ldw	r4,168(sp)
 c001fb4:	d8002785 	stb	zero,158(sp)
 c001fb8:	203d2d16 	blt	r4,zero,c001470 <__alt_data_end+0xfc001470>
 c001fbc:	00bfdfc4 	movi	r2,-129
 c001fc0:	90a4703a 	and	r18,r18,r2
 c001fc4:	003a6106 	br	c00094c <__alt_data_end+0xfc00094c>
 c001fc8:	01030074 	movhi	r4,3073
 c001fcc:	213ef984 	addi	r4,r4,-1050
 c001fd0:	d9002c15 	stw	r4,176(sp)
 c001fd4:	003bea06 	br	c000f80 <__alt_data_end+0xfc000f80>
 c001fd8:	d9002d17 	ldw	r4,180(sp)
 c001fdc:	d9801e04 	addi	r6,sp,120
 c001fe0:	b80b883a 	mov	r5,r23
 c001fe4:	c0072b80 	call	c0072b8 <__sprint_r>
 c001fe8:	103a7b1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c001fec:	d8c02017 	ldw	r3,128(sp)
 c001ff0:	da000404 	addi	r8,sp,16
 c001ff4:	003d4106 	br	c0014fc <__alt_data_end+0xfc0014fc>
 c001ff8:	d8801f17 	ldw	r2,124(sp)
 c001ffc:	01430074 	movhi	r5,3073
 c002000:	01000044 	movi	r4,1
 c002004:	18c00044 	addi	r3,r3,1
 c002008:	10800044 	addi	r2,r2,1
 c00200c:	297ef904 	addi	r5,r5,-1052
 c002010:	41000115 	stw	r4,4(r8)
 c002014:	41400015 	stw	r5,0(r8)
 c002018:	d8c02015 	stw	r3,128(sp)
 c00201c:	d8801f15 	stw	r2,124(sp)
 c002020:	010001c4 	movi	r4,7
 c002024:	20805c16 	blt	r4,r2,c002198 <___vfprintf_internal_r+0x1bd0>
 c002028:	42000204 	addi	r8,r8,8
 c00202c:	8800041e 	bne	r17,zero,c002040 <___vfprintf_internal_r+0x1a78>
 c002030:	d8803317 	ldw	r2,204(sp)
 c002034:	1000021e 	bne	r2,zero,c002040 <___vfprintf_internal_r+0x1a78>
 c002038:	9080004c 	andi	r2,r18,1
 c00203c:	103be726 	beq	r2,zero,c000fdc <__alt_data_end+0xfc000fdc>
 c002040:	d9003717 	ldw	r4,220(sp)
 c002044:	d8801f17 	ldw	r2,124(sp)
 c002048:	d9403417 	ldw	r5,208(sp)
 c00204c:	20c7883a 	add	r3,r4,r3
 c002050:	10800044 	addi	r2,r2,1
 c002054:	41000115 	stw	r4,4(r8)
 c002058:	41400015 	stw	r5,0(r8)
 c00205c:	d8c02015 	stw	r3,128(sp)
 c002060:	d8801f15 	stw	r2,124(sp)
 c002064:	010001c4 	movi	r4,7
 c002068:	20812116 	blt	r4,r2,c0024f0 <___vfprintf_internal_r+0x1f28>
 c00206c:	42000204 	addi	r8,r8,8
 c002070:	0463c83a 	sub	r17,zero,r17
 c002074:	0440730e 	bge	zero,r17,c002244 <___vfprintf_internal_r+0x1c7c>
 c002078:	05800404 	movi	r22,16
 c00207c:	b440860e 	bge	r22,r17,c002298 <___vfprintf_internal_r+0x1cd0>
 c002080:	01430074 	movhi	r5,3073
 c002084:	297ef984 	addi	r5,r5,-1050
 c002088:	d9402c15 	stw	r5,176(sp)
 c00208c:	070001c4 	movi	fp,7
 c002090:	dcc02d17 	ldw	r19,180(sp)
 c002094:	00000306 	br	c0020a4 <___vfprintf_internal_r+0x1adc>
 c002098:	42000204 	addi	r8,r8,8
 c00209c:	8c7ffc04 	addi	r17,r17,-16
 c0020a0:	b440800e 	bge	r22,r17,c0022a4 <___vfprintf_internal_r+0x1cdc>
 c0020a4:	18c00404 	addi	r3,r3,16
 c0020a8:	10800044 	addi	r2,r2,1
 c0020ac:	45000015 	stw	r20,0(r8)
 c0020b0:	45800115 	stw	r22,4(r8)
 c0020b4:	d8c02015 	stw	r3,128(sp)
 c0020b8:	d8801f15 	stw	r2,124(sp)
 c0020bc:	e0bff60e 	bge	fp,r2,c002098 <__alt_data_end+0xfc002098>
 c0020c0:	d9801e04 	addi	r6,sp,120
 c0020c4:	b80b883a 	mov	r5,r23
 c0020c8:	9809883a 	mov	r4,r19
 c0020cc:	c0072b80 	call	c0072b8 <__sprint_r>
 c0020d0:	103a411e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0020d4:	d8c02017 	ldw	r3,128(sp)
 c0020d8:	d8801f17 	ldw	r2,124(sp)
 c0020dc:	da000404 	addi	r8,sp,16
 c0020e0:	003fee06 	br	c00209c <__alt_data_end+0xfc00209c>
 c0020e4:	00bfffc4 	movi	r2,-1
 c0020e8:	003a3f06 	br	c0009e8 <__alt_data_end+0xfc0009e8>
 c0020ec:	008011c4 	movi	r2,71
 c0020f0:	1440b816 	blt	r2,r17,c0023d4 <___vfprintf_internal_r+0x1e0c>
 c0020f4:	04030074 	movhi	r16,3073
 c0020f8:	843eeb04 	addi	r16,r16,-1108
 c0020fc:	00c000c4 	movi	r3,3
 c002100:	00bfdfc4 	movi	r2,-129
 c002104:	d8c02915 	stw	r3,164(sp)
 c002108:	90a4703a 	and	r18,r18,r2
 c00210c:	df002783 	ldbu	fp,158(sp)
 c002110:	d8c02b15 	stw	r3,172(sp)
 c002114:	d8002a15 	stw	zero,168(sp)
 c002118:	d8003215 	stw	zero,200(sp)
 c00211c:	003b0706 	br	c000d3c <__alt_data_end+0xfc000d3c>
 c002120:	d8c02e17 	ldw	r3,184(sp)
 c002124:	1cc00017 	ldw	r19,0(r3)
 c002128:	18c00104 	addi	r3,r3,4
 c00212c:	d8c02e15 	stw	r3,184(sp)
 c002130:	982dd7fa 	srai	r22,r19,31
 c002134:	b005883a 	mov	r2,r22
 c002138:	003a7706 	br	c000b18 <__alt_data_end+0xfc000b18>
 c00213c:	d8c02e17 	ldw	r3,184(sp)
 c002140:	d9002f17 	ldw	r4,188(sp)
 c002144:	18800017 	ldw	r2,0(r3)
 c002148:	18c00104 	addi	r3,r3,4
 c00214c:	d8c02e15 	stw	r3,184(sp)
 c002150:	11000015 	stw	r4,0(r2)
 c002154:	00395406 	br	c0006a8 <__alt_data_end+0xfc0006a8>
 c002158:	d9002e17 	ldw	r4,184(sp)
 c00215c:	002d883a 	mov	r22,zero
 c002160:	24c00017 	ldw	r19,0(r4)
 c002164:	21000104 	addi	r4,r4,4
 c002168:	d9002e15 	stw	r4,184(sp)
 c00216c:	003c0706 	br	c00118c <__alt_data_end+0xfc00118c>
 c002170:	d9402e17 	ldw	r5,184(sp)
 c002174:	d8c02a17 	ldw	r3,168(sp)
 c002178:	002d883a 	mov	r22,zero
 c00217c:	28800104 	addi	r2,r5,4
 c002180:	2cc0000b 	ldhu	r19,0(r5)
 c002184:	183dc10e 	bge	r3,zero,c00188c <__alt_data_end+0xfc00188c>
 c002188:	003f7506 	br	c001f60 <__alt_data_end+0xfc001f60>
 c00218c:	04030074 	movhi	r16,3073
 c002190:	843ee904 	addi	r16,r16,-1116
 c002194:	003aa706 	br	c000c34 <__alt_data_end+0xfc000c34>
 c002198:	d9002d17 	ldw	r4,180(sp)
 c00219c:	d9801e04 	addi	r6,sp,120
 c0021a0:	b80b883a 	mov	r5,r23
 c0021a4:	c0072b80 	call	c0072b8 <__sprint_r>
 c0021a8:	103a0b1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0021ac:	dc402617 	ldw	r17,152(sp)
 c0021b0:	d8c02017 	ldw	r3,128(sp)
 c0021b4:	da000404 	addi	r8,sp,16
 c0021b8:	003f9c06 	br	c00202c <__alt_data_end+0xfc00202c>
 c0021bc:	ac400043 	ldbu	r17,1(r21)
 c0021c0:	84000814 	ori	r16,r16,32
 c0021c4:	ad400044 	addi	r21,r21,1
 c0021c8:	8c403fcc 	andi	r17,r17,255
 c0021cc:	8c40201c 	xori	r17,r17,128
 c0021d0:	8c7fe004 	addi	r17,r17,-128
 c0021d4:	00395e06 	br	c000750 <__alt_data_end+0xfc000750>
 c0021d8:	d8c02e15 	stw	r3,184(sp)
 c0021dc:	0039883a 	mov	fp,zero
 c0021e0:	003e3506 	br	c001ab8 <__alt_data_end+0xfc001ab8>
 c0021e4:	d9002d17 	ldw	r4,180(sp)
 c0021e8:	d9801e04 	addi	r6,sp,120
 c0021ec:	b80b883a 	mov	r5,r23
 c0021f0:	c0072b80 	call	c0072b8 <__sprint_r>
 c0021f4:	1039f81e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0021f8:	d8c02017 	ldw	r3,128(sp)
 c0021fc:	da000404 	addi	r8,sp,16
 c002200:	003cd006 	br	c001544 <__alt_data_end+0xfc001544>
 c002204:	8009883a 	mov	r4,r16
 c002208:	df003d15 	stw	fp,244(sp)
 c00220c:	c0071240 	call	c007124 <strlen>
 c002210:	d8802b15 	stw	r2,172(sp)
 c002214:	da003d17 	ldw	r8,244(sp)
 c002218:	103c200e 	bge	r2,zero,c00129c <__alt_data_end+0xfc00129c>
 c00221c:	0005883a 	mov	r2,zero
 c002220:	003c1e06 	br	c00129c <__alt_data_end+0xfc00129c>
 c002224:	d9002d17 	ldw	r4,180(sp)
 c002228:	d9801e04 	addi	r6,sp,120
 c00222c:	b80b883a 	mov	r5,r23
 c002230:	c0072b80 	call	c0072b8 <__sprint_r>
 c002234:	1039e81e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c002238:	d8c02017 	ldw	r3,128(sp)
 c00223c:	d8801f17 	ldw	r2,124(sp)
 c002240:	da000404 	addi	r8,sp,16
 c002244:	d9403317 	ldw	r5,204(sp)
 c002248:	10800044 	addi	r2,r2,1
 c00224c:	44000015 	stw	r16,0(r8)
 c002250:	28c7883a 	add	r3,r5,r3
 c002254:	003b5b06 	br	c000fc4 <__alt_data_end+0xfc000fc4>
 c002258:	01030074 	movhi	r4,3073
 c00225c:	213efd84 	addi	r4,r4,-1034
 c002260:	d9003515 	stw	r4,212(sp)
 c002264:	003af206 	br	c000e30 <__alt_data_end+0xfc000e30>
 c002268:	013fffc4 	movi	r4,-1
 c00226c:	003a0806 	br	c000a90 <__alt_data_end+0xfc000a90>
 c002270:	0023883a 	mov	r17,zero
 c002274:	003d9d06 	br	c0018ec <__alt_data_end+0xfc0018ec>
 c002278:	d9002d17 	ldw	r4,180(sp)
 c00227c:	d9801e04 	addi	r6,sp,120
 c002280:	b80b883a 	mov	r5,r23
 c002284:	c0072b80 	call	c0072b8 <__sprint_r>
 c002288:	1039d31e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c00228c:	d8c02017 	ldw	r3,128(sp)
 c002290:	da000404 	addi	r8,sp,16
 c002294:	003d9406 	br	c0018e8 <__alt_data_end+0xfc0018e8>
 c002298:	01030074 	movhi	r4,3073
 c00229c:	213ef984 	addi	r4,r4,-1050
 c0022a0:	d9002c15 	stw	r4,176(sp)
 c0022a4:	d9002c17 	ldw	r4,176(sp)
 c0022a8:	1c47883a 	add	r3,r3,r17
 c0022ac:	10800044 	addi	r2,r2,1
 c0022b0:	41000015 	stw	r4,0(r8)
 c0022b4:	44400115 	stw	r17,4(r8)
 c0022b8:	d8c02015 	stw	r3,128(sp)
 c0022bc:	d8801f15 	stw	r2,124(sp)
 c0022c0:	010001c4 	movi	r4,7
 c0022c4:	20bfd716 	blt	r4,r2,c002224 <__alt_data_end+0xfc002224>
 c0022c8:	42000204 	addi	r8,r8,8
 c0022cc:	003fdd06 	br	c002244 <__alt_data_end+0xfc002244>
 c0022d0:	d9002d17 	ldw	r4,180(sp)
 c0022d4:	d9801e04 	addi	r6,sp,120
 c0022d8:	b80b883a 	mov	r5,r23
 c0022dc:	c0072b80 	call	c0072b8 <__sprint_r>
 c0022e0:	1039bd1e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c0022e4:	d8802617 	ldw	r2,152(sp)
 c0022e8:	d8c02017 	ldw	r3,128(sp)
 c0022ec:	da000404 	addi	r8,sp,16
 c0022f0:	003e1006 	br	c001b34 <__alt_data_end+0xfc001b34>
 c0022f4:	00800044 	movi	r2,1
 c0022f8:	10803fcc 	andi	r2,r2,255
 c0022fc:	00c00044 	movi	r3,1
 c002300:	10fa0d26 	beq	r2,r3,c000b38 <__alt_data_end+0xfc000b38>
 c002304:	00c00084 	movi	r3,2
 c002308:	10fbaf26 	beq	r2,r3,c0011c8 <__alt_data_end+0xfc0011c8>
 c00230c:	003a6d06 	br	c000cc4 <__alt_data_end+0xfc000cc4>
 c002310:	01030074 	movhi	r4,3073
 c002314:	213efd84 	addi	r4,r4,-1034
 c002318:	d9003515 	stw	r4,212(sp)
 c00231c:	003b5406 	br	c001070 <__alt_data_end+0xfc001070>
 c002320:	d8802a17 	ldw	r2,168(sp)
 c002324:	00c00184 	movi	r3,6
 c002328:	1880012e 	bgeu	r3,r2,c002330 <___vfprintf_internal_r+0x1d68>
 c00232c:	1805883a 	mov	r2,r3
 c002330:	d8802b15 	stw	r2,172(sp)
 c002334:	1000ef16 	blt	r2,zero,c0026f4 <___vfprintf_internal_r+0x212c>
 c002338:	04030074 	movhi	r16,3073
 c00233c:	d8802915 	stw	r2,164(sp)
 c002340:	dcc02e15 	stw	r19,184(sp)
 c002344:	d8002a15 	stw	zero,168(sp)
 c002348:	d8003215 	stw	zero,200(sp)
 c00234c:	843ef704 	addi	r16,r16,-1060
 c002350:	0039883a 	mov	fp,zero
 c002354:	003a8006 	br	c000d58 <__alt_data_end+0xfc000d58>
 c002358:	0021883a 	mov	r16,zero
 c00235c:	003e0706 	br	c001b7c <__alt_data_end+0xfc001b7c>
 c002360:	d9002d17 	ldw	r4,180(sp)
 c002364:	d9801e04 	addi	r6,sp,120
 c002368:	b80b883a 	mov	r5,r23
 c00236c:	c0072b80 	call	c0072b8 <__sprint_r>
 c002370:	1039991e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c002374:	d8802617 	ldw	r2,152(sp)
 c002378:	d9403317 	ldw	r5,204(sp)
 c00237c:	d8c02017 	ldw	r3,128(sp)
 c002380:	da000404 	addi	r8,sp,16
 c002384:	2885c83a 	sub	r2,r5,r2
 c002388:	003dfb06 	br	c001b78 <__alt_data_end+0xfc001b78>
 c00238c:	9080004c 	andi	r2,r18,1
 c002390:	103e8f1e 	bne	r2,zero,c001dd0 <__alt_data_end+0xfc001dd0>
 c002394:	d8802117 	ldw	r2,132(sp)
 c002398:	003e9e06 	br	c001e14 <__alt_data_end+0xfc001e14>
 c00239c:	1025883a 	mov	r18,r2
 c0023a0:	0039883a 	mov	fp,zero
 c0023a4:	00800084 	movi	r2,2
 c0023a8:	003fd306 	br	c0022f8 <__alt_data_end+0xfc0022f8>
 c0023ac:	07000b44 	movi	fp,45
 c0023b0:	df002785 	stb	fp,158(sp)
 c0023b4:	003a1b06 	br	c000c24 <__alt_data_end+0xfc000c24>
 c0023b8:	00c00b44 	movi	r3,45
 c0023bc:	d8c02785 	stb	r3,158(sp)
 c0023c0:	d8802915 	stw	r2,164(sp)
 c0023c4:	dc802c17 	ldw	r18,176(sp)
 c0023c8:	d8002a15 	stw	zero,168(sp)
 c0023cc:	07000b44 	movi	fp,45
 c0023d0:	003a5e06 	br	c000d4c <__alt_data_end+0xfc000d4c>
 c0023d4:	04030074 	movhi	r16,3073
 c0023d8:	843eec04 	addi	r16,r16,-1104
 c0023dc:	003f4706 	br	c0020fc <__alt_data_end+0xfc0020fc>
 c0023e0:	d9002e17 	ldw	r4,184(sp)
 c0023e4:	d9402f17 	ldw	r5,188(sp)
 c0023e8:	20800017 	ldw	r2,0(r4)
 c0023ec:	21000104 	addi	r4,r4,4
 c0023f0:	d9002e15 	stw	r4,184(sp)
 c0023f4:	11400015 	stw	r5,0(r2)
 c0023f8:	0038ab06 	br	c0006a8 <__alt_data_end+0xfc0006a8>
 c0023fc:	dd802617 	ldw	r22,152(sp)
 c002400:	00bfff44 	movi	r2,-3
 c002404:	b0801c16 	blt	r22,r2,c002478 <___vfprintf_internal_r+0x1eb0>
 c002408:	d9402a17 	ldw	r5,168(sp)
 c00240c:	2d801a16 	blt	r5,r22,c002478 <___vfprintf_internal_r+0x1eb0>
 c002410:	dd803215 	stw	r22,200(sp)
 c002414:	003e8906 	br	c001e3c <__alt_data_end+0xfc001e3c>
 c002418:	01030074 	movhi	r4,3073
 c00241c:	213ef984 	addi	r4,r4,-1050
 c002420:	d9002c15 	stw	r4,176(sp)
 c002424:	003c9106 	br	c00166c <__alt_data_end+0xfc00166c>
 c002428:	e005883a 	mov	r2,fp
 c00242c:	003e7906 	br	c001e14 <__alt_data_end+0xfc001e14>
 c002430:	d9002a17 	ldw	r4,168(sp)
 c002434:	df002783 	ldbu	fp,158(sp)
 c002438:	dcc02e15 	stw	r19,184(sp)
 c00243c:	d9002915 	stw	r4,164(sp)
 c002440:	d9002b15 	stw	r4,172(sp)
 c002444:	d8002a15 	stw	zero,168(sp)
 c002448:	d8003215 	stw	zero,200(sp)
 c00244c:	003a3b06 	br	c000d3c <__alt_data_end+0xfc000d3c>
 c002450:	9080004c 	andi	r2,r18,1
 c002454:	0039883a 	mov	fp,zero
 c002458:	10000426 	beq	r2,zero,c00246c <___vfprintf_internal_r+0x1ea4>
 c00245c:	00800c04 	movi	r2,48
 c002460:	dc001dc4 	addi	r16,sp,119
 c002464:	d8801dc5 	stb	r2,119(sp)
 c002468:	003b6406 	br	c0011fc <__alt_data_end+0xfc0011fc>
 c00246c:	d8002b15 	stw	zero,172(sp)
 c002470:	dc001e04 	addi	r16,sp,120
 c002474:	003a2b06 	br	c000d24 <__alt_data_end+0xfc000d24>
 c002478:	8c7fff84 	addi	r17,r17,-2
 c00247c:	b5bfffc4 	addi	r22,r22,-1
 c002480:	dd802615 	stw	r22,152(sp)
 c002484:	dc4022c5 	stb	r17,139(sp)
 c002488:	b000bf16 	blt	r22,zero,c002788 <___vfprintf_internal_r+0x21c0>
 c00248c:	00800ac4 	movi	r2,43
 c002490:	d8802305 	stb	r2,140(sp)
 c002494:	00800244 	movi	r2,9
 c002498:	15807016 	blt	r2,r22,c00265c <___vfprintf_internal_r+0x2094>
 c00249c:	00800c04 	movi	r2,48
 c0024a0:	b5800c04 	addi	r22,r22,48
 c0024a4:	d8802345 	stb	r2,141(sp)
 c0024a8:	dd802385 	stb	r22,142(sp)
 c0024ac:	d88023c4 	addi	r2,sp,143
 c0024b0:	df0022c4 	addi	fp,sp,139
 c0024b4:	d8c03317 	ldw	r3,204(sp)
 c0024b8:	1739c83a 	sub	fp,r2,fp
 c0024bc:	d9003317 	ldw	r4,204(sp)
 c0024c0:	e0c7883a 	add	r3,fp,r3
 c0024c4:	df003a15 	stw	fp,232(sp)
 c0024c8:	d8c02b15 	stw	r3,172(sp)
 c0024cc:	00800044 	movi	r2,1
 c0024d0:	1100b30e 	bge	r2,r4,c0027a0 <___vfprintf_internal_r+0x21d8>
 c0024d4:	d8c02b17 	ldw	r3,172(sp)
 c0024d8:	18c00044 	addi	r3,r3,1
 c0024dc:	d8c02b15 	stw	r3,172(sp)
 c0024e0:	1805883a 	mov	r2,r3
 c0024e4:	1800ac16 	blt	r3,zero,c002798 <___vfprintf_internal_r+0x21d0>
 c0024e8:	d8003215 	stw	zero,200(sp)
 c0024ec:	003e5d06 	br	c001e64 <__alt_data_end+0xfc001e64>
 c0024f0:	d9002d17 	ldw	r4,180(sp)
 c0024f4:	d9801e04 	addi	r6,sp,120
 c0024f8:	b80b883a 	mov	r5,r23
 c0024fc:	c0072b80 	call	c0072b8 <__sprint_r>
 c002500:	1039351e 	bne	r2,zero,c0009d8 <__alt_data_end+0xfc0009d8>
 c002504:	dc402617 	ldw	r17,152(sp)
 c002508:	d8c02017 	ldw	r3,128(sp)
 c00250c:	d8801f17 	ldw	r2,124(sp)
 c002510:	da000404 	addi	r8,sp,16
 c002514:	003ed606 	br	c002070 <__alt_data_end+0xfc002070>
 c002518:	182b883a 	mov	r21,r3
 c00251c:	d8002a15 	stw	zero,168(sp)
 c002520:	00388c06 	br	c000754 <__alt_data_end+0xfc000754>
 c002524:	d8802a17 	ldw	r2,168(sp)
 c002528:	103e071e 	bne	r2,zero,c001d48 <__alt_data_end+0xfc001d48>
 c00252c:	dc002a15 	stw	r16,168(sp)
 c002530:	003e0506 	br	c001d48 <__alt_data_end+0xfc001d48>
 c002534:	d9002a17 	ldw	r4,168(sp)
 c002538:	20c00044 	addi	r3,r4,1
 c00253c:	003e0f06 	br	c001d7c <__alt_data_end+0xfc001d7c>
 c002540:	01400184 	movi	r5,6
 c002544:	d9402a15 	stw	r5,168(sp)
 c002548:	003dff06 	br	c001d48 <__alt_data_end+0xfc001d48>
 c00254c:	d8802104 	addi	r2,sp,132
 c002550:	d8800315 	stw	r2,12(sp)
 c002554:	d8802504 	addi	r2,sp,148
 c002558:	d8800215 	stw	r2,8(sp)
 c00255c:	d8802604 	addi	r2,sp,152
 c002560:	d8800115 	stw	r2,4(sp)
 c002564:	d8802a17 	ldw	r2,168(sp)
 c002568:	d9403617 	ldw	r5,216(sp)
 c00256c:	d9002d17 	ldw	r4,180(sp)
 c002570:	d8800015 	stw	r2,0(sp)
 c002574:	01c000c4 	movi	r7,3
 c002578:	980d883a 	mov	r6,r19
 c00257c:	da003d15 	stw	r8,244(sp)
 c002580:	c002cf80 	call	c002cf8 <_dtoa_r>
 c002584:	d8c02a17 	ldw	r3,168(sp)
 c002588:	da003d17 	ldw	r8,244(sp)
 c00258c:	1021883a 	mov	r16,r2
 c002590:	10f9883a 	add	fp,r2,r3
 c002594:	81000007 	ldb	r4,0(r16)
 c002598:	00800c04 	movi	r2,48
 c00259c:	20805e26 	beq	r4,r2,c002718 <___vfprintf_internal_r+0x2150>
 c0025a0:	d8c02617 	ldw	r3,152(sp)
 c0025a4:	e0f9883a 	add	fp,fp,r3
 c0025a8:	003e0a06 	br	c001dd4 <__alt_data_end+0xfc001dd4>
 c0025ac:	00c00b44 	movi	r3,45
 c0025b0:	24e0003c 	xorhi	r19,r4,32768
 c0025b4:	d8c02905 	stb	r3,164(sp)
 c0025b8:	003de906 	br	c001d60 <__alt_data_end+0xfc001d60>
 c0025bc:	d8c03217 	ldw	r3,200(sp)
 c0025c0:	00c07a0e 	bge	zero,r3,c0027ac <___vfprintf_internal_r+0x21e4>
 c0025c4:	00800044 	movi	r2,1
 c0025c8:	d9003317 	ldw	r4,204(sp)
 c0025cc:	1105883a 	add	r2,r2,r4
 c0025d0:	d8802b15 	stw	r2,172(sp)
 c0025d4:	10004e16 	blt	r2,zero,c002710 <___vfprintf_internal_r+0x2148>
 c0025d8:	044019c4 	movi	r17,103
 c0025dc:	003e2106 	br	c001e64 <__alt_data_end+0xfc001e64>
 c0025e0:	d9002a17 	ldw	r4,168(sp)
 c0025e4:	d8802104 	addi	r2,sp,132
 c0025e8:	d8800315 	stw	r2,12(sp)
 c0025ec:	d9000015 	stw	r4,0(sp)
 c0025f0:	d8802504 	addi	r2,sp,148
 c0025f4:	d9403617 	ldw	r5,216(sp)
 c0025f8:	d9002d17 	ldw	r4,180(sp)
 c0025fc:	d8800215 	stw	r2,8(sp)
 c002600:	d8802604 	addi	r2,sp,152
 c002604:	d8800115 	stw	r2,4(sp)
 c002608:	01c000c4 	movi	r7,3
 c00260c:	980d883a 	mov	r6,r19
 c002610:	da003d15 	stw	r8,244(sp)
 c002614:	c002cf80 	call	c002cf8 <_dtoa_r>
 c002618:	d8c02a17 	ldw	r3,168(sp)
 c00261c:	da003d17 	ldw	r8,244(sp)
 c002620:	1021883a 	mov	r16,r2
 c002624:	00801184 	movi	r2,70
 c002628:	80f9883a 	add	fp,r16,r3
 c00262c:	88bfd926 	beq	r17,r2,c002594 <__alt_data_end+0xfc002594>
 c002630:	003de806 	br	c001dd4 <__alt_data_end+0xfc001dd4>
 c002634:	d9002a17 	ldw	r4,168(sp)
 c002638:	00c04d0e 	bge	zero,r3,c002770 <___vfprintf_internal_r+0x21a8>
 c00263c:	2000441e 	bne	r4,zero,c002750 <___vfprintf_internal_r+0x2188>
 c002640:	9480004c 	andi	r18,r18,1
 c002644:	9000421e 	bne	r18,zero,c002750 <___vfprintf_internal_r+0x2188>
 c002648:	1805883a 	mov	r2,r3
 c00264c:	18006f16 	blt	r3,zero,c00280c <___vfprintf_internal_r+0x2244>
 c002650:	d8c03217 	ldw	r3,200(sp)
 c002654:	d8c02b15 	stw	r3,172(sp)
 c002658:	003e0206 	br	c001e64 <__alt_data_end+0xfc001e64>
 c00265c:	df0022c4 	addi	fp,sp,139
 c002660:	dc002a15 	stw	r16,168(sp)
 c002664:	4027883a 	mov	r19,r8
 c002668:	e021883a 	mov	r16,fp
 c00266c:	b009883a 	mov	r4,r22
 c002670:	01400284 	movi	r5,10
 c002674:	c00a9cc0 	call	c00a9cc <__modsi3>
 c002678:	10800c04 	addi	r2,r2,48
 c00267c:	843fffc4 	addi	r16,r16,-1
 c002680:	b009883a 	mov	r4,r22
 c002684:	01400284 	movi	r5,10
 c002688:	80800005 	stb	r2,0(r16)
 c00268c:	c00a9480 	call	c00a948 <__divsi3>
 c002690:	102d883a 	mov	r22,r2
 c002694:	00800244 	movi	r2,9
 c002698:	15bff416 	blt	r2,r22,c00266c <__alt_data_end+0xfc00266c>
 c00269c:	9811883a 	mov	r8,r19
 c0026a0:	b0800c04 	addi	r2,r22,48
 c0026a4:	8027883a 	mov	r19,r16
 c0026a8:	997fffc4 	addi	r5,r19,-1
 c0026ac:	98bfffc5 	stb	r2,-1(r19)
 c0026b0:	dc002a17 	ldw	r16,168(sp)
 c0026b4:	2f006d2e 	bgeu	r5,fp,c00286c <___vfprintf_internal_r+0x22a4>
 c0026b8:	d9c02384 	addi	r7,sp,142
 c0026bc:	3ccfc83a 	sub	r7,r7,r19
 c0026c0:	d9002344 	addi	r4,sp,141
 c0026c4:	e1cf883a 	add	r7,fp,r7
 c0026c8:	00000106 	br	c0026d0 <___vfprintf_internal_r+0x2108>
 c0026cc:	28800003 	ldbu	r2,0(r5)
 c0026d0:	20800005 	stb	r2,0(r4)
 c0026d4:	21000044 	addi	r4,r4,1
 c0026d8:	29400044 	addi	r5,r5,1
 c0026dc:	393ffb1e 	bne	r7,r4,c0026cc <__alt_data_end+0xfc0026cc>
 c0026e0:	d8802304 	addi	r2,sp,140
 c0026e4:	14c5c83a 	sub	r2,r2,r19
 c0026e8:	d8c02344 	addi	r3,sp,141
 c0026ec:	1885883a 	add	r2,r3,r2
 c0026f0:	003f7006 	br	c0024b4 <__alt_data_end+0xfc0024b4>
 c0026f4:	0005883a 	mov	r2,zero
 c0026f8:	003f0f06 	br	c002338 <__alt_data_end+0xfc002338>
 c0026fc:	d8c03217 	ldw	r3,200(sp)
 c002700:	18c00044 	addi	r3,r3,1
 c002704:	d8c02b15 	stw	r3,172(sp)
 c002708:	1805883a 	mov	r2,r3
 c00270c:	183fb20e 	bge	r3,zero,c0025d8 <__alt_data_end+0xfc0025d8>
 c002710:	0005883a 	mov	r2,zero
 c002714:	003fb006 	br	c0025d8 <__alt_data_end+0xfc0025d8>
 c002718:	d9003617 	ldw	r4,216(sp)
 c00271c:	000d883a 	mov	r6,zero
 c002720:	000f883a 	mov	r7,zero
 c002724:	980b883a 	mov	r5,r19
 c002728:	d8c03c15 	stw	r3,240(sp)
 c00272c:	da003d15 	stw	r8,244(sp)
 c002730:	c00bd780 	call	c00bd78 <__eqdf2>
 c002734:	d8c03c17 	ldw	r3,240(sp)
 c002738:	da003d17 	ldw	r8,244(sp)
 c00273c:	103f9826 	beq	r2,zero,c0025a0 <__alt_data_end+0xfc0025a0>
 c002740:	00800044 	movi	r2,1
 c002744:	10c7c83a 	sub	r3,r2,r3
 c002748:	d8c02615 	stw	r3,152(sp)
 c00274c:	003f9506 	br	c0025a4 <__alt_data_end+0xfc0025a4>
 c002750:	d9002a17 	ldw	r4,168(sp)
 c002754:	d8c03217 	ldw	r3,200(sp)
 c002758:	20800044 	addi	r2,r4,1
 c00275c:	1885883a 	add	r2,r3,r2
 c002760:	d8802b15 	stw	r2,172(sp)
 c002764:	103dbf0e 	bge	r2,zero,c001e64 <__alt_data_end+0xfc001e64>
 c002768:	0005883a 	mov	r2,zero
 c00276c:	003dbd06 	br	c001e64 <__alt_data_end+0xfc001e64>
 c002770:	2000201e 	bne	r4,zero,c0027f4 <___vfprintf_internal_r+0x222c>
 c002774:	9480004c 	andi	r18,r18,1
 c002778:	90001e1e 	bne	r18,zero,c0027f4 <___vfprintf_internal_r+0x222c>
 c00277c:	00800044 	movi	r2,1
 c002780:	d8802b15 	stw	r2,172(sp)
 c002784:	003db706 	br	c001e64 <__alt_data_end+0xfc001e64>
 c002788:	00800b44 	movi	r2,45
 c00278c:	05adc83a 	sub	r22,zero,r22
 c002790:	d8802305 	stb	r2,140(sp)
 c002794:	003f3f06 	br	c002494 <__alt_data_end+0xfc002494>
 c002798:	0005883a 	mov	r2,zero
 c00279c:	003f5206 	br	c0024e8 <__alt_data_end+0xfc0024e8>
 c0027a0:	90a4703a 	and	r18,r18,r2
 c0027a4:	903f4e26 	beq	r18,zero,c0024e0 <__alt_data_end+0xfc0024e0>
 c0027a8:	003f4a06 	br	c0024d4 <__alt_data_end+0xfc0024d4>
 c0027ac:	00800084 	movi	r2,2
 c0027b0:	10c5c83a 	sub	r2,r2,r3
 c0027b4:	003f8406 	br	c0025c8 <__alt_data_end+0xfc0025c8>
 c0027b8:	d9402e17 	ldw	r5,184(sp)
 c0027bc:	d9002e17 	ldw	r4,184(sp)
 c0027c0:	ac400043 	ldbu	r17,1(r21)
 c0027c4:	29400017 	ldw	r5,0(r5)
 c0027c8:	20800104 	addi	r2,r4,4
 c0027cc:	d8802e15 	stw	r2,184(sp)
 c0027d0:	d9402a15 	stw	r5,168(sp)
 c0027d4:	182b883a 	mov	r21,r3
 c0027d8:	283e7b0e 	bge	r5,zero,c0021c8 <__alt_data_end+0xfc0021c8>
 c0027dc:	8c403fcc 	andi	r17,r17,255
 c0027e0:	017fffc4 	movi	r5,-1
 c0027e4:	8c40201c 	xori	r17,r17,128
 c0027e8:	d9402a15 	stw	r5,168(sp)
 c0027ec:	8c7fe004 	addi	r17,r17,-128
 c0027f0:	0037d706 	br	c000750 <__alt_data_end+0xfc000750>
 c0027f4:	d8c02a17 	ldw	r3,168(sp)
 c0027f8:	18c00084 	addi	r3,r3,2
 c0027fc:	d8c02b15 	stw	r3,172(sp)
 c002800:	1805883a 	mov	r2,r3
 c002804:	183d970e 	bge	r3,zero,c001e64 <__alt_data_end+0xfc001e64>
 c002808:	003fd706 	br	c002768 <__alt_data_end+0xfc002768>
 c00280c:	0005883a 	mov	r2,zero
 c002810:	003f8f06 	br	c002650 <__alt_data_end+0xfc002650>
 c002814:	9080004c 	andi	r2,r18,1
 c002818:	103f821e 	bne	r2,zero,c002624 <__alt_data_end+0xfc002624>
 c00281c:	d8802117 	ldw	r2,132(sp)
 c002820:	1405c83a 	sub	r2,r2,r16
 c002824:	d8803315 	stw	r2,204(sp)
 c002828:	b47ef426 	beq	r22,r17,c0023fc <__alt_data_end+0xfc0023fc>
 c00282c:	dd802617 	ldw	r22,152(sp)
 c002830:	003f1206 	br	c00247c <__alt_data_end+0xfc00247c>
 c002834:	d8c02b03 	ldbu	r3,172(sp)
 c002838:	d8c02785 	stb	r3,158(sp)
 c00283c:	0038df06 	br	c000bbc <__alt_data_end+0xfc000bbc>
 c002840:	d8c02b03 	ldbu	r3,172(sp)
 c002844:	d8c02785 	stb	r3,158(sp)
 c002848:	0038aa06 	br	c000af4 <__alt_data_end+0xfc000af4>
 c00284c:	d8c02b03 	ldbu	r3,172(sp)
 c002850:	d8c02785 	stb	r3,158(sp)
 c002854:	003a4306 	br	c001164 <__alt_data_end+0xfc001164>
 c002858:	d8c02b03 	ldbu	r3,172(sp)
 c00285c:	d8c02785 	stb	r3,158(sp)
 c002860:	003af506 	br	c001438 <__alt_data_end+0xfc001438>
 c002864:	0005883a 	mov	r2,zero
 c002868:	003d7b06 	br	c001e58 <__alt_data_end+0xfc001e58>
 c00286c:	d8802344 	addi	r2,sp,141
 c002870:	003f1006 	br	c0024b4 <__alt_data_end+0xfc0024b4>
 c002874:	d8c02b03 	ldbu	r3,172(sp)
 c002878:	d8c02785 	stb	r3,158(sp)
 c00287c:	0038fd06 	br	c000c74 <__alt_data_end+0xfc000c74>
 c002880:	d8c02b03 	ldbu	r3,172(sp)
 c002884:	d8c02785 	stb	r3,158(sp)
 c002888:	003a9706 	br	c0012e8 <__alt_data_end+0xfc0012e8>
 c00288c:	d8c02b03 	ldbu	r3,172(sp)
 c002890:	d8c02785 	stb	r3,158(sp)
 c002894:	003a1806 	br	c0010f8 <__alt_data_end+0xfc0010f8>
 c002898:	d8c02b03 	ldbu	r3,172(sp)
 c00289c:	d8c02785 	stb	r3,158(sp)
 c0028a0:	003abe06 	br	c00139c <__alt_data_end+0xfc00139c>

0c0028a4 <__vfprintf_internal>:
 c0028a4:	00830074 	movhi	r2,3073
 c0028a8:	10865604 	addi	r2,r2,6488
 c0028ac:	300f883a 	mov	r7,r6
 c0028b0:	280d883a 	mov	r6,r5
 c0028b4:	200b883a 	mov	r5,r4
 c0028b8:	11000017 	ldw	r4,0(r2)
 c0028bc:	c0005c81 	jmpi	c0005c8 <___vfprintf_internal_r>

0c0028c0 <__sbprintf>:
 c0028c0:	2880030b 	ldhu	r2,12(r5)
 c0028c4:	2ac01917 	ldw	r11,100(r5)
 c0028c8:	2a80038b 	ldhu	r10,14(r5)
 c0028cc:	2a400717 	ldw	r9,28(r5)
 c0028d0:	2a000917 	ldw	r8,36(r5)
 c0028d4:	defee204 	addi	sp,sp,-1144
 c0028d8:	00c10004 	movi	r3,1024
 c0028dc:	dc011a15 	stw	r16,1128(sp)
 c0028e0:	10bfff4c 	andi	r2,r2,65533
 c0028e4:	2821883a 	mov	r16,r5
 c0028e8:	d8cb883a 	add	r5,sp,r3
 c0028ec:	dc811c15 	stw	r18,1136(sp)
 c0028f0:	dc411b15 	stw	r17,1132(sp)
 c0028f4:	dfc11d15 	stw	ra,1140(sp)
 c0028f8:	2025883a 	mov	r18,r4
 c0028fc:	d881030d 	sth	r2,1036(sp)
 c002900:	dac11915 	stw	r11,1124(sp)
 c002904:	da81038d 	sth	r10,1038(sp)
 c002908:	da410715 	stw	r9,1052(sp)
 c00290c:	da010915 	stw	r8,1060(sp)
 c002910:	dec10015 	stw	sp,1024(sp)
 c002914:	dec10415 	stw	sp,1040(sp)
 c002918:	d8c10215 	stw	r3,1032(sp)
 c00291c:	d8c10515 	stw	r3,1044(sp)
 c002920:	d8010615 	stw	zero,1048(sp)
 c002924:	c0005c80 	call	c0005c8 <___vfprintf_internal_r>
 c002928:	1023883a 	mov	r17,r2
 c00292c:	10000416 	blt	r2,zero,c002940 <__sbprintf+0x80>
 c002930:	d9410004 	addi	r5,sp,1024
 c002934:	9009883a 	mov	r4,r18
 c002938:	c00459c0 	call	c00459c <_fflush_r>
 c00293c:	10000d1e 	bne	r2,zero,c002974 <__sbprintf+0xb4>
 c002940:	d881030b 	ldhu	r2,1036(sp)
 c002944:	1080100c 	andi	r2,r2,64
 c002948:	10000326 	beq	r2,zero,c002958 <__sbprintf+0x98>
 c00294c:	8080030b 	ldhu	r2,12(r16)
 c002950:	10801014 	ori	r2,r2,64
 c002954:	8080030d 	sth	r2,12(r16)
 c002958:	8805883a 	mov	r2,r17
 c00295c:	dfc11d17 	ldw	ra,1140(sp)
 c002960:	dc811c17 	ldw	r18,1136(sp)
 c002964:	dc411b17 	ldw	r17,1132(sp)
 c002968:	dc011a17 	ldw	r16,1128(sp)
 c00296c:	dec11e04 	addi	sp,sp,1144
 c002970:	f800283a 	ret
 c002974:	047fffc4 	movi	r17,-1
 c002978:	003ff106 	br	c002940 <__alt_data_end+0xfc002940>

0c00297c <__swsetup_r>:
 c00297c:	00830074 	movhi	r2,3073
 c002980:	defffd04 	addi	sp,sp,-12
 c002984:	10865604 	addi	r2,r2,6488
 c002988:	dc400115 	stw	r17,4(sp)
 c00298c:	2023883a 	mov	r17,r4
 c002990:	11000017 	ldw	r4,0(r2)
 c002994:	dc000015 	stw	r16,0(sp)
 c002998:	dfc00215 	stw	ra,8(sp)
 c00299c:	2821883a 	mov	r16,r5
 c0029a0:	20000226 	beq	r4,zero,c0029ac <__swsetup_r+0x30>
 c0029a4:	20800e17 	ldw	r2,56(r4)
 c0029a8:	10003126 	beq	r2,zero,c002a70 <__swsetup_r+0xf4>
 c0029ac:	8080030b 	ldhu	r2,12(r16)
 c0029b0:	10c0020c 	andi	r3,r2,8
 c0029b4:	1009883a 	mov	r4,r2
 c0029b8:	18000f26 	beq	r3,zero,c0029f8 <__swsetup_r+0x7c>
 c0029bc:	80c00417 	ldw	r3,16(r16)
 c0029c0:	18001526 	beq	r3,zero,c002a18 <__swsetup_r+0x9c>
 c0029c4:	1100004c 	andi	r4,r2,1
 c0029c8:	20001c1e 	bne	r4,zero,c002a3c <__swsetup_r+0xc0>
 c0029cc:	1080008c 	andi	r2,r2,2
 c0029d0:	1000291e 	bne	r2,zero,c002a78 <__swsetup_r+0xfc>
 c0029d4:	80800517 	ldw	r2,20(r16)
 c0029d8:	80800215 	stw	r2,8(r16)
 c0029dc:	18001c26 	beq	r3,zero,c002a50 <__swsetup_r+0xd4>
 c0029e0:	0005883a 	mov	r2,zero
 c0029e4:	dfc00217 	ldw	ra,8(sp)
 c0029e8:	dc400117 	ldw	r17,4(sp)
 c0029ec:	dc000017 	ldw	r16,0(sp)
 c0029f0:	dec00304 	addi	sp,sp,12
 c0029f4:	f800283a 	ret
 c0029f8:	2080040c 	andi	r2,r4,16
 c0029fc:	10002e26 	beq	r2,zero,c002ab8 <__swsetup_r+0x13c>
 c002a00:	2080010c 	andi	r2,r4,4
 c002a04:	10001e1e 	bne	r2,zero,c002a80 <__swsetup_r+0x104>
 c002a08:	80c00417 	ldw	r3,16(r16)
 c002a0c:	20800214 	ori	r2,r4,8
 c002a10:	8080030d 	sth	r2,12(r16)
 c002a14:	183feb1e 	bne	r3,zero,c0029c4 <__alt_data_end+0xfc0029c4>
 c002a18:	1100a00c 	andi	r4,r2,640
 c002a1c:	01408004 	movi	r5,512
 c002a20:	217fe826 	beq	r4,r5,c0029c4 <__alt_data_end+0xfc0029c4>
 c002a24:	800b883a 	mov	r5,r16
 c002a28:	8809883a 	mov	r4,r17
 c002a2c:	c0050700 	call	c005070 <__smakebuf_r>
 c002a30:	8080030b 	ldhu	r2,12(r16)
 c002a34:	80c00417 	ldw	r3,16(r16)
 c002a38:	003fe206 	br	c0029c4 <__alt_data_end+0xfc0029c4>
 c002a3c:	80800517 	ldw	r2,20(r16)
 c002a40:	80000215 	stw	zero,8(r16)
 c002a44:	0085c83a 	sub	r2,zero,r2
 c002a48:	80800615 	stw	r2,24(r16)
 c002a4c:	183fe41e 	bne	r3,zero,c0029e0 <__alt_data_end+0xfc0029e0>
 c002a50:	80c0030b 	ldhu	r3,12(r16)
 c002a54:	0005883a 	mov	r2,zero
 c002a58:	1900200c 	andi	r4,r3,128
 c002a5c:	203fe126 	beq	r4,zero,c0029e4 <__alt_data_end+0xfc0029e4>
 c002a60:	18c01014 	ori	r3,r3,64
 c002a64:	80c0030d 	sth	r3,12(r16)
 c002a68:	00bfffc4 	movi	r2,-1
 c002a6c:	003fdd06 	br	c0029e4 <__alt_data_end+0xfc0029e4>
 c002a70:	c0049880 	call	c004988 <__sinit>
 c002a74:	003fcd06 	br	c0029ac <__alt_data_end+0xfc0029ac>
 c002a78:	0005883a 	mov	r2,zero
 c002a7c:	003fd606 	br	c0029d8 <__alt_data_end+0xfc0029d8>
 c002a80:	81400c17 	ldw	r5,48(r16)
 c002a84:	28000626 	beq	r5,zero,c002aa0 <__swsetup_r+0x124>
 c002a88:	80801004 	addi	r2,r16,64
 c002a8c:	28800326 	beq	r5,r2,c002a9c <__swsetup_r+0x120>
 c002a90:	8809883a 	mov	r4,r17
 c002a94:	c004afc0 	call	c004afc <_free_r>
 c002a98:	8100030b 	ldhu	r4,12(r16)
 c002a9c:	80000c15 	stw	zero,48(r16)
 c002aa0:	80c00417 	ldw	r3,16(r16)
 c002aa4:	00bff6c4 	movi	r2,-37
 c002aa8:	1108703a 	and	r4,r2,r4
 c002aac:	80000115 	stw	zero,4(r16)
 c002ab0:	80c00015 	stw	r3,0(r16)
 c002ab4:	003fd506 	br	c002a0c <__alt_data_end+0xfc002a0c>
 c002ab8:	00800244 	movi	r2,9
 c002abc:	88800015 	stw	r2,0(r17)
 c002ac0:	20801014 	ori	r2,r4,64
 c002ac4:	8080030d 	sth	r2,12(r16)
 c002ac8:	00bfffc4 	movi	r2,-1
 c002acc:	003fc506 	br	c0029e4 <__alt_data_end+0xfc0029e4>

0c002ad0 <quorem>:
 c002ad0:	defff204 	addi	sp,sp,-56
 c002ad4:	ddc00b15 	stw	r23,44(sp)
 c002ad8:	20800417 	ldw	r2,16(r4)
 c002adc:	2dc00417 	ldw	r23,16(r5)
 c002ae0:	dfc00d15 	stw	ra,52(sp)
 c002ae4:	df000c15 	stw	fp,48(sp)
 c002ae8:	dd800a15 	stw	r22,40(sp)
 c002aec:	dd400915 	stw	r21,36(sp)
 c002af0:	dd000815 	stw	r20,32(sp)
 c002af4:	dcc00715 	stw	r19,28(sp)
 c002af8:	dc800615 	stw	r18,24(sp)
 c002afc:	dc400515 	stw	r17,20(sp)
 c002b00:	dc000415 	stw	r16,16(sp)
 c002b04:	15c07a16 	blt	r2,r23,c002cf0 <quorem+0x220>
 c002b08:	bdffffc4 	addi	r23,r23,-1
 c002b0c:	bde9883a 	add	r20,r23,r23
 c002b10:	28c00504 	addi	r3,r5,20
 c002b14:	a529883a 	add	r20,r20,r20
 c002b18:	1d39883a 	add	fp,r3,r20
 c002b1c:	24c00504 	addi	r19,r4,20
 c002b20:	d9400215 	stw	r5,8(sp)
 c002b24:	9d29883a 	add	r20,r19,r20
 c002b28:	e1400017 	ldw	r5,0(fp)
 c002b2c:	d9000015 	stw	r4,0(sp)
 c002b30:	a1000017 	ldw	r4,0(r20)
 c002b34:	29400044 	addi	r5,r5,1
 c002b38:	d8c00115 	stw	r3,4(sp)
 c002b3c:	dd000315 	stw	r20,12(sp)
 c002b40:	c00aa400 	call	c00aa40 <__udivsi3>
 c002b44:	1025883a 	mov	r18,r2
 c002b48:	10003026 	beq	r2,zero,c002c0c <quorem+0x13c>
 c002b4c:	dc400117 	ldw	r17,4(sp)
 c002b50:	9829883a 	mov	r20,r19
 c002b54:	002d883a 	mov	r22,zero
 c002b58:	0021883a 	mov	r16,zero
 c002b5c:	8d400017 	ldw	r21,0(r17)
 c002b60:	900b883a 	mov	r5,r18
 c002b64:	8c400104 	addi	r17,r17,4
 c002b68:	a93fffcc 	andi	r4,r21,65535
 c002b6c:	c0005340 	call	c000534 <__mulsi3>
 c002b70:	a808d43a 	srli	r4,r21,16
 c002b74:	900b883a 	mov	r5,r18
 c002b78:	15ad883a 	add	r22,r2,r22
 c002b7c:	c0005340 	call	c000534 <__mulsi3>
 c002b80:	a1000017 	ldw	r4,0(r20)
 c002b84:	b00cd43a 	srli	r6,r22,16
 c002b88:	b0ffffcc 	andi	r3,r22,65535
 c002b8c:	217fffcc 	andi	r5,r4,65535
 c002b90:	2c21883a 	add	r16,r5,r16
 c002b94:	80c7c83a 	sub	r3,r16,r3
 c002b98:	2008d43a 	srli	r4,r4,16
 c002b9c:	1185883a 	add	r2,r2,r6
 c002ba0:	1821d43a 	srai	r16,r3,16
 c002ba4:	117fffcc 	andi	r5,r2,65535
 c002ba8:	2149c83a 	sub	r4,r4,r5
 c002bac:	2421883a 	add	r16,r4,r16
 c002bb0:	8008943a 	slli	r4,r16,16
 c002bb4:	18ffffcc 	andi	r3,r3,65535
 c002bb8:	102cd43a 	srli	r22,r2,16
 c002bbc:	20c8b03a 	or	r4,r4,r3
 c002bc0:	a1000015 	stw	r4,0(r20)
 c002bc4:	8021d43a 	srai	r16,r16,16
 c002bc8:	a5000104 	addi	r20,r20,4
 c002bcc:	e47fe32e 	bgeu	fp,r17,c002b5c <__alt_data_end+0xfc002b5c>
 c002bd0:	d8c00317 	ldw	r3,12(sp)
 c002bd4:	18800017 	ldw	r2,0(r3)
 c002bd8:	10000c1e 	bne	r2,zero,c002c0c <quorem+0x13c>
 c002bdc:	18bfff04 	addi	r2,r3,-4
 c002be0:	9880082e 	bgeu	r19,r2,c002c04 <quorem+0x134>
 c002be4:	18ffff17 	ldw	r3,-4(r3)
 c002be8:	18000326 	beq	r3,zero,c002bf8 <quorem+0x128>
 c002bec:	00000506 	br	c002c04 <quorem+0x134>
 c002bf0:	10c00017 	ldw	r3,0(r2)
 c002bf4:	1800031e 	bne	r3,zero,c002c04 <quorem+0x134>
 c002bf8:	10bfff04 	addi	r2,r2,-4
 c002bfc:	bdffffc4 	addi	r23,r23,-1
 c002c00:	98bffb36 	bltu	r19,r2,c002bf0 <__alt_data_end+0xfc002bf0>
 c002c04:	d8c00017 	ldw	r3,0(sp)
 c002c08:	1dc00415 	stw	r23,16(r3)
 c002c0c:	d9400217 	ldw	r5,8(sp)
 c002c10:	d9000017 	ldw	r4,0(sp)
 c002c14:	c0067100 	call	c006710 <__mcmp>
 c002c18:	10002816 	blt	r2,zero,c002cbc <quorem+0x1ec>
 c002c1c:	dc400117 	ldw	r17,4(sp)
 c002c20:	94800044 	addi	r18,r18,1
 c002c24:	980d883a 	mov	r6,r19
 c002c28:	0007883a 	mov	r3,zero
 c002c2c:	31000017 	ldw	r4,0(r6)
 c002c30:	89400017 	ldw	r5,0(r17)
 c002c34:	31800104 	addi	r6,r6,4
 c002c38:	20bfffcc 	andi	r2,r4,65535
 c002c3c:	10c7883a 	add	r3,r2,r3
 c002c40:	28bfffcc 	andi	r2,r5,65535
 c002c44:	1885c83a 	sub	r2,r3,r2
 c002c48:	280ad43a 	srli	r5,r5,16
 c002c4c:	2008d43a 	srli	r4,r4,16
 c002c50:	1007d43a 	srai	r3,r2,16
 c002c54:	10bfffcc 	andi	r2,r2,65535
 c002c58:	2149c83a 	sub	r4,r4,r5
 c002c5c:	20c9883a 	add	r4,r4,r3
 c002c60:	200a943a 	slli	r5,r4,16
 c002c64:	8c400104 	addi	r17,r17,4
 c002c68:	2007d43a 	srai	r3,r4,16
 c002c6c:	2884b03a 	or	r2,r5,r2
 c002c70:	30bfff15 	stw	r2,-4(r6)
 c002c74:	e47fed2e 	bgeu	fp,r17,c002c2c <__alt_data_end+0xfc002c2c>
 c002c78:	bdc5883a 	add	r2,r23,r23
 c002c7c:	1085883a 	add	r2,r2,r2
 c002c80:	9887883a 	add	r3,r19,r2
 c002c84:	18800017 	ldw	r2,0(r3)
 c002c88:	10000c1e 	bne	r2,zero,c002cbc <quorem+0x1ec>
 c002c8c:	18bfff04 	addi	r2,r3,-4
 c002c90:	9880082e 	bgeu	r19,r2,c002cb4 <quorem+0x1e4>
 c002c94:	18ffff17 	ldw	r3,-4(r3)
 c002c98:	18000326 	beq	r3,zero,c002ca8 <quorem+0x1d8>
 c002c9c:	00000506 	br	c002cb4 <quorem+0x1e4>
 c002ca0:	10c00017 	ldw	r3,0(r2)
 c002ca4:	1800031e 	bne	r3,zero,c002cb4 <quorem+0x1e4>
 c002ca8:	10bfff04 	addi	r2,r2,-4
 c002cac:	bdffffc4 	addi	r23,r23,-1
 c002cb0:	98bffb36 	bltu	r19,r2,c002ca0 <__alt_data_end+0xfc002ca0>
 c002cb4:	d8c00017 	ldw	r3,0(sp)
 c002cb8:	1dc00415 	stw	r23,16(r3)
 c002cbc:	9005883a 	mov	r2,r18
 c002cc0:	dfc00d17 	ldw	ra,52(sp)
 c002cc4:	df000c17 	ldw	fp,48(sp)
 c002cc8:	ddc00b17 	ldw	r23,44(sp)
 c002ccc:	dd800a17 	ldw	r22,40(sp)
 c002cd0:	dd400917 	ldw	r21,36(sp)
 c002cd4:	dd000817 	ldw	r20,32(sp)
 c002cd8:	dcc00717 	ldw	r19,28(sp)
 c002cdc:	dc800617 	ldw	r18,24(sp)
 c002ce0:	dc400517 	ldw	r17,20(sp)
 c002ce4:	dc000417 	ldw	r16,16(sp)
 c002ce8:	dec00e04 	addi	sp,sp,56
 c002cec:	f800283a 	ret
 c002cf0:	0005883a 	mov	r2,zero
 c002cf4:	003ff206 	br	c002cc0 <__alt_data_end+0xfc002cc0>

0c002cf8 <_dtoa_r>:
 c002cf8:	20801017 	ldw	r2,64(r4)
 c002cfc:	deffde04 	addi	sp,sp,-136
 c002d00:	df002015 	stw	fp,128(sp)
 c002d04:	dcc01b15 	stw	r19,108(sp)
 c002d08:	dc801a15 	stw	r18,104(sp)
 c002d0c:	dc401915 	stw	r17,100(sp)
 c002d10:	dc001815 	stw	r16,96(sp)
 c002d14:	dfc02115 	stw	ra,132(sp)
 c002d18:	ddc01f15 	stw	r23,124(sp)
 c002d1c:	dd801e15 	stw	r22,120(sp)
 c002d20:	dd401d15 	stw	r21,116(sp)
 c002d24:	dd001c15 	stw	r20,112(sp)
 c002d28:	d9c00315 	stw	r7,12(sp)
 c002d2c:	2039883a 	mov	fp,r4
 c002d30:	3023883a 	mov	r17,r6
 c002d34:	2825883a 	mov	r18,r5
 c002d38:	dc002417 	ldw	r16,144(sp)
 c002d3c:	3027883a 	mov	r19,r6
 c002d40:	10000826 	beq	r2,zero,c002d64 <_dtoa_r+0x6c>
 c002d44:	21801117 	ldw	r6,68(r4)
 c002d48:	00c00044 	movi	r3,1
 c002d4c:	100b883a 	mov	r5,r2
 c002d50:	1986983a 	sll	r3,r3,r6
 c002d54:	11800115 	stw	r6,4(r2)
 c002d58:	10c00215 	stw	r3,8(r2)
 c002d5c:	c005e340 	call	c005e34 <_Bfree>
 c002d60:	e0001015 	stw	zero,64(fp)
 c002d64:	88002e16 	blt	r17,zero,c002e20 <_dtoa_r+0x128>
 c002d68:	80000015 	stw	zero,0(r16)
 c002d6c:	889ffc2c 	andhi	r2,r17,32752
 c002d70:	00dffc34 	movhi	r3,32752
 c002d74:	10c01c26 	beq	r2,r3,c002de8 <_dtoa_r+0xf0>
 c002d78:	000d883a 	mov	r6,zero
 c002d7c:	000f883a 	mov	r7,zero
 c002d80:	9009883a 	mov	r4,r18
 c002d84:	980b883a 	mov	r5,r19
 c002d88:	c00bd780 	call	c00bd78 <__eqdf2>
 c002d8c:	10002b1e 	bne	r2,zero,c002e3c <_dtoa_r+0x144>
 c002d90:	d9c02317 	ldw	r7,140(sp)
 c002d94:	00800044 	movi	r2,1
 c002d98:	38800015 	stw	r2,0(r7)
 c002d9c:	d8802517 	ldw	r2,148(sp)
 c002da0:	10019e26 	beq	r2,zero,c00341c <_dtoa_r+0x724>
 c002da4:	d8c02517 	ldw	r3,148(sp)
 c002da8:	00830074 	movhi	r2,3073
 c002dac:	10bef944 	addi	r2,r2,-1051
 c002db0:	18800015 	stw	r2,0(r3)
 c002db4:	10bfffc4 	addi	r2,r2,-1
 c002db8:	dfc02117 	ldw	ra,132(sp)
 c002dbc:	df002017 	ldw	fp,128(sp)
 c002dc0:	ddc01f17 	ldw	r23,124(sp)
 c002dc4:	dd801e17 	ldw	r22,120(sp)
 c002dc8:	dd401d17 	ldw	r21,116(sp)
 c002dcc:	dd001c17 	ldw	r20,112(sp)
 c002dd0:	dcc01b17 	ldw	r19,108(sp)
 c002dd4:	dc801a17 	ldw	r18,104(sp)
 c002dd8:	dc401917 	ldw	r17,100(sp)
 c002ddc:	dc001817 	ldw	r16,96(sp)
 c002de0:	dec02204 	addi	sp,sp,136
 c002de4:	f800283a 	ret
 c002de8:	d8c02317 	ldw	r3,140(sp)
 c002dec:	0089c3c4 	movi	r2,9999
 c002df0:	18800015 	stw	r2,0(r3)
 c002df4:	90017726 	beq	r18,zero,c0033d4 <_dtoa_r+0x6dc>
 c002df8:	00830074 	movhi	r2,3073
 c002dfc:	10bf0504 	addi	r2,r2,-1004
 c002e00:	d9002517 	ldw	r4,148(sp)
 c002e04:	203fec26 	beq	r4,zero,c002db8 <__alt_data_end+0xfc002db8>
 c002e08:	10c000c7 	ldb	r3,3(r2)
 c002e0c:	1801781e 	bne	r3,zero,c0033f0 <_dtoa_r+0x6f8>
 c002e10:	10c000c4 	addi	r3,r2,3
 c002e14:	d9802517 	ldw	r6,148(sp)
 c002e18:	30c00015 	stw	r3,0(r6)
 c002e1c:	003fe606 	br	c002db8 <__alt_data_end+0xfc002db8>
 c002e20:	04e00034 	movhi	r19,32768
 c002e24:	9cffffc4 	addi	r19,r19,-1
 c002e28:	00800044 	movi	r2,1
 c002e2c:	8ce6703a 	and	r19,r17,r19
 c002e30:	80800015 	stw	r2,0(r16)
 c002e34:	9823883a 	mov	r17,r19
 c002e38:	003fcc06 	br	c002d6c <__alt_data_end+0xfc002d6c>
 c002e3c:	d8800204 	addi	r2,sp,8
 c002e40:	d8800015 	stw	r2,0(sp)
 c002e44:	d9c00104 	addi	r7,sp,4
 c002e48:	900b883a 	mov	r5,r18
 c002e4c:	980d883a 	mov	r6,r19
 c002e50:	e009883a 	mov	r4,fp
 c002e54:	8820d53a 	srli	r16,r17,20
 c002e58:	c006adc0 	call	c006adc <__d2b>
 c002e5c:	d8800915 	stw	r2,36(sp)
 c002e60:	8001651e 	bne	r16,zero,c0033f8 <_dtoa_r+0x700>
 c002e64:	dd800217 	ldw	r22,8(sp)
 c002e68:	dc000117 	ldw	r16,4(sp)
 c002e6c:	00800804 	movi	r2,32
 c002e70:	b421883a 	add	r16,r22,r16
 c002e74:	80c10c84 	addi	r3,r16,1074
 c002e78:	10c2d10e 	bge	r2,r3,c0039c0 <_dtoa_r+0xcc8>
 c002e7c:	00801004 	movi	r2,64
 c002e80:	81010484 	addi	r4,r16,1042
 c002e84:	10c7c83a 	sub	r3,r2,r3
 c002e88:	9108d83a 	srl	r4,r18,r4
 c002e8c:	88e2983a 	sll	r17,r17,r3
 c002e90:	2448b03a 	or	r4,r4,r17
 c002e94:	c00d2940 	call	c00d294 <__floatunsidf>
 c002e98:	017f8434 	movhi	r5,65040
 c002e9c:	01800044 	movi	r6,1
 c002ea0:	1009883a 	mov	r4,r2
 c002ea4:	194b883a 	add	r5,r3,r5
 c002ea8:	843fffc4 	addi	r16,r16,-1
 c002eac:	d9801115 	stw	r6,68(sp)
 c002eb0:	000d883a 	mov	r6,zero
 c002eb4:	01cffe34 	movhi	r7,16376
 c002eb8:	c00c83c0 	call	c00c83c <__subdf3>
 c002ebc:	0198dbf4 	movhi	r6,25455
 c002ec0:	01cff4f4 	movhi	r7,16339
 c002ec4:	3190d844 	addi	r6,r6,17249
 c002ec8:	39e1e9c4 	addi	r7,r7,-30809
 c002ecc:	1009883a 	mov	r4,r2
 c002ed0:	180b883a 	mov	r5,r3
 c002ed4:	c00bfd00 	call	c00bfd0 <__muldf3>
 c002ed8:	01a2d874 	movhi	r6,35681
 c002edc:	01cff1f4 	movhi	r7,16327
 c002ee0:	31b22cc4 	addi	r6,r6,-14157
 c002ee4:	39e28a04 	addi	r7,r7,-30168
 c002ee8:	180b883a 	mov	r5,r3
 c002eec:	1009883a 	mov	r4,r2
 c002ef0:	c00aafc0 	call	c00aafc <__adddf3>
 c002ef4:	8009883a 	mov	r4,r16
 c002ef8:	1029883a 	mov	r20,r2
 c002efc:	1823883a 	mov	r17,r3
 c002f00:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c002f04:	019427f4 	movhi	r6,20639
 c002f08:	01cff4f4 	movhi	r7,16339
 c002f0c:	319e7ec4 	addi	r6,r6,31227
 c002f10:	39d104c4 	addi	r7,r7,17427
 c002f14:	1009883a 	mov	r4,r2
 c002f18:	180b883a 	mov	r5,r3
 c002f1c:	c00bfd00 	call	c00bfd0 <__muldf3>
 c002f20:	100d883a 	mov	r6,r2
 c002f24:	180f883a 	mov	r7,r3
 c002f28:	a009883a 	mov	r4,r20
 c002f2c:	880b883a 	mov	r5,r17
 c002f30:	c00aafc0 	call	c00aafc <__adddf3>
 c002f34:	1009883a 	mov	r4,r2
 c002f38:	180b883a 	mov	r5,r3
 c002f3c:	1029883a 	mov	r20,r2
 c002f40:	1823883a 	mov	r17,r3
 c002f44:	c00d1380 	call	c00d138 <__fixdfsi>
 c002f48:	000d883a 	mov	r6,zero
 c002f4c:	000f883a 	mov	r7,zero
 c002f50:	a009883a 	mov	r4,r20
 c002f54:	880b883a 	mov	r5,r17
 c002f58:	d8800515 	stw	r2,20(sp)
 c002f5c:	c00bedc0 	call	c00bedc <__ledf2>
 c002f60:	10028716 	blt	r2,zero,c003980 <_dtoa_r+0xc88>
 c002f64:	d8c00517 	ldw	r3,20(sp)
 c002f68:	00800584 	movi	r2,22
 c002f6c:	10c27536 	bltu	r2,r3,c003944 <_dtoa_r+0xc4c>
 c002f70:	180490fa 	slli	r2,r3,3
 c002f74:	00c30074 	movhi	r3,3073
 c002f78:	18ff2104 	addi	r3,r3,-892
 c002f7c:	1885883a 	add	r2,r3,r2
 c002f80:	11000017 	ldw	r4,0(r2)
 c002f84:	11400117 	ldw	r5,4(r2)
 c002f88:	900d883a 	mov	r6,r18
 c002f8c:	980f883a 	mov	r7,r19
 c002f90:	c00be000 	call	c00be00 <__gedf2>
 c002f94:	00828d0e 	bge	zero,r2,c0039cc <_dtoa_r+0xcd4>
 c002f98:	d9000517 	ldw	r4,20(sp)
 c002f9c:	d8000e15 	stw	zero,56(sp)
 c002fa0:	213fffc4 	addi	r4,r4,-1
 c002fa4:	d9000515 	stw	r4,20(sp)
 c002fa8:	b42dc83a 	sub	r22,r22,r16
 c002fac:	b5bfffc4 	addi	r22,r22,-1
 c002fb0:	b0026f16 	blt	r22,zero,c003970 <_dtoa_r+0xc78>
 c002fb4:	d8000815 	stw	zero,32(sp)
 c002fb8:	d9c00517 	ldw	r7,20(sp)
 c002fbc:	38026416 	blt	r7,zero,c003950 <_dtoa_r+0xc58>
 c002fc0:	b1ed883a 	add	r22,r22,r7
 c002fc4:	d9c00d15 	stw	r7,52(sp)
 c002fc8:	d8000a15 	stw	zero,40(sp)
 c002fcc:	d9800317 	ldw	r6,12(sp)
 c002fd0:	00800244 	movi	r2,9
 c002fd4:	11811436 	bltu	r2,r6,c003428 <_dtoa_r+0x730>
 c002fd8:	00800144 	movi	r2,5
 c002fdc:	1184e10e 	bge	r2,r6,c004364 <_dtoa_r+0x166c>
 c002fe0:	31bfff04 	addi	r6,r6,-4
 c002fe4:	d9800315 	stw	r6,12(sp)
 c002fe8:	0023883a 	mov	r17,zero
 c002fec:	d9800317 	ldw	r6,12(sp)
 c002ff0:	008000c4 	movi	r2,3
 c002ff4:	30836726 	beq	r6,r2,c003d94 <_dtoa_r+0x109c>
 c002ff8:	1183410e 	bge	r2,r6,c003d00 <_dtoa_r+0x1008>
 c002ffc:	d9c00317 	ldw	r7,12(sp)
 c003000:	00800104 	movi	r2,4
 c003004:	38827c26 	beq	r7,r2,c0039f8 <_dtoa_r+0xd00>
 c003008:	00800144 	movi	r2,5
 c00300c:	3884c41e 	bne	r7,r2,c004320 <_dtoa_r+0x1628>
 c003010:	00800044 	movi	r2,1
 c003014:	d8800b15 	stw	r2,44(sp)
 c003018:	d8c00517 	ldw	r3,20(sp)
 c00301c:	d9002217 	ldw	r4,136(sp)
 c003020:	1907883a 	add	r3,r3,r4
 c003024:	19800044 	addi	r6,r3,1
 c003028:	d8c00c15 	stw	r3,48(sp)
 c00302c:	d9800615 	stw	r6,24(sp)
 c003030:	0183a40e 	bge	zero,r6,c003ec4 <_dtoa_r+0x11cc>
 c003034:	d9800617 	ldw	r6,24(sp)
 c003038:	3021883a 	mov	r16,r6
 c00303c:	e0001115 	stw	zero,68(fp)
 c003040:	008005c4 	movi	r2,23
 c003044:	1184c92e 	bgeu	r2,r6,c00436c <_dtoa_r+0x1674>
 c003048:	00c00044 	movi	r3,1
 c00304c:	00800104 	movi	r2,4
 c003050:	1085883a 	add	r2,r2,r2
 c003054:	11000504 	addi	r4,r2,20
 c003058:	180b883a 	mov	r5,r3
 c00305c:	18c00044 	addi	r3,r3,1
 c003060:	313ffb2e 	bgeu	r6,r4,c003050 <__alt_data_end+0xfc003050>
 c003064:	e1401115 	stw	r5,68(fp)
 c003068:	e009883a 	mov	r4,fp
 c00306c:	c005d8c0 	call	c005d8c <_Balloc>
 c003070:	d8800715 	stw	r2,28(sp)
 c003074:	e0801015 	stw	r2,64(fp)
 c003078:	00800384 	movi	r2,14
 c00307c:	1400f736 	bltu	r2,r16,c00345c <_dtoa_r+0x764>
 c003080:	8800f626 	beq	r17,zero,c00345c <_dtoa_r+0x764>
 c003084:	d9c00517 	ldw	r7,20(sp)
 c003088:	01c39a0e 	bge	zero,r7,c003ef4 <_dtoa_r+0x11fc>
 c00308c:	388003cc 	andi	r2,r7,15
 c003090:	100490fa 	slli	r2,r2,3
 c003094:	382bd13a 	srai	r21,r7,4
 c003098:	00c30074 	movhi	r3,3073
 c00309c:	18ff2104 	addi	r3,r3,-892
 c0030a0:	1885883a 	add	r2,r3,r2
 c0030a4:	a8c0040c 	andi	r3,r21,16
 c0030a8:	12400017 	ldw	r9,0(r2)
 c0030ac:	12000117 	ldw	r8,4(r2)
 c0030b0:	18037926 	beq	r3,zero,c003e98 <_dtoa_r+0x11a0>
 c0030b4:	00830074 	movhi	r2,3073
 c0030b8:	10bf1704 	addi	r2,r2,-932
 c0030bc:	11800817 	ldw	r6,32(r2)
 c0030c0:	11c00917 	ldw	r7,36(r2)
 c0030c4:	9009883a 	mov	r4,r18
 c0030c8:	980b883a 	mov	r5,r19
 c0030cc:	da001715 	stw	r8,92(sp)
 c0030d0:	da401615 	stw	r9,88(sp)
 c0030d4:	c00b3a80 	call	c00b3a8 <__divdf3>
 c0030d8:	da001717 	ldw	r8,92(sp)
 c0030dc:	da401617 	ldw	r9,88(sp)
 c0030e0:	ad4003cc 	andi	r21,r21,15
 c0030e4:	040000c4 	movi	r16,3
 c0030e8:	1023883a 	mov	r17,r2
 c0030ec:	1829883a 	mov	r20,r3
 c0030f0:	a8001126 	beq	r21,zero,c003138 <_dtoa_r+0x440>
 c0030f4:	05c30074 	movhi	r23,3073
 c0030f8:	bdff1704 	addi	r23,r23,-932
 c0030fc:	4805883a 	mov	r2,r9
 c003100:	4007883a 	mov	r3,r8
 c003104:	a980004c 	andi	r6,r21,1
 c003108:	1009883a 	mov	r4,r2
 c00310c:	a82bd07a 	srai	r21,r21,1
 c003110:	180b883a 	mov	r5,r3
 c003114:	30000426 	beq	r6,zero,c003128 <_dtoa_r+0x430>
 c003118:	b9800017 	ldw	r6,0(r23)
 c00311c:	b9c00117 	ldw	r7,4(r23)
 c003120:	84000044 	addi	r16,r16,1
 c003124:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003128:	bdc00204 	addi	r23,r23,8
 c00312c:	a83ff51e 	bne	r21,zero,c003104 <__alt_data_end+0xfc003104>
 c003130:	1013883a 	mov	r9,r2
 c003134:	1811883a 	mov	r8,r3
 c003138:	480d883a 	mov	r6,r9
 c00313c:	400f883a 	mov	r7,r8
 c003140:	8809883a 	mov	r4,r17
 c003144:	a00b883a 	mov	r5,r20
 c003148:	c00b3a80 	call	c00b3a8 <__divdf3>
 c00314c:	d8800f15 	stw	r2,60(sp)
 c003150:	d8c01015 	stw	r3,64(sp)
 c003154:	d8c00e17 	ldw	r3,56(sp)
 c003158:	18000626 	beq	r3,zero,c003174 <_dtoa_r+0x47c>
 c00315c:	d9000f17 	ldw	r4,60(sp)
 c003160:	d9401017 	ldw	r5,64(sp)
 c003164:	000d883a 	mov	r6,zero
 c003168:	01cffc34 	movhi	r7,16368
 c00316c:	c00bedc0 	call	c00bedc <__ledf2>
 c003170:	10040b16 	blt	r2,zero,c0041a0 <_dtoa_r+0x14a8>
 c003174:	8009883a 	mov	r4,r16
 c003178:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c00317c:	d9800f17 	ldw	r6,60(sp)
 c003180:	d9c01017 	ldw	r7,64(sp)
 c003184:	1009883a 	mov	r4,r2
 c003188:	180b883a 	mov	r5,r3
 c00318c:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003190:	000d883a 	mov	r6,zero
 c003194:	01d00734 	movhi	r7,16412
 c003198:	1009883a 	mov	r4,r2
 c00319c:	180b883a 	mov	r5,r3
 c0031a0:	c00aafc0 	call	c00aafc <__adddf3>
 c0031a4:	1021883a 	mov	r16,r2
 c0031a8:	d8800617 	ldw	r2,24(sp)
 c0031ac:	047f3034 	movhi	r17,64704
 c0031b0:	1c63883a 	add	r17,r3,r17
 c0031b4:	10031826 	beq	r2,zero,c003e18 <_dtoa_r+0x1120>
 c0031b8:	d8c00517 	ldw	r3,20(sp)
 c0031bc:	db000617 	ldw	r12,24(sp)
 c0031c0:	d8c01315 	stw	r3,76(sp)
 c0031c4:	d9000b17 	ldw	r4,44(sp)
 c0031c8:	20038f26 	beq	r4,zero,c004008 <_dtoa_r+0x1310>
 c0031cc:	60bfffc4 	addi	r2,r12,-1
 c0031d0:	100490fa 	slli	r2,r2,3
 c0031d4:	00c30074 	movhi	r3,3073
 c0031d8:	18ff2104 	addi	r3,r3,-892
 c0031dc:	1885883a 	add	r2,r3,r2
 c0031e0:	11800017 	ldw	r6,0(r2)
 c0031e4:	11c00117 	ldw	r7,4(r2)
 c0031e8:	d8800717 	ldw	r2,28(sp)
 c0031ec:	0009883a 	mov	r4,zero
 c0031f0:	014ff834 	movhi	r5,16352
 c0031f4:	db001615 	stw	r12,88(sp)
 c0031f8:	15c00044 	addi	r23,r2,1
 c0031fc:	c00b3a80 	call	c00b3a8 <__divdf3>
 c003200:	800d883a 	mov	r6,r16
 c003204:	880f883a 	mov	r7,r17
 c003208:	1009883a 	mov	r4,r2
 c00320c:	180b883a 	mov	r5,r3
 c003210:	c00c83c0 	call	c00c83c <__subdf3>
 c003214:	d9401017 	ldw	r5,64(sp)
 c003218:	d9000f17 	ldw	r4,60(sp)
 c00321c:	102b883a 	mov	r21,r2
 c003220:	d8c01215 	stw	r3,72(sp)
 c003224:	c00d1380 	call	c00d138 <__fixdfsi>
 c003228:	1009883a 	mov	r4,r2
 c00322c:	1029883a 	mov	r20,r2
 c003230:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c003234:	d9000f17 	ldw	r4,60(sp)
 c003238:	d9401017 	ldw	r5,64(sp)
 c00323c:	100d883a 	mov	r6,r2
 c003240:	180f883a 	mov	r7,r3
 c003244:	c00c83c0 	call	c00c83c <__subdf3>
 c003248:	1823883a 	mov	r17,r3
 c00324c:	d8c00717 	ldw	r3,28(sp)
 c003250:	d9401217 	ldw	r5,72(sp)
 c003254:	a2000c04 	addi	r8,r20,48
 c003258:	1021883a 	mov	r16,r2
 c00325c:	1a000005 	stb	r8,0(r3)
 c003260:	800d883a 	mov	r6,r16
 c003264:	880f883a 	mov	r7,r17
 c003268:	a809883a 	mov	r4,r21
 c00326c:	4029883a 	mov	r20,r8
 c003270:	c00be000 	call	c00be00 <__gedf2>
 c003274:	00841d16 	blt	zero,r2,c0042ec <_dtoa_r+0x15f4>
 c003278:	800d883a 	mov	r6,r16
 c00327c:	880f883a 	mov	r7,r17
 c003280:	0009883a 	mov	r4,zero
 c003284:	014ffc34 	movhi	r5,16368
 c003288:	c00c83c0 	call	c00c83c <__subdf3>
 c00328c:	d9401217 	ldw	r5,72(sp)
 c003290:	100d883a 	mov	r6,r2
 c003294:	180f883a 	mov	r7,r3
 c003298:	a809883a 	mov	r4,r21
 c00329c:	c00be000 	call	c00be00 <__gedf2>
 c0032a0:	db001617 	ldw	r12,88(sp)
 c0032a4:	00840e16 	blt	zero,r2,c0042e0 <_dtoa_r+0x15e8>
 c0032a8:	00800044 	movi	r2,1
 c0032ac:	13006b0e 	bge	r2,r12,c00345c <_dtoa_r+0x764>
 c0032b0:	d9000717 	ldw	r4,28(sp)
 c0032b4:	dd800f15 	stw	r22,60(sp)
 c0032b8:	dcc01015 	stw	r19,64(sp)
 c0032bc:	2319883a 	add	r12,r4,r12
 c0032c0:	dcc01217 	ldw	r19,72(sp)
 c0032c4:	602d883a 	mov	r22,r12
 c0032c8:	dc801215 	stw	r18,72(sp)
 c0032cc:	b825883a 	mov	r18,r23
 c0032d0:	00000906 	br	c0032f8 <_dtoa_r+0x600>
 c0032d4:	c00c83c0 	call	c00c83c <__subdf3>
 c0032d8:	a80d883a 	mov	r6,r21
 c0032dc:	980f883a 	mov	r7,r19
 c0032e0:	1009883a 	mov	r4,r2
 c0032e4:	180b883a 	mov	r5,r3
 c0032e8:	c00bedc0 	call	c00bedc <__ledf2>
 c0032ec:	1003e816 	blt	r2,zero,c004290 <_dtoa_r+0x1598>
 c0032f0:	b825883a 	mov	r18,r23
 c0032f4:	bd83e926 	beq	r23,r22,c00429c <_dtoa_r+0x15a4>
 c0032f8:	a809883a 	mov	r4,r21
 c0032fc:	980b883a 	mov	r5,r19
 c003300:	000d883a 	mov	r6,zero
 c003304:	01d00934 	movhi	r7,16420
 c003308:	c00bfd00 	call	c00bfd0 <__muldf3>
 c00330c:	000d883a 	mov	r6,zero
 c003310:	01d00934 	movhi	r7,16420
 c003314:	8009883a 	mov	r4,r16
 c003318:	880b883a 	mov	r5,r17
 c00331c:	102b883a 	mov	r21,r2
 c003320:	1827883a 	mov	r19,r3
 c003324:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003328:	180b883a 	mov	r5,r3
 c00332c:	1009883a 	mov	r4,r2
 c003330:	1821883a 	mov	r16,r3
 c003334:	1023883a 	mov	r17,r2
 c003338:	c00d1380 	call	c00d138 <__fixdfsi>
 c00333c:	1009883a 	mov	r4,r2
 c003340:	1029883a 	mov	r20,r2
 c003344:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c003348:	8809883a 	mov	r4,r17
 c00334c:	800b883a 	mov	r5,r16
 c003350:	100d883a 	mov	r6,r2
 c003354:	180f883a 	mov	r7,r3
 c003358:	c00c83c0 	call	c00c83c <__subdf3>
 c00335c:	a5000c04 	addi	r20,r20,48
 c003360:	a80d883a 	mov	r6,r21
 c003364:	980f883a 	mov	r7,r19
 c003368:	1009883a 	mov	r4,r2
 c00336c:	180b883a 	mov	r5,r3
 c003370:	95000005 	stb	r20,0(r18)
 c003374:	1021883a 	mov	r16,r2
 c003378:	1823883a 	mov	r17,r3
 c00337c:	c00bedc0 	call	c00bedc <__ledf2>
 c003380:	bdc00044 	addi	r23,r23,1
 c003384:	800d883a 	mov	r6,r16
 c003388:	880f883a 	mov	r7,r17
 c00338c:	0009883a 	mov	r4,zero
 c003390:	014ffc34 	movhi	r5,16368
 c003394:	103fcf0e 	bge	r2,zero,c0032d4 <__alt_data_end+0xfc0032d4>
 c003398:	d8c01317 	ldw	r3,76(sp)
 c00339c:	d8c00515 	stw	r3,20(sp)
 c0033a0:	d9400917 	ldw	r5,36(sp)
 c0033a4:	e009883a 	mov	r4,fp
 c0033a8:	c005e340 	call	c005e34 <_Bfree>
 c0033ac:	d9000517 	ldw	r4,20(sp)
 c0033b0:	d9802317 	ldw	r6,140(sp)
 c0033b4:	d9c02517 	ldw	r7,148(sp)
 c0033b8:	b8000005 	stb	zero,0(r23)
 c0033bc:	20800044 	addi	r2,r4,1
 c0033c0:	30800015 	stw	r2,0(r6)
 c0033c4:	3802aa26 	beq	r7,zero,c003e70 <_dtoa_r+0x1178>
 c0033c8:	3dc00015 	stw	r23,0(r7)
 c0033cc:	d8800717 	ldw	r2,28(sp)
 c0033d0:	003e7906 	br	c002db8 <__alt_data_end+0xfc002db8>
 c0033d4:	00800434 	movhi	r2,16
 c0033d8:	10bfffc4 	addi	r2,r2,-1
 c0033dc:	88a2703a 	and	r17,r17,r2
 c0033e0:	883e851e 	bne	r17,zero,c002df8 <__alt_data_end+0xfc002df8>
 c0033e4:	00830074 	movhi	r2,3073
 c0033e8:	10bf0204 	addi	r2,r2,-1016
 c0033ec:	003e8406 	br	c002e00 <__alt_data_end+0xfc002e00>
 c0033f0:	10c00204 	addi	r3,r2,8
 c0033f4:	003e8706 	br	c002e14 <__alt_data_end+0xfc002e14>
 c0033f8:	01400434 	movhi	r5,16
 c0033fc:	297fffc4 	addi	r5,r5,-1
 c003400:	994a703a 	and	r5,r19,r5
 c003404:	9009883a 	mov	r4,r18
 c003408:	843f0044 	addi	r16,r16,-1023
 c00340c:	294ffc34 	orhi	r5,r5,16368
 c003410:	dd800217 	ldw	r22,8(sp)
 c003414:	d8001115 	stw	zero,68(sp)
 c003418:	003ea506 	br	c002eb0 <__alt_data_end+0xfc002eb0>
 c00341c:	00830074 	movhi	r2,3073
 c003420:	10bef904 	addi	r2,r2,-1052
 c003424:	003e6406 	br	c002db8 <__alt_data_end+0xfc002db8>
 c003428:	e0001115 	stw	zero,68(fp)
 c00342c:	000b883a 	mov	r5,zero
 c003430:	e009883a 	mov	r4,fp
 c003434:	c005d8c0 	call	c005d8c <_Balloc>
 c003438:	01bfffc4 	movi	r6,-1
 c00343c:	01c00044 	movi	r7,1
 c003440:	d8800715 	stw	r2,28(sp)
 c003444:	d9800c15 	stw	r6,48(sp)
 c003448:	e0801015 	stw	r2,64(fp)
 c00344c:	d8000315 	stw	zero,12(sp)
 c003450:	d9c00b15 	stw	r7,44(sp)
 c003454:	d9800615 	stw	r6,24(sp)
 c003458:	d8002215 	stw	zero,136(sp)
 c00345c:	d8800117 	ldw	r2,4(sp)
 c003460:	10008916 	blt	r2,zero,c003688 <_dtoa_r+0x990>
 c003464:	d9000517 	ldw	r4,20(sp)
 c003468:	00c00384 	movi	r3,14
 c00346c:	19008616 	blt	r3,r4,c003688 <_dtoa_r+0x990>
 c003470:	200490fa 	slli	r2,r4,3
 c003474:	00c30074 	movhi	r3,3073
 c003478:	d9802217 	ldw	r6,136(sp)
 c00347c:	18ff2104 	addi	r3,r3,-892
 c003480:	1885883a 	add	r2,r3,r2
 c003484:	14000017 	ldw	r16,0(r2)
 c003488:	14400117 	ldw	r17,4(r2)
 c00348c:	30016316 	blt	r6,zero,c003a1c <_dtoa_r+0xd24>
 c003490:	800d883a 	mov	r6,r16
 c003494:	880f883a 	mov	r7,r17
 c003498:	9009883a 	mov	r4,r18
 c00349c:	980b883a 	mov	r5,r19
 c0034a0:	c00b3a80 	call	c00b3a8 <__divdf3>
 c0034a4:	180b883a 	mov	r5,r3
 c0034a8:	1009883a 	mov	r4,r2
 c0034ac:	c00d1380 	call	c00d138 <__fixdfsi>
 c0034b0:	1009883a 	mov	r4,r2
 c0034b4:	102b883a 	mov	r21,r2
 c0034b8:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c0034bc:	800d883a 	mov	r6,r16
 c0034c0:	880f883a 	mov	r7,r17
 c0034c4:	1009883a 	mov	r4,r2
 c0034c8:	180b883a 	mov	r5,r3
 c0034cc:	c00bfd00 	call	c00bfd0 <__muldf3>
 c0034d0:	100d883a 	mov	r6,r2
 c0034d4:	180f883a 	mov	r7,r3
 c0034d8:	9009883a 	mov	r4,r18
 c0034dc:	980b883a 	mov	r5,r19
 c0034e0:	c00c83c0 	call	c00c83c <__subdf3>
 c0034e4:	d9c00717 	ldw	r7,28(sp)
 c0034e8:	1009883a 	mov	r4,r2
 c0034ec:	a8800c04 	addi	r2,r21,48
 c0034f0:	38800005 	stb	r2,0(r7)
 c0034f4:	3dc00044 	addi	r23,r7,1
 c0034f8:	d9c00617 	ldw	r7,24(sp)
 c0034fc:	01800044 	movi	r6,1
 c003500:	180b883a 	mov	r5,r3
 c003504:	2005883a 	mov	r2,r4
 c003508:	39803826 	beq	r7,r6,c0035ec <_dtoa_r+0x8f4>
 c00350c:	000d883a 	mov	r6,zero
 c003510:	01d00934 	movhi	r7,16420
 c003514:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003518:	000d883a 	mov	r6,zero
 c00351c:	000f883a 	mov	r7,zero
 c003520:	1009883a 	mov	r4,r2
 c003524:	180b883a 	mov	r5,r3
 c003528:	1025883a 	mov	r18,r2
 c00352c:	1827883a 	mov	r19,r3
 c003530:	c00bd780 	call	c00bd78 <__eqdf2>
 c003534:	103f9a26 	beq	r2,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003538:	d9c00617 	ldw	r7,24(sp)
 c00353c:	d8c00717 	ldw	r3,28(sp)
 c003540:	b829883a 	mov	r20,r23
 c003544:	38bfffc4 	addi	r2,r7,-1
 c003548:	18ad883a 	add	r22,r3,r2
 c00354c:	00000a06 	br	c003578 <_dtoa_r+0x880>
 c003550:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003554:	000d883a 	mov	r6,zero
 c003558:	000f883a 	mov	r7,zero
 c00355c:	1009883a 	mov	r4,r2
 c003560:	180b883a 	mov	r5,r3
 c003564:	1025883a 	mov	r18,r2
 c003568:	1827883a 	mov	r19,r3
 c00356c:	b829883a 	mov	r20,r23
 c003570:	c00bd780 	call	c00bd78 <__eqdf2>
 c003574:	103f8a26 	beq	r2,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003578:	800d883a 	mov	r6,r16
 c00357c:	880f883a 	mov	r7,r17
 c003580:	9009883a 	mov	r4,r18
 c003584:	980b883a 	mov	r5,r19
 c003588:	c00b3a80 	call	c00b3a8 <__divdf3>
 c00358c:	180b883a 	mov	r5,r3
 c003590:	1009883a 	mov	r4,r2
 c003594:	c00d1380 	call	c00d138 <__fixdfsi>
 c003598:	1009883a 	mov	r4,r2
 c00359c:	102b883a 	mov	r21,r2
 c0035a0:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c0035a4:	800d883a 	mov	r6,r16
 c0035a8:	880f883a 	mov	r7,r17
 c0035ac:	1009883a 	mov	r4,r2
 c0035b0:	180b883a 	mov	r5,r3
 c0035b4:	c00bfd00 	call	c00bfd0 <__muldf3>
 c0035b8:	100d883a 	mov	r6,r2
 c0035bc:	180f883a 	mov	r7,r3
 c0035c0:	9009883a 	mov	r4,r18
 c0035c4:	980b883a 	mov	r5,r19
 c0035c8:	c00c83c0 	call	c00c83c <__subdf3>
 c0035cc:	aa000c04 	addi	r8,r21,48
 c0035d0:	a2000005 	stb	r8,0(r20)
 c0035d4:	000d883a 	mov	r6,zero
 c0035d8:	01d00934 	movhi	r7,16420
 c0035dc:	1009883a 	mov	r4,r2
 c0035e0:	180b883a 	mov	r5,r3
 c0035e4:	a5c00044 	addi	r23,r20,1
 c0035e8:	b53fd91e 	bne	r22,r20,c003550 <__alt_data_end+0xfc003550>
 c0035ec:	100d883a 	mov	r6,r2
 c0035f0:	180f883a 	mov	r7,r3
 c0035f4:	1009883a 	mov	r4,r2
 c0035f8:	180b883a 	mov	r5,r3
 c0035fc:	c00aafc0 	call	c00aafc <__adddf3>
 c003600:	100d883a 	mov	r6,r2
 c003604:	180f883a 	mov	r7,r3
 c003608:	8009883a 	mov	r4,r16
 c00360c:	880b883a 	mov	r5,r17
 c003610:	1027883a 	mov	r19,r2
 c003614:	1825883a 	mov	r18,r3
 c003618:	c00bedc0 	call	c00bedc <__ledf2>
 c00361c:	10000816 	blt	r2,zero,c003640 <_dtoa_r+0x948>
 c003620:	980d883a 	mov	r6,r19
 c003624:	900f883a 	mov	r7,r18
 c003628:	8009883a 	mov	r4,r16
 c00362c:	880b883a 	mov	r5,r17
 c003630:	c00bd780 	call	c00bd78 <__eqdf2>
 c003634:	103f5a1e 	bne	r2,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003638:	ad40004c 	andi	r21,r21,1
 c00363c:	a83f5826 	beq	r21,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003640:	bd3fffc3 	ldbu	r20,-1(r23)
 c003644:	b8bfffc4 	addi	r2,r23,-1
 c003648:	1007883a 	mov	r3,r2
 c00364c:	01400e44 	movi	r5,57
 c003650:	d9800717 	ldw	r6,28(sp)
 c003654:	00000506 	br	c00366c <_dtoa_r+0x974>
 c003658:	18ffffc4 	addi	r3,r3,-1
 c00365c:	11824726 	beq	r2,r6,c003f7c <_dtoa_r+0x1284>
 c003660:	1d000003 	ldbu	r20,0(r3)
 c003664:	102f883a 	mov	r23,r2
 c003668:	10bfffc4 	addi	r2,r2,-1
 c00366c:	a1003fcc 	andi	r4,r20,255
 c003670:	2100201c 	xori	r4,r4,128
 c003674:	213fe004 	addi	r4,r4,-128
 c003678:	217ff726 	beq	r4,r5,c003658 <__alt_data_end+0xfc003658>
 c00367c:	a2000044 	addi	r8,r20,1
 c003680:	12000005 	stb	r8,0(r2)
 c003684:	003f4606 	br	c0033a0 <__alt_data_end+0xfc0033a0>
 c003688:	d9000b17 	ldw	r4,44(sp)
 c00368c:	2000c826 	beq	r4,zero,c0039b0 <_dtoa_r+0xcb8>
 c003690:	d9800317 	ldw	r6,12(sp)
 c003694:	00c00044 	movi	r3,1
 c003698:	1980f90e 	bge	r3,r6,c003a80 <_dtoa_r+0xd88>
 c00369c:	d8800617 	ldw	r2,24(sp)
 c0036a0:	d8c00a17 	ldw	r3,40(sp)
 c0036a4:	157fffc4 	addi	r21,r2,-1
 c0036a8:	1d41f316 	blt	r3,r21,c003e78 <_dtoa_r+0x1180>
 c0036ac:	1d6bc83a 	sub	r21,r3,r21
 c0036b0:	d9c00617 	ldw	r7,24(sp)
 c0036b4:	3802aa16 	blt	r7,zero,c004160 <_dtoa_r+0x1468>
 c0036b8:	dd000817 	ldw	r20,32(sp)
 c0036bc:	d8800617 	ldw	r2,24(sp)
 c0036c0:	d8c00817 	ldw	r3,32(sp)
 c0036c4:	01400044 	movi	r5,1
 c0036c8:	e009883a 	mov	r4,fp
 c0036cc:	1887883a 	add	r3,r3,r2
 c0036d0:	d8c00815 	stw	r3,32(sp)
 c0036d4:	b0ad883a 	add	r22,r22,r2
 c0036d8:	c0061c00 	call	c0061c0 <__i2b>
 c0036dc:	1023883a 	mov	r17,r2
 c0036e0:	a0000826 	beq	r20,zero,c003704 <_dtoa_r+0xa0c>
 c0036e4:	0580070e 	bge	zero,r22,c003704 <_dtoa_r+0xa0c>
 c0036e8:	a005883a 	mov	r2,r20
 c0036ec:	b500b916 	blt	r22,r20,c0039d4 <_dtoa_r+0xcdc>
 c0036f0:	d9000817 	ldw	r4,32(sp)
 c0036f4:	a0a9c83a 	sub	r20,r20,r2
 c0036f8:	b0adc83a 	sub	r22,r22,r2
 c0036fc:	2089c83a 	sub	r4,r4,r2
 c003700:	d9000815 	stw	r4,32(sp)
 c003704:	d9800a17 	ldw	r6,40(sp)
 c003708:	0181810e 	bge	zero,r6,c003d10 <_dtoa_r+0x1018>
 c00370c:	d9c00b17 	ldw	r7,44(sp)
 c003710:	3800b326 	beq	r7,zero,c0039e0 <_dtoa_r+0xce8>
 c003714:	a800b226 	beq	r21,zero,c0039e0 <_dtoa_r+0xce8>
 c003718:	880b883a 	mov	r5,r17
 c00371c:	a80d883a 	mov	r6,r21
 c003720:	e009883a 	mov	r4,fp
 c003724:	c0064880 	call	c006488 <__pow5mult>
 c003728:	d9800917 	ldw	r6,36(sp)
 c00372c:	100b883a 	mov	r5,r2
 c003730:	e009883a 	mov	r4,fp
 c003734:	1023883a 	mov	r17,r2
 c003738:	c0061fc0 	call	c0061fc <__multiply>
 c00373c:	1021883a 	mov	r16,r2
 c003740:	d8800a17 	ldw	r2,40(sp)
 c003744:	d9400917 	ldw	r5,36(sp)
 c003748:	e009883a 	mov	r4,fp
 c00374c:	1545c83a 	sub	r2,r2,r21
 c003750:	d8800a15 	stw	r2,40(sp)
 c003754:	c005e340 	call	c005e34 <_Bfree>
 c003758:	d8c00a17 	ldw	r3,40(sp)
 c00375c:	18009f1e 	bne	r3,zero,c0039dc <_dtoa_r+0xce4>
 c003760:	05c00044 	movi	r23,1
 c003764:	e009883a 	mov	r4,fp
 c003768:	b80b883a 	mov	r5,r23
 c00376c:	c0061c00 	call	c0061c0 <__i2b>
 c003770:	d9000d17 	ldw	r4,52(sp)
 c003774:	102b883a 	mov	r21,r2
 c003778:	2000ce26 	beq	r4,zero,c003ab4 <_dtoa_r+0xdbc>
 c00377c:	200d883a 	mov	r6,r4
 c003780:	100b883a 	mov	r5,r2
 c003784:	e009883a 	mov	r4,fp
 c003788:	c0064880 	call	c006488 <__pow5mult>
 c00378c:	d9800317 	ldw	r6,12(sp)
 c003790:	102b883a 	mov	r21,r2
 c003794:	b981810e 	bge	r23,r6,c003d9c <_dtoa_r+0x10a4>
 c003798:	0027883a 	mov	r19,zero
 c00379c:	a8800417 	ldw	r2,16(r21)
 c0037a0:	05c00804 	movi	r23,32
 c0037a4:	10800104 	addi	r2,r2,4
 c0037a8:	1085883a 	add	r2,r2,r2
 c0037ac:	1085883a 	add	r2,r2,r2
 c0037b0:	a885883a 	add	r2,r21,r2
 c0037b4:	11000017 	ldw	r4,0(r2)
 c0037b8:	c0060a80 	call	c0060a8 <__hi0bits>
 c0037bc:	b885c83a 	sub	r2,r23,r2
 c0037c0:	1585883a 	add	r2,r2,r22
 c0037c4:	108007cc 	andi	r2,r2,31
 c0037c8:	1000b326 	beq	r2,zero,c003a98 <_dtoa_r+0xda0>
 c0037cc:	00c00804 	movi	r3,32
 c0037d0:	1887c83a 	sub	r3,r3,r2
 c0037d4:	01000104 	movi	r4,4
 c0037d8:	20c2cd0e 	bge	r4,r3,c004310 <_dtoa_r+0x1618>
 c0037dc:	00c00704 	movi	r3,28
 c0037e0:	1885c83a 	sub	r2,r3,r2
 c0037e4:	d8c00817 	ldw	r3,32(sp)
 c0037e8:	a0a9883a 	add	r20,r20,r2
 c0037ec:	b0ad883a 	add	r22,r22,r2
 c0037f0:	1887883a 	add	r3,r3,r2
 c0037f4:	d8c00815 	stw	r3,32(sp)
 c0037f8:	d9800817 	ldw	r6,32(sp)
 c0037fc:	0180040e 	bge	zero,r6,c003810 <_dtoa_r+0xb18>
 c003800:	800b883a 	mov	r5,r16
 c003804:	e009883a 	mov	r4,fp
 c003808:	c0065c80 	call	c0065c8 <__lshift>
 c00380c:	1021883a 	mov	r16,r2
 c003810:	0580050e 	bge	zero,r22,c003828 <_dtoa_r+0xb30>
 c003814:	a80b883a 	mov	r5,r21
 c003818:	b00d883a 	mov	r6,r22
 c00381c:	e009883a 	mov	r4,fp
 c003820:	c0065c80 	call	c0065c8 <__lshift>
 c003824:	102b883a 	mov	r21,r2
 c003828:	d9c00e17 	ldw	r7,56(sp)
 c00382c:	3801211e 	bne	r7,zero,c003cb4 <_dtoa_r+0xfbc>
 c003830:	d9800617 	ldw	r6,24(sp)
 c003834:	0181380e 	bge	zero,r6,c003d18 <_dtoa_r+0x1020>
 c003838:	d8c00b17 	ldw	r3,44(sp)
 c00383c:	1800ab1e 	bne	r3,zero,c003aec <_dtoa_r+0xdf4>
 c003840:	dc800717 	ldw	r18,28(sp)
 c003844:	dcc00617 	ldw	r19,24(sp)
 c003848:	9029883a 	mov	r20,r18
 c00384c:	00000206 	br	c003858 <_dtoa_r+0xb60>
 c003850:	c005e5c0 	call	c005e5c <__multadd>
 c003854:	1021883a 	mov	r16,r2
 c003858:	a80b883a 	mov	r5,r21
 c00385c:	8009883a 	mov	r4,r16
 c003860:	c002ad00 	call	c002ad0 <quorem>
 c003864:	10800c04 	addi	r2,r2,48
 c003868:	90800005 	stb	r2,0(r18)
 c00386c:	94800044 	addi	r18,r18,1
 c003870:	9507c83a 	sub	r3,r18,r20
 c003874:	000f883a 	mov	r7,zero
 c003878:	01800284 	movi	r6,10
 c00387c:	800b883a 	mov	r5,r16
 c003880:	e009883a 	mov	r4,fp
 c003884:	1cfff216 	blt	r3,r19,c003850 <__alt_data_end+0xfc003850>
 c003888:	1011883a 	mov	r8,r2
 c00388c:	d8800617 	ldw	r2,24(sp)
 c003890:	0082370e 	bge	zero,r2,c004170 <_dtoa_r+0x1478>
 c003894:	d9000717 	ldw	r4,28(sp)
 c003898:	0025883a 	mov	r18,zero
 c00389c:	20af883a 	add	r23,r4,r2
 c0038a0:	01800044 	movi	r6,1
 c0038a4:	800b883a 	mov	r5,r16
 c0038a8:	e009883a 	mov	r4,fp
 c0038ac:	da001715 	stw	r8,92(sp)
 c0038b0:	c0065c80 	call	c0065c8 <__lshift>
 c0038b4:	a80b883a 	mov	r5,r21
 c0038b8:	1009883a 	mov	r4,r2
 c0038bc:	d8800915 	stw	r2,36(sp)
 c0038c0:	c0067100 	call	c006710 <__mcmp>
 c0038c4:	da001717 	ldw	r8,92(sp)
 c0038c8:	0081800e 	bge	zero,r2,c003ecc <_dtoa_r+0x11d4>
 c0038cc:	b93fffc3 	ldbu	r4,-1(r23)
 c0038d0:	b8bfffc4 	addi	r2,r23,-1
 c0038d4:	1007883a 	mov	r3,r2
 c0038d8:	01800e44 	movi	r6,57
 c0038dc:	d9c00717 	ldw	r7,28(sp)
 c0038e0:	00000506 	br	c0038f8 <_dtoa_r+0xc00>
 c0038e4:	18ffffc4 	addi	r3,r3,-1
 c0038e8:	11c12326 	beq	r2,r7,c003d78 <_dtoa_r+0x1080>
 c0038ec:	19000003 	ldbu	r4,0(r3)
 c0038f0:	102f883a 	mov	r23,r2
 c0038f4:	10bfffc4 	addi	r2,r2,-1
 c0038f8:	21403fcc 	andi	r5,r4,255
 c0038fc:	2940201c 	xori	r5,r5,128
 c003900:	297fe004 	addi	r5,r5,-128
 c003904:	29bff726 	beq	r5,r6,c0038e4 <__alt_data_end+0xfc0038e4>
 c003908:	21000044 	addi	r4,r4,1
 c00390c:	11000005 	stb	r4,0(r2)
 c003910:	a80b883a 	mov	r5,r21
 c003914:	e009883a 	mov	r4,fp
 c003918:	c005e340 	call	c005e34 <_Bfree>
 c00391c:	883ea026 	beq	r17,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003920:	90000426 	beq	r18,zero,c003934 <_dtoa_r+0xc3c>
 c003924:	94400326 	beq	r18,r17,c003934 <_dtoa_r+0xc3c>
 c003928:	900b883a 	mov	r5,r18
 c00392c:	e009883a 	mov	r4,fp
 c003930:	c005e340 	call	c005e34 <_Bfree>
 c003934:	880b883a 	mov	r5,r17
 c003938:	e009883a 	mov	r4,fp
 c00393c:	c005e340 	call	c005e34 <_Bfree>
 c003940:	003e9706 	br	c0033a0 <__alt_data_end+0xfc0033a0>
 c003944:	01800044 	movi	r6,1
 c003948:	d9800e15 	stw	r6,56(sp)
 c00394c:	003d9606 	br	c002fa8 <__alt_data_end+0xfc002fa8>
 c003950:	d8800817 	ldw	r2,32(sp)
 c003954:	d8c00517 	ldw	r3,20(sp)
 c003958:	d8000d15 	stw	zero,52(sp)
 c00395c:	10c5c83a 	sub	r2,r2,r3
 c003960:	00c9c83a 	sub	r4,zero,r3
 c003964:	d8800815 	stw	r2,32(sp)
 c003968:	d9000a15 	stw	r4,40(sp)
 c00396c:	003d9706 	br	c002fcc <__alt_data_end+0xfc002fcc>
 c003970:	05adc83a 	sub	r22,zero,r22
 c003974:	dd800815 	stw	r22,32(sp)
 c003978:	002d883a 	mov	r22,zero
 c00397c:	003d8e06 	br	c002fb8 <__alt_data_end+0xfc002fb8>
 c003980:	d9000517 	ldw	r4,20(sp)
 c003984:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c003988:	100d883a 	mov	r6,r2
 c00398c:	180f883a 	mov	r7,r3
 c003990:	a009883a 	mov	r4,r20
 c003994:	880b883a 	mov	r5,r17
 c003998:	c00bd780 	call	c00bd78 <__eqdf2>
 c00399c:	103d7126 	beq	r2,zero,c002f64 <__alt_data_end+0xfc002f64>
 c0039a0:	d9c00517 	ldw	r7,20(sp)
 c0039a4:	39ffffc4 	addi	r7,r7,-1
 c0039a8:	d9c00515 	stw	r7,20(sp)
 c0039ac:	003d6d06 	br	c002f64 <__alt_data_end+0xfc002f64>
 c0039b0:	dd400a17 	ldw	r21,40(sp)
 c0039b4:	dd000817 	ldw	r20,32(sp)
 c0039b8:	0023883a 	mov	r17,zero
 c0039bc:	003f4806 	br	c0036e0 <__alt_data_end+0xfc0036e0>
 c0039c0:	10e3c83a 	sub	r17,r2,r3
 c0039c4:	9448983a 	sll	r4,r18,r17
 c0039c8:	003d3206 	br	c002e94 <__alt_data_end+0xfc002e94>
 c0039cc:	d8000e15 	stw	zero,56(sp)
 c0039d0:	003d7506 	br	c002fa8 <__alt_data_end+0xfc002fa8>
 c0039d4:	b005883a 	mov	r2,r22
 c0039d8:	003f4506 	br	c0036f0 <__alt_data_end+0xfc0036f0>
 c0039dc:	dc000915 	stw	r16,36(sp)
 c0039e0:	d9800a17 	ldw	r6,40(sp)
 c0039e4:	d9400917 	ldw	r5,36(sp)
 c0039e8:	e009883a 	mov	r4,fp
 c0039ec:	c0064880 	call	c006488 <__pow5mult>
 c0039f0:	1021883a 	mov	r16,r2
 c0039f4:	003f5a06 	br	c003760 <__alt_data_end+0xfc003760>
 c0039f8:	01c00044 	movi	r7,1
 c0039fc:	d9c00b15 	stw	r7,44(sp)
 c003a00:	d8802217 	ldw	r2,136(sp)
 c003a04:	0081280e 	bge	zero,r2,c003ea8 <_dtoa_r+0x11b0>
 c003a08:	100d883a 	mov	r6,r2
 c003a0c:	1021883a 	mov	r16,r2
 c003a10:	d8800c15 	stw	r2,48(sp)
 c003a14:	d8800615 	stw	r2,24(sp)
 c003a18:	003d8806 	br	c00303c <__alt_data_end+0xfc00303c>
 c003a1c:	d8800617 	ldw	r2,24(sp)
 c003a20:	00be9b16 	blt	zero,r2,c003490 <__alt_data_end+0xfc003490>
 c003a24:	10010f1e 	bne	r2,zero,c003e64 <_dtoa_r+0x116c>
 c003a28:	880b883a 	mov	r5,r17
 c003a2c:	000d883a 	mov	r6,zero
 c003a30:	01d00534 	movhi	r7,16404
 c003a34:	8009883a 	mov	r4,r16
 c003a38:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003a3c:	900d883a 	mov	r6,r18
 c003a40:	980f883a 	mov	r7,r19
 c003a44:	1009883a 	mov	r4,r2
 c003a48:	180b883a 	mov	r5,r3
 c003a4c:	c00be000 	call	c00be00 <__gedf2>
 c003a50:	002b883a 	mov	r21,zero
 c003a54:	0023883a 	mov	r17,zero
 c003a58:	1000bf16 	blt	r2,zero,c003d58 <_dtoa_r+0x1060>
 c003a5c:	d9802217 	ldw	r6,136(sp)
 c003a60:	ddc00717 	ldw	r23,28(sp)
 c003a64:	018c303a 	nor	r6,zero,r6
 c003a68:	d9800515 	stw	r6,20(sp)
 c003a6c:	a80b883a 	mov	r5,r21
 c003a70:	e009883a 	mov	r4,fp
 c003a74:	c005e340 	call	c005e34 <_Bfree>
 c003a78:	883e4926 	beq	r17,zero,c0033a0 <__alt_data_end+0xfc0033a0>
 c003a7c:	003fad06 	br	c003934 <__alt_data_end+0xfc003934>
 c003a80:	d9c01117 	ldw	r7,68(sp)
 c003a84:	3801bc26 	beq	r7,zero,c004178 <_dtoa_r+0x1480>
 c003a88:	10810cc4 	addi	r2,r2,1075
 c003a8c:	dd400a17 	ldw	r21,40(sp)
 c003a90:	dd000817 	ldw	r20,32(sp)
 c003a94:	003f0a06 	br	c0036c0 <__alt_data_end+0xfc0036c0>
 c003a98:	00800704 	movi	r2,28
 c003a9c:	d9000817 	ldw	r4,32(sp)
 c003aa0:	a0a9883a 	add	r20,r20,r2
 c003aa4:	b0ad883a 	add	r22,r22,r2
 c003aa8:	2089883a 	add	r4,r4,r2
 c003aac:	d9000815 	stw	r4,32(sp)
 c003ab0:	003f5106 	br	c0037f8 <__alt_data_end+0xfc0037f8>
 c003ab4:	d8c00317 	ldw	r3,12(sp)
 c003ab8:	b8c1fc0e 	bge	r23,r3,c0042ac <_dtoa_r+0x15b4>
 c003abc:	0027883a 	mov	r19,zero
 c003ac0:	b805883a 	mov	r2,r23
 c003ac4:	003f3e06 	br	c0037c0 <__alt_data_end+0xfc0037c0>
 c003ac8:	880b883a 	mov	r5,r17
 c003acc:	e009883a 	mov	r4,fp
 c003ad0:	000f883a 	mov	r7,zero
 c003ad4:	01800284 	movi	r6,10
 c003ad8:	c005e5c0 	call	c005e5c <__multadd>
 c003adc:	d9000c17 	ldw	r4,48(sp)
 c003ae0:	1023883a 	mov	r17,r2
 c003ae4:	0102040e 	bge	zero,r4,c0042f8 <_dtoa_r+0x1600>
 c003ae8:	d9000615 	stw	r4,24(sp)
 c003aec:	0500050e 	bge	zero,r20,c003b04 <_dtoa_r+0xe0c>
 c003af0:	880b883a 	mov	r5,r17
 c003af4:	a00d883a 	mov	r6,r20
 c003af8:	e009883a 	mov	r4,fp
 c003afc:	c0065c80 	call	c0065c8 <__lshift>
 c003b00:	1023883a 	mov	r17,r2
 c003b04:	9801241e 	bne	r19,zero,c003f98 <_dtoa_r+0x12a0>
 c003b08:	8829883a 	mov	r20,r17
 c003b0c:	d9000617 	ldw	r4,24(sp)
 c003b10:	dcc00717 	ldw	r19,28(sp)
 c003b14:	9480004c 	andi	r18,r18,1
 c003b18:	20bfffc4 	addi	r2,r4,-1
 c003b1c:	9885883a 	add	r2,r19,r2
 c003b20:	d8800415 	stw	r2,16(sp)
 c003b24:	dc800615 	stw	r18,24(sp)
 c003b28:	a80b883a 	mov	r5,r21
 c003b2c:	8009883a 	mov	r4,r16
 c003b30:	c002ad00 	call	c002ad0 <quorem>
 c003b34:	880b883a 	mov	r5,r17
 c003b38:	8009883a 	mov	r4,r16
 c003b3c:	102f883a 	mov	r23,r2
 c003b40:	c0067100 	call	c006710 <__mcmp>
 c003b44:	a80b883a 	mov	r5,r21
 c003b48:	a00d883a 	mov	r6,r20
 c003b4c:	e009883a 	mov	r4,fp
 c003b50:	102d883a 	mov	r22,r2
 c003b54:	c0067700 	call	c006770 <__mdiff>
 c003b58:	1007883a 	mov	r3,r2
 c003b5c:	10800317 	ldw	r2,12(r2)
 c003b60:	bc800c04 	addi	r18,r23,48
 c003b64:	180b883a 	mov	r5,r3
 c003b68:	10004e1e 	bne	r2,zero,c003ca4 <_dtoa_r+0xfac>
 c003b6c:	8009883a 	mov	r4,r16
 c003b70:	d8c01615 	stw	r3,88(sp)
 c003b74:	c0067100 	call	c006710 <__mcmp>
 c003b78:	d8c01617 	ldw	r3,88(sp)
 c003b7c:	e009883a 	mov	r4,fp
 c003b80:	d8801615 	stw	r2,88(sp)
 c003b84:	180b883a 	mov	r5,r3
 c003b88:	c005e340 	call	c005e34 <_Bfree>
 c003b8c:	d8801617 	ldw	r2,88(sp)
 c003b90:	1000041e 	bne	r2,zero,c003ba4 <_dtoa_r+0xeac>
 c003b94:	d9800317 	ldw	r6,12(sp)
 c003b98:	3000021e 	bne	r6,zero,c003ba4 <_dtoa_r+0xeac>
 c003b9c:	d8c00617 	ldw	r3,24(sp)
 c003ba0:	18003726 	beq	r3,zero,c003c80 <_dtoa_r+0xf88>
 c003ba4:	b0002016 	blt	r22,zero,c003c28 <_dtoa_r+0xf30>
 c003ba8:	b000041e 	bne	r22,zero,c003bbc <_dtoa_r+0xec4>
 c003bac:	d9000317 	ldw	r4,12(sp)
 c003bb0:	2000021e 	bne	r4,zero,c003bbc <_dtoa_r+0xec4>
 c003bb4:	d8c00617 	ldw	r3,24(sp)
 c003bb8:	18001b26 	beq	r3,zero,c003c28 <_dtoa_r+0xf30>
 c003bbc:	00810716 	blt	zero,r2,c003fdc <_dtoa_r+0x12e4>
 c003bc0:	d8c00417 	ldw	r3,16(sp)
 c003bc4:	9d800044 	addi	r22,r19,1
 c003bc8:	9c800005 	stb	r18,0(r19)
 c003bcc:	b02f883a 	mov	r23,r22
 c003bd0:	98c10626 	beq	r19,r3,c003fec <_dtoa_r+0x12f4>
 c003bd4:	800b883a 	mov	r5,r16
 c003bd8:	000f883a 	mov	r7,zero
 c003bdc:	01800284 	movi	r6,10
 c003be0:	e009883a 	mov	r4,fp
 c003be4:	c005e5c0 	call	c005e5c <__multadd>
 c003be8:	1021883a 	mov	r16,r2
 c003bec:	000f883a 	mov	r7,zero
 c003bf0:	01800284 	movi	r6,10
 c003bf4:	880b883a 	mov	r5,r17
 c003bf8:	e009883a 	mov	r4,fp
 c003bfc:	8d002526 	beq	r17,r20,c003c94 <_dtoa_r+0xf9c>
 c003c00:	c005e5c0 	call	c005e5c <__multadd>
 c003c04:	a00b883a 	mov	r5,r20
 c003c08:	000f883a 	mov	r7,zero
 c003c0c:	01800284 	movi	r6,10
 c003c10:	e009883a 	mov	r4,fp
 c003c14:	1023883a 	mov	r17,r2
 c003c18:	c005e5c0 	call	c005e5c <__multadd>
 c003c1c:	1029883a 	mov	r20,r2
 c003c20:	b027883a 	mov	r19,r22
 c003c24:	003fc006 	br	c003b28 <__alt_data_end+0xfc003b28>
 c003c28:	9011883a 	mov	r8,r18
 c003c2c:	00800e0e 	bge	zero,r2,c003c68 <_dtoa_r+0xf70>
 c003c30:	800b883a 	mov	r5,r16
 c003c34:	01800044 	movi	r6,1
 c003c38:	e009883a 	mov	r4,fp
 c003c3c:	da001715 	stw	r8,92(sp)
 c003c40:	c0065c80 	call	c0065c8 <__lshift>
 c003c44:	a80b883a 	mov	r5,r21
 c003c48:	1009883a 	mov	r4,r2
 c003c4c:	1021883a 	mov	r16,r2
 c003c50:	c0067100 	call	c006710 <__mcmp>
 c003c54:	da001717 	ldw	r8,92(sp)
 c003c58:	0081960e 	bge	zero,r2,c0042b4 <_dtoa_r+0x15bc>
 c003c5c:	00800e44 	movi	r2,57
 c003c60:	40817026 	beq	r8,r2,c004224 <_dtoa_r+0x152c>
 c003c64:	ba000c44 	addi	r8,r23,49
 c003c68:	8825883a 	mov	r18,r17
 c003c6c:	9dc00044 	addi	r23,r19,1
 c003c70:	9a000005 	stb	r8,0(r19)
 c003c74:	a023883a 	mov	r17,r20
 c003c78:	dc000915 	stw	r16,36(sp)
 c003c7c:	003f2406 	br	c003910 <__alt_data_end+0xfc003910>
 c003c80:	00800e44 	movi	r2,57
 c003c84:	9011883a 	mov	r8,r18
 c003c88:	90816626 	beq	r18,r2,c004224 <_dtoa_r+0x152c>
 c003c8c:	05bff516 	blt	zero,r22,c003c64 <__alt_data_end+0xfc003c64>
 c003c90:	003ff506 	br	c003c68 <__alt_data_end+0xfc003c68>
 c003c94:	c005e5c0 	call	c005e5c <__multadd>
 c003c98:	1023883a 	mov	r17,r2
 c003c9c:	1029883a 	mov	r20,r2
 c003ca0:	003fdf06 	br	c003c20 <__alt_data_end+0xfc003c20>
 c003ca4:	e009883a 	mov	r4,fp
 c003ca8:	c005e340 	call	c005e34 <_Bfree>
 c003cac:	00800044 	movi	r2,1
 c003cb0:	003fbc06 	br	c003ba4 <__alt_data_end+0xfc003ba4>
 c003cb4:	a80b883a 	mov	r5,r21
 c003cb8:	8009883a 	mov	r4,r16
 c003cbc:	c0067100 	call	c006710 <__mcmp>
 c003cc0:	103edb0e 	bge	r2,zero,c003830 <__alt_data_end+0xfc003830>
 c003cc4:	800b883a 	mov	r5,r16
 c003cc8:	000f883a 	mov	r7,zero
 c003ccc:	01800284 	movi	r6,10
 c003cd0:	e009883a 	mov	r4,fp
 c003cd4:	c005e5c0 	call	c005e5c <__multadd>
 c003cd8:	1021883a 	mov	r16,r2
 c003cdc:	d8800517 	ldw	r2,20(sp)
 c003ce0:	d8c00b17 	ldw	r3,44(sp)
 c003ce4:	10bfffc4 	addi	r2,r2,-1
 c003ce8:	d8800515 	stw	r2,20(sp)
 c003cec:	183f761e 	bne	r3,zero,c003ac8 <__alt_data_end+0xfc003ac8>
 c003cf0:	d9000c17 	ldw	r4,48(sp)
 c003cf4:	0101730e 	bge	zero,r4,c0042c4 <_dtoa_r+0x15cc>
 c003cf8:	d9000615 	stw	r4,24(sp)
 c003cfc:	003ed006 	br	c003840 <__alt_data_end+0xfc003840>
 c003d00:	00800084 	movi	r2,2
 c003d04:	3081861e 	bne	r6,r2,c004320 <_dtoa_r+0x1628>
 c003d08:	d8000b15 	stw	zero,44(sp)
 c003d0c:	003f3c06 	br	c003a00 <__alt_data_end+0xfc003a00>
 c003d10:	dc000917 	ldw	r16,36(sp)
 c003d14:	003e9206 	br	c003760 <__alt_data_end+0xfc003760>
 c003d18:	d9c00317 	ldw	r7,12(sp)
 c003d1c:	00800084 	movi	r2,2
 c003d20:	11fec50e 	bge	r2,r7,c003838 <__alt_data_end+0xfc003838>
 c003d24:	d9000617 	ldw	r4,24(sp)
 c003d28:	20013c1e 	bne	r4,zero,c00421c <_dtoa_r+0x1524>
 c003d2c:	a80b883a 	mov	r5,r21
 c003d30:	000f883a 	mov	r7,zero
 c003d34:	01800144 	movi	r6,5
 c003d38:	e009883a 	mov	r4,fp
 c003d3c:	c005e5c0 	call	c005e5c <__multadd>
 c003d40:	100b883a 	mov	r5,r2
 c003d44:	8009883a 	mov	r4,r16
 c003d48:	102b883a 	mov	r21,r2
 c003d4c:	c0067100 	call	c006710 <__mcmp>
 c003d50:	dc000915 	stw	r16,36(sp)
 c003d54:	00bf410e 	bge	zero,r2,c003a5c <__alt_data_end+0xfc003a5c>
 c003d58:	d9c00717 	ldw	r7,28(sp)
 c003d5c:	00800c44 	movi	r2,49
 c003d60:	38800005 	stb	r2,0(r7)
 c003d64:	d8800517 	ldw	r2,20(sp)
 c003d68:	3dc00044 	addi	r23,r7,1
 c003d6c:	10800044 	addi	r2,r2,1
 c003d70:	d8800515 	stw	r2,20(sp)
 c003d74:	003f3d06 	br	c003a6c <__alt_data_end+0xfc003a6c>
 c003d78:	d9800517 	ldw	r6,20(sp)
 c003d7c:	d9c00717 	ldw	r7,28(sp)
 c003d80:	00800c44 	movi	r2,49
 c003d84:	31800044 	addi	r6,r6,1
 c003d88:	d9800515 	stw	r6,20(sp)
 c003d8c:	38800005 	stb	r2,0(r7)
 c003d90:	003edf06 	br	c003910 <__alt_data_end+0xfc003910>
 c003d94:	d8000b15 	stw	zero,44(sp)
 c003d98:	003c9f06 	br	c003018 <__alt_data_end+0xfc003018>
 c003d9c:	903e7e1e 	bne	r18,zero,c003798 <__alt_data_end+0xfc003798>
 c003da0:	00800434 	movhi	r2,16
 c003da4:	10bfffc4 	addi	r2,r2,-1
 c003da8:	9884703a 	and	r2,r19,r2
 c003dac:	1000ea1e 	bne	r2,zero,c004158 <_dtoa_r+0x1460>
 c003db0:	9cdffc2c 	andhi	r19,r19,32752
 c003db4:	9800e826 	beq	r19,zero,c004158 <_dtoa_r+0x1460>
 c003db8:	d9c00817 	ldw	r7,32(sp)
 c003dbc:	b5800044 	addi	r22,r22,1
 c003dc0:	04c00044 	movi	r19,1
 c003dc4:	39c00044 	addi	r7,r7,1
 c003dc8:	d9c00815 	stw	r7,32(sp)
 c003dcc:	d8800d17 	ldw	r2,52(sp)
 c003dd0:	103e721e 	bne	r2,zero,c00379c <__alt_data_end+0xfc00379c>
 c003dd4:	00800044 	movi	r2,1
 c003dd8:	003e7906 	br	c0037c0 <__alt_data_end+0xfc0037c0>
 c003ddc:	8009883a 	mov	r4,r16
 c003de0:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c003de4:	d9800f17 	ldw	r6,60(sp)
 c003de8:	d9c01017 	ldw	r7,64(sp)
 c003dec:	1009883a 	mov	r4,r2
 c003df0:	180b883a 	mov	r5,r3
 c003df4:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003df8:	000d883a 	mov	r6,zero
 c003dfc:	01d00734 	movhi	r7,16412
 c003e00:	1009883a 	mov	r4,r2
 c003e04:	180b883a 	mov	r5,r3
 c003e08:	c00aafc0 	call	c00aafc <__adddf3>
 c003e0c:	047f3034 	movhi	r17,64704
 c003e10:	1021883a 	mov	r16,r2
 c003e14:	1c63883a 	add	r17,r3,r17
 c003e18:	d9000f17 	ldw	r4,60(sp)
 c003e1c:	d9401017 	ldw	r5,64(sp)
 c003e20:	000d883a 	mov	r6,zero
 c003e24:	01d00534 	movhi	r7,16404
 c003e28:	c00c83c0 	call	c00c83c <__subdf3>
 c003e2c:	800d883a 	mov	r6,r16
 c003e30:	880f883a 	mov	r7,r17
 c003e34:	1009883a 	mov	r4,r2
 c003e38:	180b883a 	mov	r5,r3
 c003e3c:	102b883a 	mov	r21,r2
 c003e40:	1829883a 	mov	r20,r3
 c003e44:	c00be000 	call	c00be00 <__gedf2>
 c003e48:	00806c16 	blt	zero,r2,c003ffc <_dtoa_r+0x1304>
 c003e4c:	89e0003c 	xorhi	r7,r17,32768
 c003e50:	800d883a 	mov	r6,r16
 c003e54:	a809883a 	mov	r4,r21
 c003e58:	a00b883a 	mov	r5,r20
 c003e5c:	c00bedc0 	call	c00bedc <__ledf2>
 c003e60:	103d7e0e 	bge	r2,zero,c00345c <__alt_data_end+0xfc00345c>
 c003e64:	002b883a 	mov	r21,zero
 c003e68:	0023883a 	mov	r17,zero
 c003e6c:	003efb06 	br	c003a5c <__alt_data_end+0xfc003a5c>
 c003e70:	d8800717 	ldw	r2,28(sp)
 c003e74:	003bd006 	br	c002db8 <__alt_data_end+0xfc002db8>
 c003e78:	d9000a17 	ldw	r4,40(sp)
 c003e7c:	d9800d17 	ldw	r6,52(sp)
 c003e80:	dd400a15 	stw	r21,40(sp)
 c003e84:	a905c83a 	sub	r2,r21,r4
 c003e88:	308d883a 	add	r6,r6,r2
 c003e8c:	d9800d15 	stw	r6,52(sp)
 c003e90:	002b883a 	mov	r21,zero
 c003e94:	003e0606 	br	c0036b0 <__alt_data_end+0xfc0036b0>
 c003e98:	9023883a 	mov	r17,r18
 c003e9c:	9829883a 	mov	r20,r19
 c003ea0:	04000084 	movi	r16,2
 c003ea4:	003c9206 	br	c0030f0 <__alt_data_end+0xfc0030f0>
 c003ea8:	04000044 	movi	r16,1
 c003eac:	dc000c15 	stw	r16,48(sp)
 c003eb0:	dc000615 	stw	r16,24(sp)
 c003eb4:	dc002215 	stw	r16,136(sp)
 c003eb8:	e0001115 	stw	zero,68(fp)
 c003ebc:	000b883a 	mov	r5,zero
 c003ec0:	003c6906 	br	c003068 <__alt_data_end+0xfc003068>
 c003ec4:	3021883a 	mov	r16,r6
 c003ec8:	003ffb06 	br	c003eb8 <__alt_data_end+0xfc003eb8>
 c003ecc:	1000021e 	bne	r2,zero,c003ed8 <_dtoa_r+0x11e0>
 c003ed0:	4200004c 	andi	r8,r8,1
 c003ed4:	403e7d1e 	bne	r8,zero,c0038cc <__alt_data_end+0xfc0038cc>
 c003ed8:	01000c04 	movi	r4,48
 c003edc:	00000106 	br	c003ee4 <_dtoa_r+0x11ec>
 c003ee0:	102f883a 	mov	r23,r2
 c003ee4:	b8bfffc4 	addi	r2,r23,-1
 c003ee8:	10c00007 	ldb	r3,0(r2)
 c003eec:	193ffc26 	beq	r3,r4,c003ee0 <__alt_data_end+0xfc003ee0>
 c003ef0:	003e8706 	br	c003910 <__alt_data_end+0xfc003910>
 c003ef4:	d8800517 	ldw	r2,20(sp)
 c003ef8:	00a3c83a 	sub	r17,zero,r2
 c003efc:	8800a426 	beq	r17,zero,c004190 <_dtoa_r+0x1498>
 c003f00:	888003cc 	andi	r2,r17,15
 c003f04:	100490fa 	slli	r2,r2,3
 c003f08:	00c30074 	movhi	r3,3073
 c003f0c:	18ff2104 	addi	r3,r3,-892
 c003f10:	1885883a 	add	r2,r3,r2
 c003f14:	11800017 	ldw	r6,0(r2)
 c003f18:	11c00117 	ldw	r7,4(r2)
 c003f1c:	9009883a 	mov	r4,r18
 c003f20:	980b883a 	mov	r5,r19
 c003f24:	8823d13a 	srai	r17,r17,4
 c003f28:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003f2c:	d8800f15 	stw	r2,60(sp)
 c003f30:	d8c01015 	stw	r3,64(sp)
 c003f34:	8800e826 	beq	r17,zero,c0042d8 <_dtoa_r+0x15e0>
 c003f38:	05030074 	movhi	r20,3073
 c003f3c:	a53f1704 	addi	r20,r20,-932
 c003f40:	04000084 	movi	r16,2
 c003f44:	8980004c 	andi	r6,r17,1
 c003f48:	1009883a 	mov	r4,r2
 c003f4c:	8823d07a 	srai	r17,r17,1
 c003f50:	180b883a 	mov	r5,r3
 c003f54:	30000426 	beq	r6,zero,c003f68 <_dtoa_r+0x1270>
 c003f58:	a1800017 	ldw	r6,0(r20)
 c003f5c:	a1c00117 	ldw	r7,4(r20)
 c003f60:	84000044 	addi	r16,r16,1
 c003f64:	c00bfd00 	call	c00bfd0 <__muldf3>
 c003f68:	a5000204 	addi	r20,r20,8
 c003f6c:	883ff51e 	bne	r17,zero,c003f44 <__alt_data_end+0xfc003f44>
 c003f70:	d8800f15 	stw	r2,60(sp)
 c003f74:	d8c01015 	stw	r3,64(sp)
 c003f78:	003c7606 	br	c003154 <__alt_data_end+0xfc003154>
 c003f7c:	00c00c04 	movi	r3,48
 c003f80:	10c00005 	stb	r3,0(r2)
 c003f84:	d8c00517 	ldw	r3,20(sp)
 c003f88:	bd3fffc3 	ldbu	r20,-1(r23)
 c003f8c:	18c00044 	addi	r3,r3,1
 c003f90:	d8c00515 	stw	r3,20(sp)
 c003f94:	003db906 	br	c00367c <__alt_data_end+0xfc00367c>
 c003f98:	89400117 	ldw	r5,4(r17)
 c003f9c:	e009883a 	mov	r4,fp
 c003fa0:	c005d8c0 	call	c005d8c <_Balloc>
 c003fa4:	89800417 	ldw	r6,16(r17)
 c003fa8:	89400304 	addi	r5,r17,12
 c003fac:	11000304 	addi	r4,r2,12
 c003fb0:	31800084 	addi	r6,r6,2
 c003fb4:	318d883a 	add	r6,r6,r6
 c003fb8:	318d883a 	add	r6,r6,r6
 c003fbc:	1027883a 	mov	r19,r2
 c003fc0:	c005b1c0 	call	c005b1c <memcpy>
 c003fc4:	01800044 	movi	r6,1
 c003fc8:	980b883a 	mov	r5,r19
 c003fcc:	e009883a 	mov	r4,fp
 c003fd0:	c0065c80 	call	c0065c8 <__lshift>
 c003fd4:	1029883a 	mov	r20,r2
 c003fd8:	003ecc06 	br	c003b0c <__alt_data_end+0xfc003b0c>
 c003fdc:	00800e44 	movi	r2,57
 c003fe0:	90809026 	beq	r18,r2,c004224 <_dtoa_r+0x152c>
 c003fe4:	92000044 	addi	r8,r18,1
 c003fe8:	003f1f06 	br	c003c68 <__alt_data_end+0xfc003c68>
 c003fec:	9011883a 	mov	r8,r18
 c003ff0:	8825883a 	mov	r18,r17
 c003ff4:	a023883a 	mov	r17,r20
 c003ff8:	003e2906 	br	c0038a0 <__alt_data_end+0xfc0038a0>
 c003ffc:	002b883a 	mov	r21,zero
 c004000:	0023883a 	mov	r17,zero
 c004004:	003f5406 	br	c003d58 <__alt_data_end+0xfc003d58>
 c004008:	61bfffc4 	addi	r6,r12,-1
 c00400c:	300490fa 	slli	r2,r6,3
 c004010:	00c30074 	movhi	r3,3073
 c004014:	18ff2104 	addi	r3,r3,-892
 c004018:	1885883a 	add	r2,r3,r2
 c00401c:	11000017 	ldw	r4,0(r2)
 c004020:	11400117 	ldw	r5,4(r2)
 c004024:	d8800717 	ldw	r2,28(sp)
 c004028:	880f883a 	mov	r7,r17
 c00402c:	d9801215 	stw	r6,72(sp)
 c004030:	800d883a 	mov	r6,r16
 c004034:	db001615 	stw	r12,88(sp)
 c004038:	15c00044 	addi	r23,r2,1
 c00403c:	c00bfd00 	call	c00bfd0 <__muldf3>
 c004040:	d9401017 	ldw	r5,64(sp)
 c004044:	d9000f17 	ldw	r4,60(sp)
 c004048:	d8c01515 	stw	r3,84(sp)
 c00404c:	d8801415 	stw	r2,80(sp)
 c004050:	c00d1380 	call	c00d138 <__fixdfsi>
 c004054:	1009883a 	mov	r4,r2
 c004058:	1021883a 	mov	r16,r2
 c00405c:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c004060:	d9000f17 	ldw	r4,60(sp)
 c004064:	d9401017 	ldw	r5,64(sp)
 c004068:	100d883a 	mov	r6,r2
 c00406c:	180f883a 	mov	r7,r3
 c004070:	c00c83c0 	call	c00c83c <__subdf3>
 c004074:	1829883a 	mov	r20,r3
 c004078:	d8c00717 	ldw	r3,28(sp)
 c00407c:	84000c04 	addi	r16,r16,48
 c004080:	1023883a 	mov	r17,r2
 c004084:	1c000005 	stb	r16,0(r3)
 c004088:	db001617 	ldw	r12,88(sp)
 c00408c:	00800044 	movi	r2,1
 c004090:	60802226 	beq	r12,r2,c00411c <_dtoa_r+0x1424>
 c004094:	d9c00717 	ldw	r7,28(sp)
 c004098:	8805883a 	mov	r2,r17
 c00409c:	b82b883a 	mov	r21,r23
 c0040a0:	3b19883a 	add	r12,r7,r12
 c0040a4:	6023883a 	mov	r17,r12
 c0040a8:	a007883a 	mov	r3,r20
 c0040ac:	dc800f15 	stw	r18,60(sp)
 c0040b0:	000d883a 	mov	r6,zero
 c0040b4:	01d00934 	movhi	r7,16420
 c0040b8:	1009883a 	mov	r4,r2
 c0040bc:	180b883a 	mov	r5,r3
 c0040c0:	c00bfd00 	call	c00bfd0 <__muldf3>
 c0040c4:	180b883a 	mov	r5,r3
 c0040c8:	1009883a 	mov	r4,r2
 c0040cc:	1829883a 	mov	r20,r3
 c0040d0:	1025883a 	mov	r18,r2
 c0040d4:	c00d1380 	call	c00d138 <__fixdfsi>
 c0040d8:	1009883a 	mov	r4,r2
 c0040dc:	1021883a 	mov	r16,r2
 c0040e0:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c0040e4:	100d883a 	mov	r6,r2
 c0040e8:	180f883a 	mov	r7,r3
 c0040ec:	9009883a 	mov	r4,r18
 c0040f0:	a00b883a 	mov	r5,r20
 c0040f4:	84000c04 	addi	r16,r16,48
 c0040f8:	c00c83c0 	call	c00c83c <__subdf3>
 c0040fc:	ad400044 	addi	r21,r21,1
 c004100:	ac3fffc5 	stb	r16,-1(r21)
 c004104:	ac7fea1e 	bne	r21,r17,c0040b0 <__alt_data_end+0xfc0040b0>
 c004108:	1023883a 	mov	r17,r2
 c00410c:	d8801217 	ldw	r2,72(sp)
 c004110:	dc800f17 	ldw	r18,60(sp)
 c004114:	1829883a 	mov	r20,r3
 c004118:	b8af883a 	add	r23,r23,r2
 c00411c:	d9001417 	ldw	r4,80(sp)
 c004120:	d9401517 	ldw	r5,84(sp)
 c004124:	000d883a 	mov	r6,zero
 c004128:	01cff834 	movhi	r7,16352
 c00412c:	c00aafc0 	call	c00aafc <__adddf3>
 c004130:	880d883a 	mov	r6,r17
 c004134:	a00f883a 	mov	r7,r20
 c004138:	1009883a 	mov	r4,r2
 c00413c:	180b883a 	mov	r5,r3
 c004140:	c00bedc0 	call	c00bedc <__ledf2>
 c004144:	10003e0e 	bge	r2,zero,c004240 <_dtoa_r+0x1548>
 c004148:	d9001317 	ldw	r4,76(sp)
 c00414c:	bd3fffc3 	ldbu	r20,-1(r23)
 c004150:	d9000515 	stw	r4,20(sp)
 c004154:	003d3b06 	br	c003644 <__alt_data_end+0xfc003644>
 c004158:	0027883a 	mov	r19,zero
 c00415c:	003f1b06 	br	c003dcc <__alt_data_end+0xfc003dcc>
 c004160:	d8800817 	ldw	r2,32(sp)
 c004164:	11e9c83a 	sub	r20,r2,r7
 c004168:	0005883a 	mov	r2,zero
 c00416c:	003d5406 	br	c0036c0 <__alt_data_end+0xfc0036c0>
 c004170:	00800044 	movi	r2,1
 c004174:	003dc706 	br	c003894 <__alt_data_end+0xfc003894>
 c004178:	d8c00217 	ldw	r3,8(sp)
 c00417c:	00800d84 	movi	r2,54
 c004180:	dd400a17 	ldw	r21,40(sp)
 c004184:	10c5c83a 	sub	r2,r2,r3
 c004188:	dd000817 	ldw	r20,32(sp)
 c00418c:	003d4c06 	br	c0036c0 <__alt_data_end+0xfc0036c0>
 c004190:	dc800f15 	stw	r18,60(sp)
 c004194:	dcc01015 	stw	r19,64(sp)
 c004198:	04000084 	movi	r16,2
 c00419c:	003bed06 	br	c003154 <__alt_data_end+0xfc003154>
 c0041a0:	d9000617 	ldw	r4,24(sp)
 c0041a4:	203f0d26 	beq	r4,zero,c003ddc <__alt_data_end+0xfc003ddc>
 c0041a8:	d9800c17 	ldw	r6,48(sp)
 c0041ac:	01bcab0e 	bge	zero,r6,c00345c <__alt_data_end+0xfc00345c>
 c0041b0:	d9401017 	ldw	r5,64(sp)
 c0041b4:	d9000f17 	ldw	r4,60(sp)
 c0041b8:	000d883a 	mov	r6,zero
 c0041bc:	01d00934 	movhi	r7,16420
 c0041c0:	c00bfd00 	call	c00bfd0 <__muldf3>
 c0041c4:	81000044 	addi	r4,r16,1
 c0041c8:	d8800f15 	stw	r2,60(sp)
 c0041cc:	d8c01015 	stw	r3,64(sp)
 c0041d0:	c00d1b80 	call	c00d1b8 <__floatsidf>
 c0041d4:	d9800f17 	ldw	r6,60(sp)
 c0041d8:	d9c01017 	ldw	r7,64(sp)
 c0041dc:	1009883a 	mov	r4,r2
 c0041e0:	180b883a 	mov	r5,r3
 c0041e4:	c00bfd00 	call	c00bfd0 <__muldf3>
 c0041e8:	01d00734 	movhi	r7,16412
 c0041ec:	000d883a 	mov	r6,zero
 c0041f0:	1009883a 	mov	r4,r2
 c0041f4:	180b883a 	mov	r5,r3
 c0041f8:	c00aafc0 	call	c00aafc <__adddf3>
 c0041fc:	d9c00517 	ldw	r7,20(sp)
 c004200:	047f3034 	movhi	r17,64704
 c004204:	1021883a 	mov	r16,r2
 c004208:	39ffffc4 	addi	r7,r7,-1
 c00420c:	d9c01315 	stw	r7,76(sp)
 c004210:	1c63883a 	add	r17,r3,r17
 c004214:	db000c17 	ldw	r12,48(sp)
 c004218:	003bea06 	br	c0031c4 <__alt_data_end+0xfc0031c4>
 c00421c:	dc000915 	stw	r16,36(sp)
 c004220:	003e0e06 	br	c003a5c <__alt_data_end+0xfc003a5c>
 c004224:	01000e44 	movi	r4,57
 c004228:	8825883a 	mov	r18,r17
 c00422c:	9dc00044 	addi	r23,r19,1
 c004230:	99000005 	stb	r4,0(r19)
 c004234:	a023883a 	mov	r17,r20
 c004238:	dc000915 	stw	r16,36(sp)
 c00423c:	003da406 	br	c0038d0 <__alt_data_end+0xfc0038d0>
 c004240:	d9801417 	ldw	r6,80(sp)
 c004244:	d9c01517 	ldw	r7,84(sp)
 c004248:	0009883a 	mov	r4,zero
 c00424c:	014ff834 	movhi	r5,16352
 c004250:	c00c83c0 	call	c00c83c <__subdf3>
 c004254:	880d883a 	mov	r6,r17
 c004258:	a00f883a 	mov	r7,r20
 c00425c:	1009883a 	mov	r4,r2
 c004260:	180b883a 	mov	r5,r3
 c004264:	c00be000 	call	c00be00 <__gedf2>
 c004268:	00bc7c0e 	bge	zero,r2,c00345c <__alt_data_end+0xfc00345c>
 c00426c:	01000c04 	movi	r4,48
 c004270:	00000106 	br	c004278 <_dtoa_r+0x1580>
 c004274:	102f883a 	mov	r23,r2
 c004278:	b8bfffc4 	addi	r2,r23,-1
 c00427c:	10c00007 	ldb	r3,0(r2)
 c004280:	193ffc26 	beq	r3,r4,c004274 <__alt_data_end+0xfc004274>
 c004284:	d9801317 	ldw	r6,76(sp)
 c004288:	d9800515 	stw	r6,20(sp)
 c00428c:	003c4406 	br	c0033a0 <__alt_data_end+0xfc0033a0>
 c004290:	d9801317 	ldw	r6,76(sp)
 c004294:	d9800515 	stw	r6,20(sp)
 c004298:	003cea06 	br	c003644 <__alt_data_end+0xfc003644>
 c00429c:	dd800f17 	ldw	r22,60(sp)
 c0042a0:	dcc01017 	ldw	r19,64(sp)
 c0042a4:	dc801217 	ldw	r18,72(sp)
 c0042a8:	003c6c06 	br	c00345c <__alt_data_end+0xfc00345c>
 c0042ac:	903e031e 	bne	r18,zero,c003abc <__alt_data_end+0xfc003abc>
 c0042b0:	003ebb06 	br	c003da0 <__alt_data_end+0xfc003da0>
 c0042b4:	103e6c1e 	bne	r2,zero,c003c68 <__alt_data_end+0xfc003c68>
 c0042b8:	4080004c 	andi	r2,r8,1
 c0042bc:	103e6a26 	beq	r2,zero,c003c68 <__alt_data_end+0xfc003c68>
 c0042c0:	003e6606 	br	c003c5c <__alt_data_end+0xfc003c5c>
 c0042c4:	d8c00317 	ldw	r3,12(sp)
 c0042c8:	00800084 	movi	r2,2
 c0042cc:	10c02916 	blt	r2,r3,c004374 <_dtoa_r+0x167c>
 c0042d0:	d9000c17 	ldw	r4,48(sp)
 c0042d4:	003e8806 	br	c003cf8 <__alt_data_end+0xfc003cf8>
 c0042d8:	04000084 	movi	r16,2
 c0042dc:	003b9d06 	br	c003154 <__alt_data_end+0xfc003154>
 c0042e0:	d9001317 	ldw	r4,76(sp)
 c0042e4:	d9000515 	stw	r4,20(sp)
 c0042e8:	003cd606 	br	c003644 <__alt_data_end+0xfc003644>
 c0042ec:	d8801317 	ldw	r2,76(sp)
 c0042f0:	d8800515 	stw	r2,20(sp)
 c0042f4:	003c2a06 	br	c0033a0 <__alt_data_end+0xfc0033a0>
 c0042f8:	d9800317 	ldw	r6,12(sp)
 c0042fc:	00800084 	movi	r2,2
 c004300:	11801516 	blt	r2,r6,c004358 <_dtoa_r+0x1660>
 c004304:	d9c00c17 	ldw	r7,48(sp)
 c004308:	d9c00615 	stw	r7,24(sp)
 c00430c:	003df706 	br	c003aec <__alt_data_end+0xfc003aec>
 c004310:	193d3926 	beq	r3,r4,c0037f8 <__alt_data_end+0xfc0037f8>
 c004314:	00c00f04 	movi	r3,60
 c004318:	1885c83a 	sub	r2,r3,r2
 c00431c:	003ddf06 	br	c003a9c <__alt_data_end+0xfc003a9c>
 c004320:	e009883a 	mov	r4,fp
 c004324:	e0001115 	stw	zero,68(fp)
 c004328:	000b883a 	mov	r5,zero
 c00432c:	c005d8c0 	call	c005d8c <_Balloc>
 c004330:	d8800715 	stw	r2,28(sp)
 c004334:	d8c00717 	ldw	r3,28(sp)
 c004338:	00bfffc4 	movi	r2,-1
 c00433c:	01000044 	movi	r4,1
 c004340:	d8800c15 	stw	r2,48(sp)
 c004344:	e0c01015 	stw	r3,64(fp)
 c004348:	d9000b15 	stw	r4,44(sp)
 c00434c:	d8800615 	stw	r2,24(sp)
 c004350:	d8002215 	stw	zero,136(sp)
 c004354:	003c4106 	br	c00345c <__alt_data_end+0xfc00345c>
 c004358:	d8c00c17 	ldw	r3,48(sp)
 c00435c:	d8c00615 	stw	r3,24(sp)
 c004360:	003e7006 	br	c003d24 <__alt_data_end+0xfc003d24>
 c004364:	04400044 	movi	r17,1
 c004368:	003b2006 	br	c002fec <__alt_data_end+0xfc002fec>
 c00436c:	000b883a 	mov	r5,zero
 c004370:	003b3d06 	br	c003068 <__alt_data_end+0xfc003068>
 c004374:	d8800c17 	ldw	r2,48(sp)
 c004378:	d8800615 	stw	r2,24(sp)
 c00437c:	003e6906 	br	c003d24 <__alt_data_end+0xfc003d24>

0c004380 <__sflush_r>:
 c004380:	2880030b 	ldhu	r2,12(r5)
 c004384:	defffb04 	addi	sp,sp,-20
 c004388:	dcc00315 	stw	r19,12(sp)
 c00438c:	dc400115 	stw	r17,4(sp)
 c004390:	dfc00415 	stw	ra,16(sp)
 c004394:	dc800215 	stw	r18,8(sp)
 c004398:	dc000015 	stw	r16,0(sp)
 c00439c:	10c0020c 	andi	r3,r2,8
 c0043a0:	2823883a 	mov	r17,r5
 c0043a4:	2027883a 	mov	r19,r4
 c0043a8:	1800311e 	bne	r3,zero,c004470 <__sflush_r+0xf0>
 c0043ac:	28c00117 	ldw	r3,4(r5)
 c0043b0:	10820014 	ori	r2,r2,2048
 c0043b4:	2880030d 	sth	r2,12(r5)
 c0043b8:	00c04b0e 	bge	zero,r3,c0044e8 <__sflush_r+0x168>
 c0043bc:	8a000a17 	ldw	r8,40(r17)
 c0043c0:	40002326 	beq	r8,zero,c004450 <__sflush_r+0xd0>
 c0043c4:	9c000017 	ldw	r16,0(r19)
 c0043c8:	10c4000c 	andi	r3,r2,4096
 c0043cc:	98000015 	stw	zero,0(r19)
 c0043d0:	18004826 	beq	r3,zero,c0044f4 <__sflush_r+0x174>
 c0043d4:	89801417 	ldw	r6,80(r17)
 c0043d8:	10c0010c 	andi	r3,r2,4
 c0043dc:	18000626 	beq	r3,zero,c0043f8 <__sflush_r+0x78>
 c0043e0:	88c00117 	ldw	r3,4(r17)
 c0043e4:	88800c17 	ldw	r2,48(r17)
 c0043e8:	30cdc83a 	sub	r6,r6,r3
 c0043ec:	10000226 	beq	r2,zero,c0043f8 <__sflush_r+0x78>
 c0043f0:	88800f17 	ldw	r2,60(r17)
 c0043f4:	308dc83a 	sub	r6,r6,r2
 c0043f8:	89400717 	ldw	r5,28(r17)
 c0043fc:	000f883a 	mov	r7,zero
 c004400:	9809883a 	mov	r4,r19
 c004404:	403ee83a 	callr	r8
 c004408:	00ffffc4 	movi	r3,-1
 c00440c:	10c04426 	beq	r2,r3,c004520 <__sflush_r+0x1a0>
 c004410:	88c0030b 	ldhu	r3,12(r17)
 c004414:	89000417 	ldw	r4,16(r17)
 c004418:	88000115 	stw	zero,4(r17)
 c00441c:	197dffcc 	andi	r5,r3,63487
 c004420:	8940030d 	sth	r5,12(r17)
 c004424:	89000015 	stw	r4,0(r17)
 c004428:	18c4000c 	andi	r3,r3,4096
 c00442c:	18002c1e 	bne	r3,zero,c0044e0 <__sflush_r+0x160>
 c004430:	89400c17 	ldw	r5,48(r17)
 c004434:	9c000015 	stw	r16,0(r19)
 c004438:	28000526 	beq	r5,zero,c004450 <__sflush_r+0xd0>
 c00443c:	88801004 	addi	r2,r17,64
 c004440:	28800226 	beq	r5,r2,c00444c <__sflush_r+0xcc>
 c004444:	9809883a 	mov	r4,r19
 c004448:	c004afc0 	call	c004afc <_free_r>
 c00444c:	88000c15 	stw	zero,48(r17)
 c004450:	0005883a 	mov	r2,zero
 c004454:	dfc00417 	ldw	ra,16(sp)
 c004458:	dcc00317 	ldw	r19,12(sp)
 c00445c:	dc800217 	ldw	r18,8(sp)
 c004460:	dc400117 	ldw	r17,4(sp)
 c004464:	dc000017 	ldw	r16,0(sp)
 c004468:	dec00504 	addi	sp,sp,20
 c00446c:	f800283a 	ret
 c004470:	2c800417 	ldw	r18,16(r5)
 c004474:	903ff626 	beq	r18,zero,c004450 <__alt_data_end+0xfc004450>
 c004478:	2c000017 	ldw	r16,0(r5)
 c00447c:	108000cc 	andi	r2,r2,3
 c004480:	2c800015 	stw	r18,0(r5)
 c004484:	84a1c83a 	sub	r16,r16,r18
 c004488:	1000131e 	bne	r2,zero,c0044d8 <__sflush_r+0x158>
 c00448c:	28800517 	ldw	r2,20(r5)
 c004490:	88800215 	stw	r2,8(r17)
 c004494:	04000316 	blt	zero,r16,c0044a4 <__sflush_r+0x124>
 c004498:	003fed06 	br	c004450 <__alt_data_end+0xfc004450>
 c00449c:	90a5883a 	add	r18,r18,r2
 c0044a0:	043feb0e 	bge	zero,r16,c004450 <__alt_data_end+0xfc004450>
 c0044a4:	88800917 	ldw	r2,36(r17)
 c0044a8:	89400717 	ldw	r5,28(r17)
 c0044ac:	800f883a 	mov	r7,r16
 c0044b0:	900d883a 	mov	r6,r18
 c0044b4:	9809883a 	mov	r4,r19
 c0044b8:	103ee83a 	callr	r2
 c0044bc:	80a1c83a 	sub	r16,r16,r2
 c0044c0:	00bff616 	blt	zero,r2,c00449c <__alt_data_end+0xfc00449c>
 c0044c4:	88c0030b 	ldhu	r3,12(r17)
 c0044c8:	00bfffc4 	movi	r2,-1
 c0044cc:	18c01014 	ori	r3,r3,64
 c0044d0:	88c0030d 	sth	r3,12(r17)
 c0044d4:	003fdf06 	br	c004454 <__alt_data_end+0xfc004454>
 c0044d8:	0005883a 	mov	r2,zero
 c0044dc:	003fec06 	br	c004490 <__alt_data_end+0xfc004490>
 c0044e0:	88801415 	stw	r2,80(r17)
 c0044e4:	003fd206 	br	c004430 <__alt_data_end+0xfc004430>
 c0044e8:	28c00f17 	ldw	r3,60(r5)
 c0044ec:	00ffb316 	blt	zero,r3,c0043bc <__alt_data_end+0xfc0043bc>
 c0044f0:	003fd706 	br	c004450 <__alt_data_end+0xfc004450>
 c0044f4:	89400717 	ldw	r5,28(r17)
 c0044f8:	000d883a 	mov	r6,zero
 c0044fc:	01c00044 	movi	r7,1
 c004500:	9809883a 	mov	r4,r19
 c004504:	403ee83a 	callr	r8
 c004508:	100d883a 	mov	r6,r2
 c00450c:	00bfffc4 	movi	r2,-1
 c004510:	30801426 	beq	r6,r2,c004564 <__sflush_r+0x1e4>
 c004514:	8880030b 	ldhu	r2,12(r17)
 c004518:	8a000a17 	ldw	r8,40(r17)
 c00451c:	003fae06 	br	c0043d8 <__alt_data_end+0xfc0043d8>
 c004520:	98c00017 	ldw	r3,0(r19)
 c004524:	183fba26 	beq	r3,zero,c004410 <__alt_data_end+0xfc004410>
 c004528:	01000744 	movi	r4,29
 c00452c:	19000626 	beq	r3,r4,c004548 <__sflush_r+0x1c8>
 c004530:	01000584 	movi	r4,22
 c004534:	19000426 	beq	r3,r4,c004548 <__sflush_r+0x1c8>
 c004538:	88c0030b 	ldhu	r3,12(r17)
 c00453c:	18c01014 	ori	r3,r3,64
 c004540:	88c0030d 	sth	r3,12(r17)
 c004544:	003fc306 	br	c004454 <__alt_data_end+0xfc004454>
 c004548:	8880030b 	ldhu	r2,12(r17)
 c00454c:	88c00417 	ldw	r3,16(r17)
 c004550:	88000115 	stw	zero,4(r17)
 c004554:	10bdffcc 	andi	r2,r2,63487
 c004558:	8880030d 	sth	r2,12(r17)
 c00455c:	88c00015 	stw	r3,0(r17)
 c004560:	003fb306 	br	c004430 <__alt_data_end+0xfc004430>
 c004564:	98800017 	ldw	r2,0(r19)
 c004568:	103fea26 	beq	r2,zero,c004514 <__alt_data_end+0xfc004514>
 c00456c:	00c00744 	movi	r3,29
 c004570:	10c00226 	beq	r2,r3,c00457c <__sflush_r+0x1fc>
 c004574:	00c00584 	movi	r3,22
 c004578:	10c0031e 	bne	r2,r3,c004588 <__sflush_r+0x208>
 c00457c:	9c000015 	stw	r16,0(r19)
 c004580:	0005883a 	mov	r2,zero
 c004584:	003fb306 	br	c004454 <__alt_data_end+0xfc004454>
 c004588:	88c0030b 	ldhu	r3,12(r17)
 c00458c:	3005883a 	mov	r2,r6
 c004590:	18c01014 	ori	r3,r3,64
 c004594:	88c0030d 	sth	r3,12(r17)
 c004598:	003fae06 	br	c004454 <__alt_data_end+0xfc004454>

0c00459c <_fflush_r>:
 c00459c:	defffd04 	addi	sp,sp,-12
 c0045a0:	dc000115 	stw	r16,4(sp)
 c0045a4:	dfc00215 	stw	ra,8(sp)
 c0045a8:	2021883a 	mov	r16,r4
 c0045ac:	20000226 	beq	r4,zero,c0045b8 <_fflush_r+0x1c>
 c0045b0:	20800e17 	ldw	r2,56(r4)
 c0045b4:	10000c26 	beq	r2,zero,c0045e8 <_fflush_r+0x4c>
 c0045b8:	2880030f 	ldh	r2,12(r5)
 c0045bc:	1000051e 	bne	r2,zero,c0045d4 <_fflush_r+0x38>
 c0045c0:	0005883a 	mov	r2,zero
 c0045c4:	dfc00217 	ldw	ra,8(sp)
 c0045c8:	dc000117 	ldw	r16,4(sp)
 c0045cc:	dec00304 	addi	sp,sp,12
 c0045d0:	f800283a 	ret
 c0045d4:	8009883a 	mov	r4,r16
 c0045d8:	dfc00217 	ldw	ra,8(sp)
 c0045dc:	dc000117 	ldw	r16,4(sp)
 c0045e0:	dec00304 	addi	sp,sp,12
 c0045e4:	c0043801 	jmpi	c004380 <__sflush_r>
 c0045e8:	d9400015 	stw	r5,0(sp)
 c0045ec:	c0049880 	call	c004988 <__sinit>
 c0045f0:	d9400017 	ldw	r5,0(sp)
 c0045f4:	003ff006 	br	c0045b8 <__alt_data_end+0xfc0045b8>

0c0045f8 <fflush>:
 c0045f8:	20000526 	beq	r4,zero,c004610 <fflush+0x18>
 c0045fc:	00830074 	movhi	r2,3073
 c004600:	10865604 	addi	r2,r2,6488
 c004604:	200b883a 	mov	r5,r4
 c004608:	11000017 	ldw	r4,0(r2)
 c00460c:	c00459c1 	jmpi	c00459c <_fflush_r>
 c004610:	00830074 	movhi	r2,3073
 c004614:	10865504 	addi	r2,r2,6484
 c004618:	11000017 	ldw	r4,0(r2)
 c00461c:	01430034 	movhi	r5,3072
 c004620:	29516704 	addi	r5,r5,17820
 c004624:	c004ed01 	jmpi	c004ed0 <_fwalk_reent>

0c004628 <__fp_unlock>:
 c004628:	0005883a 	mov	r2,zero
 c00462c:	f800283a 	ret

0c004630 <_cleanup_r>:
 c004630:	01430074 	movhi	r5,3073
 c004634:	29629104 	addi	r5,r5,-30140
 c004638:	c004ed01 	jmpi	c004ed0 <_fwalk_reent>

0c00463c <__sinit.part.1>:
 c00463c:	defff704 	addi	sp,sp,-36
 c004640:	00c30034 	movhi	r3,3072
 c004644:	dfc00815 	stw	ra,32(sp)
 c004648:	ddc00715 	stw	r23,28(sp)
 c00464c:	dd800615 	stw	r22,24(sp)
 c004650:	dd400515 	stw	r21,20(sp)
 c004654:	dd000415 	stw	r20,16(sp)
 c004658:	dcc00315 	stw	r19,12(sp)
 c00465c:	dc800215 	stw	r18,8(sp)
 c004660:	dc400115 	stw	r17,4(sp)
 c004664:	dc000015 	stw	r16,0(sp)
 c004668:	18d18c04 	addi	r3,r3,17968
 c00466c:	24000117 	ldw	r16,4(r4)
 c004670:	20c00f15 	stw	r3,60(r4)
 c004674:	2080bb04 	addi	r2,r4,748
 c004678:	00c000c4 	movi	r3,3
 c00467c:	20c0b915 	stw	r3,740(r4)
 c004680:	2080ba15 	stw	r2,744(r4)
 c004684:	2000b815 	stw	zero,736(r4)
 c004688:	05c00204 	movi	r23,8
 c00468c:	00800104 	movi	r2,4
 c004690:	2025883a 	mov	r18,r4
 c004694:	b80d883a 	mov	r6,r23
 c004698:	81001704 	addi	r4,r16,92
 c00469c:	000b883a 	mov	r5,zero
 c0046a0:	80000015 	stw	zero,0(r16)
 c0046a4:	80000115 	stw	zero,4(r16)
 c0046a8:	80000215 	stw	zero,8(r16)
 c0046ac:	8080030d 	sth	r2,12(r16)
 c0046b0:	80001915 	stw	zero,100(r16)
 c0046b4:	8000038d 	sth	zero,14(r16)
 c0046b8:	80000415 	stw	zero,16(r16)
 c0046bc:	80000515 	stw	zero,20(r16)
 c0046c0:	80000615 	stw	zero,24(r16)
 c0046c4:	c005c640 	call	c005c64 <memset>
 c0046c8:	05830034 	movhi	r22,3072
 c0046cc:	94400217 	ldw	r17,8(r18)
 c0046d0:	05430034 	movhi	r21,3072
 c0046d4:	05030034 	movhi	r20,3072
 c0046d8:	04c30034 	movhi	r19,3072
 c0046dc:	b59bc304 	addi	r22,r22,28428
 c0046e0:	ad5bda04 	addi	r21,r21,28520
 c0046e4:	a51bf904 	addi	r20,r20,28644
 c0046e8:	9cdc1004 	addi	r19,r19,28736
 c0046ec:	85800815 	stw	r22,32(r16)
 c0046f0:	85400915 	stw	r21,36(r16)
 c0046f4:	85000a15 	stw	r20,40(r16)
 c0046f8:	84c00b15 	stw	r19,44(r16)
 c0046fc:	84000715 	stw	r16,28(r16)
 c004700:	00800284 	movi	r2,10
 c004704:	8880030d 	sth	r2,12(r17)
 c004708:	00800044 	movi	r2,1
 c00470c:	b80d883a 	mov	r6,r23
 c004710:	89001704 	addi	r4,r17,92
 c004714:	000b883a 	mov	r5,zero
 c004718:	88000015 	stw	zero,0(r17)
 c00471c:	88000115 	stw	zero,4(r17)
 c004720:	88000215 	stw	zero,8(r17)
 c004724:	88001915 	stw	zero,100(r17)
 c004728:	8880038d 	sth	r2,14(r17)
 c00472c:	88000415 	stw	zero,16(r17)
 c004730:	88000515 	stw	zero,20(r17)
 c004734:	88000615 	stw	zero,24(r17)
 c004738:	c005c640 	call	c005c64 <memset>
 c00473c:	94000317 	ldw	r16,12(r18)
 c004740:	00800484 	movi	r2,18
 c004744:	8c400715 	stw	r17,28(r17)
 c004748:	8d800815 	stw	r22,32(r17)
 c00474c:	8d400915 	stw	r21,36(r17)
 c004750:	8d000a15 	stw	r20,40(r17)
 c004754:	8cc00b15 	stw	r19,44(r17)
 c004758:	8080030d 	sth	r2,12(r16)
 c00475c:	00800084 	movi	r2,2
 c004760:	80000015 	stw	zero,0(r16)
 c004764:	80000115 	stw	zero,4(r16)
 c004768:	80000215 	stw	zero,8(r16)
 c00476c:	80001915 	stw	zero,100(r16)
 c004770:	8080038d 	sth	r2,14(r16)
 c004774:	80000415 	stw	zero,16(r16)
 c004778:	80000515 	stw	zero,20(r16)
 c00477c:	80000615 	stw	zero,24(r16)
 c004780:	b80d883a 	mov	r6,r23
 c004784:	000b883a 	mov	r5,zero
 c004788:	81001704 	addi	r4,r16,92
 c00478c:	c005c640 	call	c005c64 <memset>
 c004790:	00800044 	movi	r2,1
 c004794:	84000715 	stw	r16,28(r16)
 c004798:	85800815 	stw	r22,32(r16)
 c00479c:	85400915 	stw	r21,36(r16)
 c0047a0:	85000a15 	stw	r20,40(r16)
 c0047a4:	84c00b15 	stw	r19,44(r16)
 c0047a8:	90800e15 	stw	r2,56(r18)
 c0047ac:	dfc00817 	ldw	ra,32(sp)
 c0047b0:	ddc00717 	ldw	r23,28(sp)
 c0047b4:	dd800617 	ldw	r22,24(sp)
 c0047b8:	dd400517 	ldw	r21,20(sp)
 c0047bc:	dd000417 	ldw	r20,16(sp)
 c0047c0:	dcc00317 	ldw	r19,12(sp)
 c0047c4:	dc800217 	ldw	r18,8(sp)
 c0047c8:	dc400117 	ldw	r17,4(sp)
 c0047cc:	dc000017 	ldw	r16,0(sp)
 c0047d0:	dec00904 	addi	sp,sp,36
 c0047d4:	f800283a 	ret

0c0047d8 <__fp_lock>:
 c0047d8:	0005883a 	mov	r2,zero
 c0047dc:	f800283a 	ret

0c0047e0 <__sfmoreglue>:
 c0047e0:	defffc04 	addi	sp,sp,-16
 c0047e4:	dc800215 	stw	r18,8(sp)
 c0047e8:	2825883a 	mov	r18,r5
 c0047ec:	dc000015 	stw	r16,0(sp)
 c0047f0:	01401a04 	movi	r5,104
 c0047f4:	2021883a 	mov	r16,r4
 c0047f8:	913fffc4 	addi	r4,r18,-1
 c0047fc:	dfc00315 	stw	ra,12(sp)
 c004800:	dc400115 	stw	r17,4(sp)
 c004804:	c0005340 	call	c000534 <__mulsi3>
 c004808:	8009883a 	mov	r4,r16
 c00480c:	11401d04 	addi	r5,r2,116
 c004810:	1023883a 	mov	r17,r2
 c004814:	c00522c0 	call	c00522c <_malloc_r>
 c004818:	1021883a 	mov	r16,r2
 c00481c:	10000726 	beq	r2,zero,c00483c <__sfmoreglue+0x5c>
 c004820:	11000304 	addi	r4,r2,12
 c004824:	10000015 	stw	zero,0(r2)
 c004828:	14800115 	stw	r18,4(r2)
 c00482c:	11000215 	stw	r4,8(r2)
 c004830:	89801a04 	addi	r6,r17,104
 c004834:	000b883a 	mov	r5,zero
 c004838:	c005c640 	call	c005c64 <memset>
 c00483c:	8005883a 	mov	r2,r16
 c004840:	dfc00317 	ldw	ra,12(sp)
 c004844:	dc800217 	ldw	r18,8(sp)
 c004848:	dc400117 	ldw	r17,4(sp)
 c00484c:	dc000017 	ldw	r16,0(sp)
 c004850:	dec00404 	addi	sp,sp,16
 c004854:	f800283a 	ret

0c004858 <__sfp>:
 c004858:	defffb04 	addi	sp,sp,-20
 c00485c:	dc000015 	stw	r16,0(sp)
 c004860:	04030074 	movhi	r16,3073
 c004864:	84065504 	addi	r16,r16,6484
 c004868:	dcc00315 	stw	r19,12(sp)
 c00486c:	2027883a 	mov	r19,r4
 c004870:	81000017 	ldw	r4,0(r16)
 c004874:	dfc00415 	stw	ra,16(sp)
 c004878:	dc800215 	stw	r18,8(sp)
 c00487c:	20800e17 	ldw	r2,56(r4)
 c004880:	dc400115 	stw	r17,4(sp)
 c004884:	1000021e 	bne	r2,zero,c004890 <__sfp+0x38>
 c004888:	c00463c0 	call	c00463c <__sinit.part.1>
 c00488c:	81000017 	ldw	r4,0(r16)
 c004890:	2480b804 	addi	r18,r4,736
 c004894:	047fffc4 	movi	r17,-1
 c004898:	91000117 	ldw	r4,4(r18)
 c00489c:	94000217 	ldw	r16,8(r18)
 c0048a0:	213fffc4 	addi	r4,r4,-1
 c0048a4:	20000a16 	blt	r4,zero,c0048d0 <__sfp+0x78>
 c0048a8:	8080030f 	ldh	r2,12(r16)
 c0048ac:	10000c26 	beq	r2,zero,c0048e0 <__sfp+0x88>
 c0048b0:	80c01d04 	addi	r3,r16,116
 c0048b4:	00000206 	br	c0048c0 <__sfp+0x68>
 c0048b8:	18bfe60f 	ldh	r2,-104(r3)
 c0048bc:	10000826 	beq	r2,zero,c0048e0 <__sfp+0x88>
 c0048c0:	213fffc4 	addi	r4,r4,-1
 c0048c4:	1c3ffd04 	addi	r16,r3,-12
 c0048c8:	18c01a04 	addi	r3,r3,104
 c0048cc:	247ffa1e 	bne	r4,r17,c0048b8 <__alt_data_end+0xfc0048b8>
 c0048d0:	90800017 	ldw	r2,0(r18)
 c0048d4:	10001d26 	beq	r2,zero,c00494c <__sfp+0xf4>
 c0048d8:	1025883a 	mov	r18,r2
 c0048dc:	003fee06 	br	c004898 <__alt_data_end+0xfc004898>
 c0048e0:	00bfffc4 	movi	r2,-1
 c0048e4:	8080038d 	sth	r2,14(r16)
 c0048e8:	00800044 	movi	r2,1
 c0048ec:	8080030d 	sth	r2,12(r16)
 c0048f0:	80001915 	stw	zero,100(r16)
 c0048f4:	80000015 	stw	zero,0(r16)
 c0048f8:	80000215 	stw	zero,8(r16)
 c0048fc:	80000115 	stw	zero,4(r16)
 c004900:	80000415 	stw	zero,16(r16)
 c004904:	80000515 	stw	zero,20(r16)
 c004908:	80000615 	stw	zero,24(r16)
 c00490c:	01800204 	movi	r6,8
 c004910:	000b883a 	mov	r5,zero
 c004914:	81001704 	addi	r4,r16,92
 c004918:	c005c640 	call	c005c64 <memset>
 c00491c:	8005883a 	mov	r2,r16
 c004920:	80000c15 	stw	zero,48(r16)
 c004924:	80000d15 	stw	zero,52(r16)
 c004928:	80001115 	stw	zero,68(r16)
 c00492c:	80001215 	stw	zero,72(r16)
 c004930:	dfc00417 	ldw	ra,16(sp)
 c004934:	dcc00317 	ldw	r19,12(sp)
 c004938:	dc800217 	ldw	r18,8(sp)
 c00493c:	dc400117 	ldw	r17,4(sp)
 c004940:	dc000017 	ldw	r16,0(sp)
 c004944:	dec00504 	addi	sp,sp,20
 c004948:	f800283a 	ret
 c00494c:	01400104 	movi	r5,4
 c004950:	9809883a 	mov	r4,r19
 c004954:	c0047e00 	call	c0047e0 <__sfmoreglue>
 c004958:	90800015 	stw	r2,0(r18)
 c00495c:	103fde1e 	bne	r2,zero,c0048d8 <__alt_data_end+0xfc0048d8>
 c004960:	00800304 	movi	r2,12
 c004964:	98800015 	stw	r2,0(r19)
 c004968:	0005883a 	mov	r2,zero
 c00496c:	003ff006 	br	c004930 <__alt_data_end+0xfc004930>

0c004970 <_cleanup>:
 c004970:	00830074 	movhi	r2,3073
 c004974:	10865504 	addi	r2,r2,6484
 c004978:	11000017 	ldw	r4,0(r2)
 c00497c:	01430074 	movhi	r5,3073
 c004980:	29629104 	addi	r5,r5,-30140
 c004984:	c004ed01 	jmpi	c004ed0 <_fwalk_reent>

0c004988 <__sinit>:
 c004988:	20800e17 	ldw	r2,56(r4)
 c00498c:	10000126 	beq	r2,zero,c004994 <__sinit+0xc>
 c004990:	f800283a 	ret
 c004994:	c00463c1 	jmpi	c00463c <__sinit.part.1>

0c004998 <__sfp_lock_acquire>:
 c004998:	f800283a 	ret

0c00499c <__sfp_lock_release>:
 c00499c:	f800283a 	ret

0c0049a0 <__sinit_lock_acquire>:
 c0049a0:	f800283a 	ret

0c0049a4 <__sinit_lock_release>:
 c0049a4:	f800283a 	ret

0c0049a8 <__fp_lock_all>:
 c0049a8:	00830074 	movhi	r2,3073
 c0049ac:	10865604 	addi	r2,r2,6488
 c0049b0:	11000017 	ldw	r4,0(r2)
 c0049b4:	01430034 	movhi	r5,3072
 c0049b8:	2951f604 	addi	r5,r5,18392
 c0049bc:	c004e0c1 	jmpi	c004e0c <_fwalk>

0c0049c0 <__fp_unlock_all>:
 c0049c0:	00830074 	movhi	r2,3073
 c0049c4:	10865604 	addi	r2,r2,6488
 c0049c8:	11000017 	ldw	r4,0(r2)
 c0049cc:	01430034 	movhi	r5,3072
 c0049d0:	29518a04 	addi	r5,r5,17960
 c0049d4:	c004e0c1 	jmpi	c004e0c <_fwalk>

0c0049d8 <_malloc_trim_r>:
 c0049d8:	defffb04 	addi	sp,sp,-20
 c0049dc:	dcc00315 	stw	r19,12(sp)
 c0049e0:	04c30074 	movhi	r19,3073
 c0049e4:	dc800215 	stw	r18,8(sp)
 c0049e8:	dc400115 	stw	r17,4(sp)
 c0049ec:	dc000015 	stw	r16,0(sp)
 c0049f0:	dfc00415 	stw	ra,16(sp)
 c0049f4:	2821883a 	mov	r16,r5
 c0049f8:	9cc0cf04 	addi	r19,r19,828
 c0049fc:	2025883a 	mov	r18,r4
 c004a00:	c00d93c0 	call	c00d93c <__malloc_lock>
 c004a04:	98800217 	ldw	r2,8(r19)
 c004a08:	14400117 	ldw	r17,4(r2)
 c004a0c:	00bfff04 	movi	r2,-4
 c004a10:	88a2703a 	and	r17,r17,r2
 c004a14:	8c21c83a 	sub	r16,r17,r16
 c004a18:	8403fbc4 	addi	r16,r16,4079
 c004a1c:	8020d33a 	srli	r16,r16,12
 c004a20:	0083ffc4 	movi	r2,4095
 c004a24:	843fffc4 	addi	r16,r16,-1
 c004a28:	8020933a 	slli	r16,r16,12
 c004a2c:	1400060e 	bge	r2,r16,c004a48 <_malloc_trim_r+0x70>
 c004a30:	000b883a 	mov	r5,zero
 c004a34:	9009883a 	mov	r4,r18
 c004a38:	c006eb80 	call	c006eb8 <_sbrk_r>
 c004a3c:	98c00217 	ldw	r3,8(r19)
 c004a40:	1c47883a 	add	r3,r3,r17
 c004a44:	10c00a26 	beq	r2,r3,c004a70 <_malloc_trim_r+0x98>
 c004a48:	9009883a 	mov	r4,r18
 c004a4c:	c00d9600 	call	c00d960 <__malloc_unlock>
 c004a50:	0005883a 	mov	r2,zero
 c004a54:	dfc00417 	ldw	ra,16(sp)
 c004a58:	dcc00317 	ldw	r19,12(sp)
 c004a5c:	dc800217 	ldw	r18,8(sp)
 c004a60:	dc400117 	ldw	r17,4(sp)
 c004a64:	dc000017 	ldw	r16,0(sp)
 c004a68:	dec00504 	addi	sp,sp,20
 c004a6c:	f800283a 	ret
 c004a70:	040bc83a 	sub	r5,zero,r16
 c004a74:	9009883a 	mov	r4,r18
 c004a78:	c006eb80 	call	c006eb8 <_sbrk_r>
 c004a7c:	00ffffc4 	movi	r3,-1
 c004a80:	10c00d26 	beq	r2,r3,c004ab8 <_malloc_trim_r+0xe0>
 c004a84:	00c30074 	movhi	r3,3073
 c004a88:	18cd3004 	addi	r3,r3,13504
 c004a8c:	18800017 	ldw	r2,0(r3)
 c004a90:	99000217 	ldw	r4,8(r19)
 c004a94:	8c23c83a 	sub	r17,r17,r16
 c004a98:	8c400054 	ori	r17,r17,1
 c004a9c:	1421c83a 	sub	r16,r2,r16
 c004aa0:	24400115 	stw	r17,4(r4)
 c004aa4:	9009883a 	mov	r4,r18
 c004aa8:	1c000015 	stw	r16,0(r3)
 c004aac:	c00d9600 	call	c00d960 <__malloc_unlock>
 c004ab0:	00800044 	movi	r2,1
 c004ab4:	003fe706 	br	c004a54 <__alt_data_end+0xfc004a54>
 c004ab8:	000b883a 	mov	r5,zero
 c004abc:	9009883a 	mov	r4,r18
 c004ac0:	c006eb80 	call	c006eb8 <_sbrk_r>
 c004ac4:	99000217 	ldw	r4,8(r19)
 c004ac8:	014003c4 	movi	r5,15
 c004acc:	1107c83a 	sub	r3,r2,r4
 c004ad0:	28ffdd0e 	bge	r5,r3,c004a48 <__alt_data_end+0xfc004a48>
 c004ad4:	01430074 	movhi	r5,3073
 c004ad8:	29465804 	addi	r5,r5,6496
 c004adc:	29400017 	ldw	r5,0(r5)
 c004ae0:	18c00054 	ori	r3,r3,1
 c004ae4:	20c00115 	stw	r3,4(r4)
 c004ae8:	00c30074 	movhi	r3,3073
 c004aec:	1145c83a 	sub	r2,r2,r5
 c004af0:	18cd3004 	addi	r3,r3,13504
 c004af4:	18800015 	stw	r2,0(r3)
 c004af8:	003fd306 	br	c004a48 <__alt_data_end+0xfc004a48>

0c004afc <_free_r>:
 c004afc:	28004126 	beq	r5,zero,c004c04 <_free_r+0x108>
 c004b00:	defffd04 	addi	sp,sp,-12
 c004b04:	dc400115 	stw	r17,4(sp)
 c004b08:	dc000015 	stw	r16,0(sp)
 c004b0c:	2023883a 	mov	r17,r4
 c004b10:	2821883a 	mov	r16,r5
 c004b14:	dfc00215 	stw	ra,8(sp)
 c004b18:	c00d93c0 	call	c00d93c <__malloc_lock>
 c004b1c:	81ffff17 	ldw	r7,-4(r16)
 c004b20:	00bfff84 	movi	r2,-2
 c004b24:	01030074 	movhi	r4,3073
 c004b28:	81bffe04 	addi	r6,r16,-8
 c004b2c:	3884703a 	and	r2,r7,r2
 c004b30:	2100cf04 	addi	r4,r4,828
 c004b34:	308b883a 	add	r5,r6,r2
 c004b38:	2a400117 	ldw	r9,4(r5)
 c004b3c:	22000217 	ldw	r8,8(r4)
 c004b40:	00ffff04 	movi	r3,-4
 c004b44:	48c6703a 	and	r3,r9,r3
 c004b48:	2a005726 	beq	r5,r8,c004ca8 <_free_r+0x1ac>
 c004b4c:	28c00115 	stw	r3,4(r5)
 c004b50:	39c0004c 	andi	r7,r7,1
 c004b54:	3800091e 	bne	r7,zero,c004b7c <_free_r+0x80>
 c004b58:	823ffe17 	ldw	r8,-8(r16)
 c004b5c:	22400204 	addi	r9,r4,8
 c004b60:	320dc83a 	sub	r6,r6,r8
 c004b64:	31c00217 	ldw	r7,8(r6)
 c004b68:	1205883a 	add	r2,r2,r8
 c004b6c:	3a406526 	beq	r7,r9,c004d04 <_free_r+0x208>
 c004b70:	32000317 	ldw	r8,12(r6)
 c004b74:	3a000315 	stw	r8,12(r7)
 c004b78:	41c00215 	stw	r7,8(r8)
 c004b7c:	28cf883a 	add	r7,r5,r3
 c004b80:	39c00117 	ldw	r7,4(r7)
 c004b84:	39c0004c 	andi	r7,r7,1
 c004b88:	38003a26 	beq	r7,zero,c004c74 <_free_r+0x178>
 c004b8c:	10c00054 	ori	r3,r2,1
 c004b90:	30c00115 	stw	r3,4(r6)
 c004b94:	3087883a 	add	r3,r6,r2
 c004b98:	18800015 	stw	r2,0(r3)
 c004b9c:	00c07fc4 	movi	r3,511
 c004ba0:	18801936 	bltu	r3,r2,c004c08 <_free_r+0x10c>
 c004ba4:	1004d0fa 	srli	r2,r2,3
 c004ba8:	01c00044 	movi	r7,1
 c004bac:	21400117 	ldw	r5,4(r4)
 c004bb0:	10c00044 	addi	r3,r2,1
 c004bb4:	18c7883a 	add	r3,r3,r3
 c004bb8:	1005d0ba 	srai	r2,r2,2
 c004bbc:	18c7883a 	add	r3,r3,r3
 c004bc0:	18c7883a 	add	r3,r3,r3
 c004bc4:	1907883a 	add	r3,r3,r4
 c004bc8:	3884983a 	sll	r2,r7,r2
 c004bcc:	19c00017 	ldw	r7,0(r3)
 c004bd0:	1a3ffe04 	addi	r8,r3,-8
 c004bd4:	1144b03a 	or	r2,r2,r5
 c004bd8:	32000315 	stw	r8,12(r6)
 c004bdc:	31c00215 	stw	r7,8(r6)
 c004be0:	20800115 	stw	r2,4(r4)
 c004be4:	19800015 	stw	r6,0(r3)
 c004be8:	39800315 	stw	r6,12(r7)
 c004bec:	8809883a 	mov	r4,r17
 c004bf0:	dfc00217 	ldw	ra,8(sp)
 c004bf4:	dc400117 	ldw	r17,4(sp)
 c004bf8:	dc000017 	ldw	r16,0(sp)
 c004bfc:	dec00304 	addi	sp,sp,12
 c004c00:	c00d9601 	jmpi	c00d960 <__malloc_unlock>
 c004c04:	f800283a 	ret
 c004c08:	100ad27a 	srli	r5,r2,9
 c004c0c:	00c00104 	movi	r3,4
 c004c10:	19404a36 	bltu	r3,r5,c004d3c <_free_r+0x240>
 c004c14:	100ad1ba 	srli	r5,r2,6
 c004c18:	28c00e44 	addi	r3,r5,57
 c004c1c:	18c7883a 	add	r3,r3,r3
 c004c20:	29400e04 	addi	r5,r5,56
 c004c24:	18c7883a 	add	r3,r3,r3
 c004c28:	18c7883a 	add	r3,r3,r3
 c004c2c:	1909883a 	add	r4,r3,r4
 c004c30:	20c00017 	ldw	r3,0(r4)
 c004c34:	01c30074 	movhi	r7,3073
 c004c38:	213ffe04 	addi	r4,r4,-8
 c004c3c:	39c0cf04 	addi	r7,r7,828
 c004c40:	20c04426 	beq	r4,r3,c004d54 <_free_r+0x258>
 c004c44:	01ffff04 	movi	r7,-4
 c004c48:	19400117 	ldw	r5,4(r3)
 c004c4c:	29ca703a 	and	r5,r5,r7
 c004c50:	1140022e 	bgeu	r2,r5,c004c5c <_free_r+0x160>
 c004c54:	18c00217 	ldw	r3,8(r3)
 c004c58:	20fffb1e 	bne	r4,r3,c004c48 <__alt_data_end+0xfc004c48>
 c004c5c:	19000317 	ldw	r4,12(r3)
 c004c60:	31000315 	stw	r4,12(r6)
 c004c64:	30c00215 	stw	r3,8(r6)
 c004c68:	21800215 	stw	r6,8(r4)
 c004c6c:	19800315 	stw	r6,12(r3)
 c004c70:	003fde06 	br	c004bec <__alt_data_end+0xfc004bec>
 c004c74:	29c00217 	ldw	r7,8(r5)
 c004c78:	10c5883a 	add	r2,r2,r3
 c004c7c:	00c30074 	movhi	r3,3073
 c004c80:	18c0d104 	addi	r3,r3,836
 c004c84:	38c03b26 	beq	r7,r3,c004d74 <_free_r+0x278>
 c004c88:	2a000317 	ldw	r8,12(r5)
 c004c8c:	11400054 	ori	r5,r2,1
 c004c90:	3087883a 	add	r3,r6,r2
 c004c94:	3a000315 	stw	r8,12(r7)
 c004c98:	41c00215 	stw	r7,8(r8)
 c004c9c:	31400115 	stw	r5,4(r6)
 c004ca0:	18800015 	stw	r2,0(r3)
 c004ca4:	003fbd06 	br	c004b9c <__alt_data_end+0xfc004b9c>
 c004ca8:	39c0004c 	andi	r7,r7,1
 c004cac:	10c5883a 	add	r2,r2,r3
 c004cb0:	3800071e 	bne	r7,zero,c004cd0 <_free_r+0x1d4>
 c004cb4:	81fffe17 	ldw	r7,-8(r16)
 c004cb8:	31cdc83a 	sub	r6,r6,r7
 c004cbc:	30c00317 	ldw	r3,12(r6)
 c004cc0:	31400217 	ldw	r5,8(r6)
 c004cc4:	11c5883a 	add	r2,r2,r7
 c004cc8:	28c00315 	stw	r3,12(r5)
 c004ccc:	19400215 	stw	r5,8(r3)
 c004cd0:	10c00054 	ori	r3,r2,1
 c004cd4:	30c00115 	stw	r3,4(r6)
 c004cd8:	00c30074 	movhi	r3,3073
 c004cdc:	18c65904 	addi	r3,r3,6500
 c004ce0:	18c00017 	ldw	r3,0(r3)
 c004ce4:	21800215 	stw	r6,8(r4)
 c004ce8:	10ffc036 	bltu	r2,r3,c004bec <__alt_data_end+0xfc004bec>
 c004cec:	00830074 	movhi	r2,3073
 c004cf0:	108d2704 	addi	r2,r2,13468
 c004cf4:	11400017 	ldw	r5,0(r2)
 c004cf8:	8809883a 	mov	r4,r17
 c004cfc:	c0049d80 	call	c0049d8 <_malloc_trim_r>
 c004d00:	003fba06 	br	c004bec <__alt_data_end+0xfc004bec>
 c004d04:	28c9883a 	add	r4,r5,r3
 c004d08:	21000117 	ldw	r4,4(r4)
 c004d0c:	2100004c 	andi	r4,r4,1
 c004d10:	2000391e 	bne	r4,zero,c004df8 <_free_r+0x2fc>
 c004d14:	29c00217 	ldw	r7,8(r5)
 c004d18:	29000317 	ldw	r4,12(r5)
 c004d1c:	1885883a 	add	r2,r3,r2
 c004d20:	10c00054 	ori	r3,r2,1
 c004d24:	39000315 	stw	r4,12(r7)
 c004d28:	21c00215 	stw	r7,8(r4)
 c004d2c:	30c00115 	stw	r3,4(r6)
 c004d30:	308d883a 	add	r6,r6,r2
 c004d34:	30800015 	stw	r2,0(r6)
 c004d38:	003fac06 	br	c004bec <__alt_data_end+0xfc004bec>
 c004d3c:	00c00504 	movi	r3,20
 c004d40:	19401536 	bltu	r3,r5,c004d98 <_free_r+0x29c>
 c004d44:	28c01704 	addi	r3,r5,92
 c004d48:	18c7883a 	add	r3,r3,r3
 c004d4c:	294016c4 	addi	r5,r5,91
 c004d50:	003fb406 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004d54:	280bd0ba 	srai	r5,r5,2
 c004d58:	00c00044 	movi	r3,1
 c004d5c:	38800117 	ldw	r2,4(r7)
 c004d60:	194a983a 	sll	r5,r3,r5
 c004d64:	2007883a 	mov	r3,r4
 c004d68:	2884b03a 	or	r2,r5,r2
 c004d6c:	38800115 	stw	r2,4(r7)
 c004d70:	003fbb06 	br	c004c60 <__alt_data_end+0xfc004c60>
 c004d74:	21800515 	stw	r6,20(r4)
 c004d78:	21800415 	stw	r6,16(r4)
 c004d7c:	10c00054 	ori	r3,r2,1
 c004d80:	31c00315 	stw	r7,12(r6)
 c004d84:	31c00215 	stw	r7,8(r6)
 c004d88:	30c00115 	stw	r3,4(r6)
 c004d8c:	308d883a 	add	r6,r6,r2
 c004d90:	30800015 	stw	r2,0(r6)
 c004d94:	003f9506 	br	c004bec <__alt_data_end+0xfc004bec>
 c004d98:	00c01504 	movi	r3,84
 c004d9c:	19400536 	bltu	r3,r5,c004db4 <_free_r+0x2b8>
 c004da0:	100ad33a 	srli	r5,r2,12
 c004da4:	28c01bc4 	addi	r3,r5,111
 c004da8:	18c7883a 	add	r3,r3,r3
 c004dac:	29401b84 	addi	r5,r5,110
 c004db0:	003f9c06 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004db4:	00c05504 	movi	r3,340
 c004db8:	19400536 	bltu	r3,r5,c004dd0 <_free_r+0x2d4>
 c004dbc:	100ad3fa 	srli	r5,r2,15
 c004dc0:	28c01e04 	addi	r3,r5,120
 c004dc4:	18c7883a 	add	r3,r3,r3
 c004dc8:	29401dc4 	addi	r5,r5,119
 c004dcc:	003f9506 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004dd0:	00c15504 	movi	r3,1364
 c004dd4:	19400536 	bltu	r3,r5,c004dec <_free_r+0x2f0>
 c004dd8:	100ad4ba 	srli	r5,r2,18
 c004ddc:	28c01f44 	addi	r3,r5,125
 c004de0:	18c7883a 	add	r3,r3,r3
 c004de4:	29401f04 	addi	r5,r5,124
 c004de8:	003f8e06 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004dec:	00c03f84 	movi	r3,254
 c004df0:	01401f84 	movi	r5,126
 c004df4:	003f8b06 	br	c004c24 <__alt_data_end+0xfc004c24>
 c004df8:	10c00054 	ori	r3,r2,1
 c004dfc:	30c00115 	stw	r3,4(r6)
 c004e00:	308d883a 	add	r6,r6,r2
 c004e04:	30800015 	stw	r2,0(r6)
 c004e08:	003f7806 	br	c004bec <__alt_data_end+0xfc004bec>

0c004e0c <_fwalk>:
 c004e0c:	defff704 	addi	sp,sp,-36
 c004e10:	dd000415 	stw	r20,16(sp)
 c004e14:	dfc00815 	stw	ra,32(sp)
 c004e18:	ddc00715 	stw	r23,28(sp)
 c004e1c:	dd800615 	stw	r22,24(sp)
 c004e20:	dd400515 	stw	r21,20(sp)
 c004e24:	dcc00315 	stw	r19,12(sp)
 c004e28:	dc800215 	stw	r18,8(sp)
 c004e2c:	dc400115 	stw	r17,4(sp)
 c004e30:	dc000015 	stw	r16,0(sp)
 c004e34:	2500b804 	addi	r20,r4,736
 c004e38:	a0002326 	beq	r20,zero,c004ec8 <_fwalk+0xbc>
 c004e3c:	282b883a 	mov	r21,r5
 c004e40:	002f883a 	mov	r23,zero
 c004e44:	05800044 	movi	r22,1
 c004e48:	04ffffc4 	movi	r19,-1
 c004e4c:	a4400117 	ldw	r17,4(r20)
 c004e50:	a4800217 	ldw	r18,8(r20)
 c004e54:	8c7fffc4 	addi	r17,r17,-1
 c004e58:	88000d16 	blt	r17,zero,c004e90 <_fwalk+0x84>
 c004e5c:	94000304 	addi	r16,r18,12
 c004e60:	94800384 	addi	r18,r18,14
 c004e64:	8080000b 	ldhu	r2,0(r16)
 c004e68:	8c7fffc4 	addi	r17,r17,-1
 c004e6c:	813ffd04 	addi	r4,r16,-12
 c004e70:	b080042e 	bgeu	r22,r2,c004e84 <_fwalk+0x78>
 c004e74:	9080000f 	ldh	r2,0(r18)
 c004e78:	14c00226 	beq	r2,r19,c004e84 <_fwalk+0x78>
 c004e7c:	a83ee83a 	callr	r21
 c004e80:	b8aeb03a 	or	r23,r23,r2
 c004e84:	84001a04 	addi	r16,r16,104
 c004e88:	94801a04 	addi	r18,r18,104
 c004e8c:	8cfff51e 	bne	r17,r19,c004e64 <__alt_data_end+0xfc004e64>
 c004e90:	a5000017 	ldw	r20,0(r20)
 c004e94:	a03fed1e 	bne	r20,zero,c004e4c <__alt_data_end+0xfc004e4c>
 c004e98:	b805883a 	mov	r2,r23
 c004e9c:	dfc00817 	ldw	ra,32(sp)
 c004ea0:	ddc00717 	ldw	r23,28(sp)
 c004ea4:	dd800617 	ldw	r22,24(sp)
 c004ea8:	dd400517 	ldw	r21,20(sp)
 c004eac:	dd000417 	ldw	r20,16(sp)
 c004eb0:	dcc00317 	ldw	r19,12(sp)
 c004eb4:	dc800217 	ldw	r18,8(sp)
 c004eb8:	dc400117 	ldw	r17,4(sp)
 c004ebc:	dc000017 	ldw	r16,0(sp)
 c004ec0:	dec00904 	addi	sp,sp,36
 c004ec4:	f800283a 	ret
 c004ec8:	002f883a 	mov	r23,zero
 c004ecc:	003ff206 	br	c004e98 <__alt_data_end+0xfc004e98>

0c004ed0 <_fwalk_reent>:
 c004ed0:	defff704 	addi	sp,sp,-36
 c004ed4:	dd000415 	stw	r20,16(sp)
 c004ed8:	dfc00815 	stw	ra,32(sp)
 c004edc:	ddc00715 	stw	r23,28(sp)
 c004ee0:	dd800615 	stw	r22,24(sp)
 c004ee4:	dd400515 	stw	r21,20(sp)
 c004ee8:	dcc00315 	stw	r19,12(sp)
 c004eec:	dc800215 	stw	r18,8(sp)
 c004ef0:	dc400115 	stw	r17,4(sp)
 c004ef4:	dc000015 	stw	r16,0(sp)
 c004ef8:	2500b804 	addi	r20,r4,736
 c004efc:	a0002326 	beq	r20,zero,c004f8c <_fwalk_reent+0xbc>
 c004f00:	282b883a 	mov	r21,r5
 c004f04:	2027883a 	mov	r19,r4
 c004f08:	002f883a 	mov	r23,zero
 c004f0c:	05800044 	movi	r22,1
 c004f10:	04bfffc4 	movi	r18,-1
 c004f14:	a4400117 	ldw	r17,4(r20)
 c004f18:	a4000217 	ldw	r16,8(r20)
 c004f1c:	8c7fffc4 	addi	r17,r17,-1
 c004f20:	88000c16 	blt	r17,zero,c004f54 <_fwalk_reent+0x84>
 c004f24:	84000304 	addi	r16,r16,12
 c004f28:	8080000b 	ldhu	r2,0(r16)
 c004f2c:	8c7fffc4 	addi	r17,r17,-1
 c004f30:	817ffd04 	addi	r5,r16,-12
 c004f34:	b080052e 	bgeu	r22,r2,c004f4c <_fwalk_reent+0x7c>
 c004f38:	8080008f 	ldh	r2,2(r16)
 c004f3c:	9809883a 	mov	r4,r19
 c004f40:	14800226 	beq	r2,r18,c004f4c <_fwalk_reent+0x7c>
 c004f44:	a83ee83a 	callr	r21
 c004f48:	b8aeb03a 	or	r23,r23,r2
 c004f4c:	84001a04 	addi	r16,r16,104
 c004f50:	8cbff51e 	bne	r17,r18,c004f28 <__alt_data_end+0xfc004f28>
 c004f54:	a5000017 	ldw	r20,0(r20)
 c004f58:	a03fee1e 	bne	r20,zero,c004f14 <__alt_data_end+0xfc004f14>
 c004f5c:	b805883a 	mov	r2,r23
 c004f60:	dfc00817 	ldw	ra,32(sp)
 c004f64:	ddc00717 	ldw	r23,28(sp)
 c004f68:	dd800617 	ldw	r22,24(sp)
 c004f6c:	dd400517 	ldw	r21,20(sp)
 c004f70:	dd000417 	ldw	r20,16(sp)
 c004f74:	dcc00317 	ldw	r19,12(sp)
 c004f78:	dc800217 	ldw	r18,8(sp)
 c004f7c:	dc400117 	ldw	r17,4(sp)
 c004f80:	dc000017 	ldw	r16,0(sp)
 c004f84:	dec00904 	addi	sp,sp,36
 c004f88:	f800283a 	ret
 c004f8c:	002f883a 	mov	r23,zero
 c004f90:	003ff206 	br	c004f5c <__alt_data_end+0xfc004f5c>

0c004f94 <_setlocale_r>:
 c004f94:	30001b26 	beq	r6,zero,c005004 <_setlocale_r+0x70>
 c004f98:	01430074 	movhi	r5,3073
 c004f9c:	defffe04 	addi	sp,sp,-8
 c004fa0:	297f0704 	addi	r5,r5,-996
 c004fa4:	3009883a 	mov	r4,r6
 c004fa8:	dc000015 	stw	r16,0(sp)
 c004fac:	dfc00115 	stw	ra,4(sp)
 c004fb0:	3021883a 	mov	r16,r6
 c004fb4:	c0070480 	call	c007048 <strcmp>
 c004fb8:	1000061e 	bne	r2,zero,c004fd4 <_setlocale_r+0x40>
 c004fbc:	00830074 	movhi	r2,3073
 c004fc0:	10bf0604 	addi	r2,r2,-1000
 c004fc4:	dfc00117 	ldw	ra,4(sp)
 c004fc8:	dc000017 	ldw	r16,0(sp)
 c004fcc:	dec00204 	addi	sp,sp,8
 c004fd0:	f800283a 	ret
 c004fd4:	01430074 	movhi	r5,3073
 c004fd8:	297f0604 	addi	r5,r5,-1000
 c004fdc:	8009883a 	mov	r4,r16
 c004fe0:	c0070480 	call	c007048 <strcmp>
 c004fe4:	103ff526 	beq	r2,zero,c004fbc <__alt_data_end+0xfc004fbc>
 c004fe8:	01430074 	movhi	r5,3073
 c004fec:	297ef104 	addi	r5,r5,-1084
 c004ff0:	8009883a 	mov	r4,r16
 c004ff4:	c0070480 	call	c007048 <strcmp>
 c004ff8:	103ff026 	beq	r2,zero,c004fbc <__alt_data_end+0xfc004fbc>
 c004ffc:	0005883a 	mov	r2,zero
 c005000:	003ff006 	br	c004fc4 <__alt_data_end+0xfc004fc4>
 c005004:	00830074 	movhi	r2,3073
 c005008:	10bf0604 	addi	r2,r2,-1000
 c00500c:	f800283a 	ret

0c005010 <__locale_charset>:
 c005010:	00830074 	movhi	r2,3073
 c005014:	1080b904 	addi	r2,r2,740
 c005018:	f800283a 	ret

0c00501c <__locale_mb_cur_max>:
 c00501c:	00830074 	movhi	r2,3073
 c005020:	10865704 	addi	r2,r2,6492
 c005024:	10800017 	ldw	r2,0(r2)
 c005028:	f800283a 	ret

0c00502c <__locale_msgcharset>:
 c00502c:	00830074 	movhi	r2,3073
 c005030:	1080b104 	addi	r2,r2,708
 c005034:	f800283a 	ret

0c005038 <__locale_cjk_lang>:
 c005038:	0005883a 	mov	r2,zero
 c00503c:	f800283a 	ret

0c005040 <_localeconv_r>:
 c005040:	00830074 	movhi	r2,3073
 c005044:	1080c104 	addi	r2,r2,772
 c005048:	f800283a 	ret

0c00504c <setlocale>:
 c00504c:	00830074 	movhi	r2,3073
 c005050:	10865604 	addi	r2,r2,6488
 c005054:	280d883a 	mov	r6,r5
 c005058:	200b883a 	mov	r5,r4
 c00505c:	11000017 	ldw	r4,0(r2)
 c005060:	c004f941 	jmpi	c004f94 <_setlocale_r>

0c005064 <localeconv>:
 c005064:	00830074 	movhi	r2,3073
 c005068:	1080c104 	addi	r2,r2,772
 c00506c:	f800283a 	ret

0c005070 <__smakebuf_r>:
 c005070:	2880030b 	ldhu	r2,12(r5)
 c005074:	10c0008c 	andi	r3,r2,2
 c005078:	1800411e 	bne	r3,zero,c005180 <__smakebuf_r+0x110>
 c00507c:	deffec04 	addi	sp,sp,-80
 c005080:	dc000f15 	stw	r16,60(sp)
 c005084:	2821883a 	mov	r16,r5
 c005088:	2940038f 	ldh	r5,14(r5)
 c00508c:	dc401015 	stw	r17,64(sp)
 c005090:	dfc01315 	stw	ra,76(sp)
 c005094:	dcc01215 	stw	r19,72(sp)
 c005098:	dc801115 	stw	r18,68(sp)
 c00509c:	2023883a 	mov	r17,r4
 c0050a0:	28001c16 	blt	r5,zero,c005114 <__smakebuf_r+0xa4>
 c0050a4:	d80d883a 	mov	r6,sp
 c0050a8:	c008d500 	call	c008d50 <_fstat_r>
 c0050ac:	10001816 	blt	r2,zero,c005110 <__smakebuf_r+0xa0>
 c0050b0:	d8800117 	ldw	r2,4(sp)
 c0050b4:	00e00014 	movui	r3,32768
 c0050b8:	10bc000c 	andi	r2,r2,61440
 c0050bc:	14c80020 	cmpeqi	r19,r2,8192
 c0050c0:	10c03726 	beq	r2,r3,c0051a0 <__smakebuf_r+0x130>
 c0050c4:	80c0030b 	ldhu	r3,12(r16)
 c0050c8:	18c20014 	ori	r3,r3,2048
 c0050cc:	80c0030d 	sth	r3,12(r16)
 c0050d0:	00c80004 	movi	r3,8192
 c0050d4:	10c0521e 	bne	r2,r3,c005220 <__smakebuf_r+0x1b0>
 c0050d8:	8140038f 	ldh	r5,14(r16)
 c0050dc:	8809883a 	mov	r4,r17
 c0050e0:	c0092740 	call	c009274 <_isatty_r>
 c0050e4:	10004c26 	beq	r2,zero,c005218 <__smakebuf_r+0x1a8>
 c0050e8:	8080030b 	ldhu	r2,12(r16)
 c0050ec:	80c010c4 	addi	r3,r16,67
 c0050f0:	80c00015 	stw	r3,0(r16)
 c0050f4:	10800054 	ori	r2,r2,1
 c0050f8:	8080030d 	sth	r2,12(r16)
 c0050fc:	00800044 	movi	r2,1
 c005100:	80c00415 	stw	r3,16(r16)
 c005104:	80800515 	stw	r2,20(r16)
 c005108:	04810004 	movi	r18,1024
 c00510c:	00000706 	br	c00512c <__smakebuf_r+0xbc>
 c005110:	8080030b 	ldhu	r2,12(r16)
 c005114:	10c0200c 	andi	r3,r2,128
 c005118:	18001f1e 	bne	r3,zero,c005198 <__smakebuf_r+0x128>
 c00511c:	04810004 	movi	r18,1024
 c005120:	10820014 	ori	r2,r2,2048
 c005124:	8080030d 	sth	r2,12(r16)
 c005128:	0027883a 	mov	r19,zero
 c00512c:	900b883a 	mov	r5,r18
 c005130:	8809883a 	mov	r4,r17
 c005134:	c00522c0 	call	c00522c <_malloc_r>
 c005138:	10002c26 	beq	r2,zero,c0051ec <__smakebuf_r+0x17c>
 c00513c:	80c0030b 	ldhu	r3,12(r16)
 c005140:	01030034 	movhi	r4,3072
 c005144:	21118c04 	addi	r4,r4,17968
 c005148:	89000f15 	stw	r4,60(r17)
 c00514c:	18c02014 	ori	r3,r3,128
 c005150:	80c0030d 	sth	r3,12(r16)
 c005154:	80800015 	stw	r2,0(r16)
 c005158:	80800415 	stw	r2,16(r16)
 c00515c:	84800515 	stw	r18,20(r16)
 c005160:	98001a1e 	bne	r19,zero,c0051cc <__smakebuf_r+0x15c>
 c005164:	dfc01317 	ldw	ra,76(sp)
 c005168:	dcc01217 	ldw	r19,72(sp)
 c00516c:	dc801117 	ldw	r18,68(sp)
 c005170:	dc401017 	ldw	r17,64(sp)
 c005174:	dc000f17 	ldw	r16,60(sp)
 c005178:	dec01404 	addi	sp,sp,80
 c00517c:	f800283a 	ret
 c005180:	288010c4 	addi	r2,r5,67
 c005184:	28800015 	stw	r2,0(r5)
 c005188:	28800415 	stw	r2,16(r5)
 c00518c:	00800044 	movi	r2,1
 c005190:	28800515 	stw	r2,20(r5)
 c005194:	f800283a 	ret
 c005198:	04801004 	movi	r18,64
 c00519c:	003fe006 	br	c005120 <__alt_data_end+0xfc005120>
 c0051a0:	81000a17 	ldw	r4,40(r16)
 c0051a4:	00c30034 	movhi	r3,3072
 c0051a8:	18dbf904 	addi	r3,r3,28644
 c0051ac:	20ffc51e 	bne	r4,r3,c0050c4 <__alt_data_end+0xfc0050c4>
 c0051b0:	8080030b 	ldhu	r2,12(r16)
 c0051b4:	04810004 	movi	r18,1024
 c0051b8:	84801315 	stw	r18,76(r16)
 c0051bc:	1484b03a 	or	r2,r2,r18
 c0051c0:	8080030d 	sth	r2,12(r16)
 c0051c4:	0027883a 	mov	r19,zero
 c0051c8:	003fd806 	br	c00512c <__alt_data_end+0xfc00512c>
 c0051cc:	8140038f 	ldh	r5,14(r16)
 c0051d0:	8809883a 	mov	r4,r17
 c0051d4:	c0092740 	call	c009274 <_isatty_r>
 c0051d8:	103fe226 	beq	r2,zero,c005164 <__alt_data_end+0xfc005164>
 c0051dc:	8080030b 	ldhu	r2,12(r16)
 c0051e0:	10800054 	ori	r2,r2,1
 c0051e4:	8080030d 	sth	r2,12(r16)
 c0051e8:	003fde06 	br	c005164 <__alt_data_end+0xfc005164>
 c0051ec:	8080030b 	ldhu	r2,12(r16)
 c0051f0:	10c0800c 	andi	r3,r2,512
 c0051f4:	183fdb1e 	bne	r3,zero,c005164 <__alt_data_end+0xfc005164>
 c0051f8:	10800094 	ori	r2,r2,2
 c0051fc:	80c010c4 	addi	r3,r16,67
 c005200:	8080030d 	sth	r2,12(r16)
 c005204:	00800044 	movi	r2,1
 c005208:	80c00015 	stw	r3,0(r16)
 c00520c:	80c00415 	stw	r3,16(r16)
 c005210:	80800515 	stw	r2,20(r16)
 c005214:	003fd306 	br	c005164 <__alt_data_end+0xfc005164>
 c005218:	04810004 	movi	r18,1024
 c00521c:	003fc306 	br	c00512c <__alt_data_end+0xfc00512c>
 c005220:	0027883a 	mov	r19,zero
 c005224:	04810004 	movi	r18,1024
 c005228:	003fc006 	br	c00512c <__alt_data_end+0xfc00512c>

0c00522c <_malloc_r>:
 c00522c:	defff504 	addi	sp,sp,-44
 c005230:	dc800315 	stw	r18,12(sp)
 c005234:	dfc00a15 	stw	ra,40(sp)
 c005238:	df000915 	stw	fp,36(sp)
 c00523c:	ddc00815 	stw	r23,32(sp)
 c005240:	dd800715 	stw	r22,28(sp)
 c005244:	dd400615 	stw	r21,24(sp)
 c005248:	dd000515 	stw	r20,20(sp)
 c00524c:	dcc00415 	stw	r19,16(sp)
 c005250:	dc400215 	stw	r17,8(sp)
 c005254:	dc000115 	stw	r16,4(sp)
 c005258:	288002c4 	addi	r2,r5,11
 c00525c:	00c00584 	movi	r3,22
 c005260:	2025883a 	mov	r18,r4
 c005264:	18807f2e 	bgeu	r3,r2,c005464 <_malloc_r+0x238>
 c005268:	047ffe04 	movi	r17,-8
 c00526c:	1462703a 	and	r17,r2,r17
 c005270:	8800a316 	blt	r17,zero,c005500 <_malloc_r+0x2d4>
 c005274:	8940a236 	bltu	r17,r5,c005500 <_malloc_r+0x2d4>
 c005278:	c00d93c0 	call	c00d93c <__malloc_lock>
 c00527c:	00807dc4 	movi	r2,503
 c005280:	1441e92e 	bgeu	r2,r17,c005a28 <_malloc_r+0x7fc>
 c005284:	8804d27a 	srli	r2,r17,9
 c005288:	1000a126 	beq	r2,zero,c005510 <_malloc_r+0x2e4>
 c00528c:	00c00104 	movi	r3,4
 c005290:	18811e36 	bltu	r3,r2,c00570c <_malloc_r+0x4e0>
 c005294:	8804d1ba 	srli	r2,r17,6
 c005298:	12000e44 	addi	r8,r2,57
 c00529c:	11c00e04 	addi	r7,r2,56
 c0052a0:	4209883a 	add	r4,r8,r8
 c0052a4:	04c30074 	movhi	r19,3073
 c0052a8:	2109883a 	add	r4,r4,r4
 c0052ac:	9cc0cf04 	addi	r19,r19,828
 c0052b0:	2109883a 	add	r4,r4,r4
 c0052b4:	9909883a 	add	r4,r19,r4
 c0052b8:	24000117 	ldw	r16,4(r4)
 c0052bc:	213ffe04 	addi	r4,r4,-8
 c0052c0:	24009726 	beq	r4,r16,c005520 <_malloc_r+0x2f4>
 c0052c4:	80800117 	ldw	r2,4(r16)
 c0052c8:	01bfff04 	movi	r6,-4
 c0052cc:	014003c4 	movi	r5,15
 c0052d0:	1184703a 	and	r2,r2,r6
 c0052d4:	1447c83a 	sub	r3,r2,r17
 c0052d8:	28c00716 	blt	r5,r3,c0052f8 <_malloc_r+0xcc>
 c0052dc:	1800920e 	bge	r3,zero,c005528 <_malloc_r+0x2fc>
 c0052e0:	84000317 	ldw	r16,12(r16)
 c0052e4:	24008e26 	beq	r4,r16,c005520 <_malloc_r+0x2f4>
 c0052e8:	80800117 	ldw	r2,4(r16)
 c0052ec:	1184703a 	and	r2,r2,r6
 c0052f0:	1447c83a 	sub	r3,r2,r17
 c0052f4:	28fff90e 	bge	r5,r3,c0052dc <__alt_data_end+0xfc0052dc>
 c0052f8:	3809883a 	mov	r4,r7
 c0052fc:	01830074 	movhi	r6,3073
 c005300:	9c000417 	ldw	r16,16(r19)
 c005304:	3180cf04 	addi	r6,r6,828
 c005308:	32000204 	addi	r8,r6,8
 c00530c:	82013426 	beq	r16,r8,c0057e0 <_malloc_r+0x5b4>
 c005310:	80c00117 	ldw	r3,4(r16)
 c005314:	00bfff04 	movi	r2,-4
 c005318:	188e703a 	and	r7,r3,r2
 c00531c:	3c45c83a 	sub	r2,r7,r17
 c005320:	00c003c4 	movi	r3,15
 c005324:	18811f16 	blt	r3,r2,c0057a4 <_malloc_r+0x578>
 c005328:	32000515 	stw	r8,20(r6)
 c00532c:	32000415 	stw	r8,16(r6)
 c005330:	10007f0e 	bge	r2,zero,c005530 <_malloc_r+0x304>
 c005334:	00807fc4 	movi	r2,511
 c005338:	11c0fd36 	bltu	r2,r7,c005730 <_malloc_r+0x504>
 c00533c:	3806d0fa 	srli	r3,r7,3
 c005340:	01c00044 	movi	r7,1
 c005344:	30800117 	ldw	r2,4(r6)
 c005348:	19400044 	addi	r5,r3,1
 c00534c:	294b883a 	add	r5,r5,r5
 c005350:	1807d0ba 	srai	r3,r3,2
 c005354:	294b883a 	add	r5,r5,r5
 c005358:	294b883a 	add	r5,r5,r5
 c00535c:	298b883a 	add	r5,r5,r6
 c005360:	38c6983a 	sll	r3,r7,r3
 c005364:	29c00017 	ldw	r7,0(r5)
 c005368:	2a7ffe04 	addi	r9,r5,-8
 c00536c:	1886b03a 	or	r3,r3,r2
 c005370:	82400315 	stw	r9,12(r16)
 c005374:	81c00215 	stw	r7,8(r16)
 c005378:	30c00115 	stw	r3,4(r6)
 c00537c:	2c000015 	stw	r16,0(r5)
 c005380:	3c000315 	stw	r16,12(r7)
 c005384:	2005d0ba 	srai	r2,r4,2
 c005388:	01400044 	movi	r5,1
 c00538c:	288a983a 	sll	r5,r5,r2
 c005390:	19406f36 	bltu	r3,r5,c005550 <_malloc_r+0x324>
 c005394:	28c4703a 	and	r2,r5,r3
 c005398:	10000a1e 	bne	r2,zero,c0053c4 <_malloc_r+0x198>
 c00539c:	00bfff04 	movi	r2,-4
 c0053a0:	294b883a 	add	r5,r5,r5
 c0053a4:	2088703a 	and	r4,r4,r2
 c0053a8:	28c4703a 	and	r2,r5,r3
 c0053ac:	21000104 	addi	r4,r4,4
 c0053b0:	1000041e 	bne	r2,zero,c0053c4 <_malloc_r+0x198>
 c0053b4:	294b883a 	add	r5,r5,r5
 c0053b8:	28c4703a 	and	r2,r5,r3
 c0053bc:	21000104 	addi	r4,r4,4
 c0053c0:	103ffc26 	beq	r2,zero,c0053b4 <__alt_data_end+0xfc0053b4>
 c0053c4:	02bfff04 	movi	r10,-4
 c0053c8:	024003c4 	movi	r9,15
 c0053cc:	21800044 	addi	r6,r4,1
 c0053d0:	318d883a 	add	r6,r6,r6
 c0053d4:	318d883a 	add	r6,r6,r6
 c0053d8:	318d883a 	add	r6,r6,r6
 c0053dc:	998d883a 	add	r6,r19,r6
 c0053e0:	333ffe04 	addi	r12,r6,-8
 c0053e4:	2017883a 	mov	r11,r4
 c0053e8:	31800104 	addi	r6,r6,4
 c0053ec:	34000017 	ldw	r16,0(r6)
 c0053f0:	31fffd04 	addi	r7,r6,-12
 c0053f4:	81c0041e 	bne	r16,r7,c005408 <_malloc_r+0x1dc>
 c0053f8:	0000fb06 	br	c0057e8 <_malloc_r+0x5bc>
 c0053fc:	1801030e 	bge	r3,zero,c00580c <_malloc_r+0x5e0>
 c005400:	84000317 	ldw	r16,12(r16)
 c005404:	81c0f826 	beq	r16,r7,c0057e8 <_malloc_r+0x5bc>
 c005408:	80800117 	ldw	r2,4(r16)
 c00540c:	1284703a 	and	r2,r2,r10
 c005410:	1447c83a 	sub	r3,r2,r17
 c005414:	48fff90e 	bge	r9,r3,c0053fc <__alt_data_end+0xfc0053fc>
 c005418:	80800317 	ldw	r2,12(r16)
 c00541c:	81000217 	ldw	r4,8(r16)
 c005420:	89400054 	ori	r5,r17,1
 c005424:	81400115 	stw	r5,4(r16)
 c005428:	20800315 	stw	r2,12(r4)
 c00542c:	11000215 	stw	r4,8(r2)
 c005430:	8463883a 	add	r17,r16,r17
 c005434:	9c400515 	stw	r17,20(r19)
 c005438:	9c400415 	stw	r17,16(r19)
 c00543c:	18800054 	ori	r2,r3,1
 c005440:	88800115 	stw	r2,4(r17)
 c005444:	8a000315 	stw	r8,12(r17)
 c005448:	8a000215 	stw	r8,8(r17)
 c00544c:	88e3883a 	add	r17,r17,r3
 c005450:	88c00015 	stw	r3,0(r17)
 c005454:	9009883a 	mov	r4,r18
 c005458:	c00d9600 	call	c00d960 <__malloc_unlock>
 c00545c:	80800204 	addi	r2,r16,8
 c005460:	00001b06 	br	c0054d0 <_malloc_r+0x2a4>
 c005464:	04400404 	movi	r17,16
 c005468:	89402536 	bltu	r17,r5,c005500 <_malloc_r+0x2d4>
 c00546c:	c00d93c0 	call	c00d93c <__malloc_lock>
 c005470:	00800184 	movi	r2,6
 c005474:	01000084 	movi	r4,2
 c005478:	04c30074 	movhi	r19,3073
 c00547c:	1085883a 	add	r2,r2,r2
 c005480:	9cc0cf04 	addi	r19,r19,828
 c005484:	1085883a 	add	r2,r2,r2
 c005488:	9885883a 	add	r2,r19,r2
 c00548c:	14000117 	ldw	r16,4(r2)
 c005490:	10fffe04 	addi	r3,r2,-8
 c005494:	80c0d926 	beq	r16,r3,c0057fc <_malloc_r+0x5d0>
 c005498:	80c00117 	ldw	r3,4(r16)
 c00549c:	81000317 	ldw	r4,12(r16)
 c0054a0:	00bfff04 	movi	r2,-4
 c0054a4:	1884703a 	and	r2,r3,r2
 c0054a8:	81400217 	ldw	r5,8(r16)
 c0054ac:	8085883a 	add	r2,r16,r2
 c0054b0:	10c00117 	ldw	r3,4(r2)
 c0054b4:	29000315 	stw	r4,12(r5)
 c0054b8:	21400215 	stw	r5,8(r4)
 c0054bc:	18c00054 	ori	r3,r3,1
 c0054c0:	10c00115 	stw	r3,4(r2)
 c0054c4:	9009883a 	mov	r4,r18
 c0054c8:	c00d9600 	call	c00d960 <__malloc_unlock>
 c0054cc:	80800204 	addi	r2,r16,8
 c0054d0:	dfc00a17 	ldw	ra,40(sp)
 c0054d4:	df000917 	ldw	fp,36(sp)
 c0054d8:	ddc00817 	ldw	r23,32(sp)
 c0054dc:	dd800717 	ldw	r22,28(sp)
 c0054e0:	dd400617 	ldw	r21,24(sp)
 c0054e4:	dd000517 	ldw	r20,20(sp)
 c0054e8:	dcc00417 	ldw	r19,16(sp)
 c0054ec:	dc800317 	ldw	r18,12(sp)
 c0054f0:	dc400217 	ldw	r17,8(sp)
 c0054f4:	dc000117 	ldw	r16,4(sp)
 c0054f8:	dec00b04 	addi	sp,sp,44
 c0054fc:	f800283a 	ret
 c005500:	00800304 	movi	r2,12
 c005504:	90800015 	stw	r2,0(r18)
 c005508:	0005883a 	mov	r2,zero
 c00550c:	003ff006 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c005510:	01002004 	movi	r4,128
 c005514:	02001004 	movi	r8,64
 c005518:	01c00fc4 	movi	r7,63
 c00551c:	003f6106 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c005520:	4009883a 	mov	r4,r8
 c005524:	003f7506 	br	c0052fc <__alt_data_end+0xfc0052fc>
 c005528:	81000317 	ldw	r4,12(r16)
 c00552c:	003fde06 	br	c0054a8 <__alt_data_end+0xfc0054a8>
 c005530:	81c5883a 	add	r2,r16,r7
 c005534:	11400117 	ldw	r5,4(r2)
 c005538:	9009883a 	mov	r4,r18
 c00553c:	29400054 	ori	r5,r5,1
 c005540:	11400115 	stw	r5,4(r2)
 c005544:	c00d9600 	call	c00d960 <__malloc_unlock>
 c005548:	80800204 	addi	r2,r16,8
 c00554c:	003fe006 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c005550:	9c000217 	ldw	r16,8(r19)
 c005554:	00bfff04 	movi	r2,-4
 c005558:	85800117 	ldw	r22,4(r16)
 c00555c:	b0ac703a 	and	r22,r22,r2
 c005560:	b4400336 	bltu	r22,r17,c005570 <_malloc_r+0x344>
 c005564:	b445c83a 	sub	r2,r22,r17
 c005568:	00c003c4 	movi	r3,15
 c00556c:	18805d16 	blt	r3,r2,c0056e4 <_malloc_r+0x4b8>
 c005570:	05c30074 	movhi	r23,3073
 c005574:	00830074 	movhi	r2,3073
 c005578:	108d2704 	addi	r2,r2,13468
 c00557c:	bdc65804 	addi	r23,r23,6496
 c005580:	15400017 	ldw	r21,0(r2)
 c005584:	b8c00017 	ldw	r3,0(r23)
 c005588:	00bfffc4 	movi	r2,-1
 c00558c:	858d883a 	add	r6,r16,r22
 c005590:	8d6b883a 	add	r21,r17,r21
 c005594:	1880ea26 	beq	r3,r2,c005940 <_malloc_r+0x714>
 c005598:	ad4403c4 	addi	r21,r21,4111
 c00559c:	00bc0004 	movi	r2,-4096
 c0055a0:	a8aa703a 	and	r21,r21,r2
 c0055a4:	a80b883a 	mov	r5,r21
 c0055a8:	9009883a 	mov	r4,r18
 c0055ac:	d9800015 	stw	r6,0(sp)
 c0055b0:	c006eb80 	call	c006eb8 <_sbrk_r>
 c0055b4:	1029883a 	mov	r20,r2
 c0055b8:	00bfffc4 	movi	r2,-1
 c0055bc:	d9800017 	ldw	r6,0(sp)
 c0055c0:	a080e826 	beq	r20,r2,c005964 <_malloc_r+0x738>
 c0055c4:	a180a636 	bltu	r20,r6,c005860 <_malloc_r+0x634>
 c0055c8:	07030074 	movhi	fp,3073
 c0055cc:	e70d3004 	addi	fp,fp,13504
 c0055d0:	e0800017 	ldw	r2,0(fp)
 c0055d4:	a887883a 	add	r3,r21,r2
 c0055d8:	e0c00015 	stw	r3,0(fp)
 c0055dc:	3500e626 	beq	r6,r20,c005978 <_malloc_r+0x74c>
 c0055e0:	b9000017 	ldw	r4,0(r23)
 c0055e4:	00bfffc4 	movi	r2,-1
 c0055e8:	2080ee26 	beq	r4,r2,c0059a4 <_malloc_r+0x778>
 c0055ec:	a185c83a 	sub	r2,r20,r6
 c0055f0:	10c5883a 	add	r2,r2,r3
 c0055f4:	e0800015 	stw	r2,0(fp)
 c0055f8:	a0c001cc 	andi	r3,r20,7
 c0055fc:	1800bc26 	beq	r3,zero,c0058f0 <_malloc_r+0x6c4>
 c005600:	a0e9c83a 	sub	r20,r20,r3
 c005604:	00840204 	movi	r2,4104
 c005608:	a5000204 	addi	r20,r20,8
 c00560c:	10c7c83a 	sub	r3,r2,r3
 c005610:	a545883a 	add	r2,r20,r21
 c005614:	1083ffcc 	andi	r2,r2,4095
 c005618:	18abc83a 	sub	r21,r3,r2
 c00561c:	a80b883a 	mov	r5,r21
 c005620:	9009883a 	mov	r4,r18
 c005624:	c006eb80 	call	c006eb8 <_sbrk_r>
 c005628:	00ffffc4 	movi	r3,-1
 c00562c:	10c0e126 	beq	r2,r3,c0059b4 <_malloc_r+0x788>
 c005630:	1505c83a 	sub	r2,r2,r20
 c005634:	1545883a 	add	r2,r2,r21
 c005638:	10800054 	ori	r2,r2,1
 c00563c:	e0c00017 	ldw	r3,0(fp)
 c005640:	9d000215 	stw	r20,8(r19)
 c005644:	a0800115 	stw	r2,4(r20)
 c005648:	a8c7883a 	add	r3,r21,r3
 c00564c:	e0c00015 	stw	r3,0(fp)
 c005650:	84c00e26 	beq	r16,r19,c00568c <_malloc_r+0x460>
 c005654:	018003c4 	movi	r6,15
 c005658:	3580a72e 	bgeu	r6,r22,c0058f8 <_malloc_r+0x6cc>
 c00565c:	81400117 	ldw	r5,4(r16)
 c005660:	013ffe04 	movi	r4,-8
 c005664:	b0bffd04 	addi	r2,r22,-12
 c005668:	1104703a 	and	r2,r2,r4
 c00566c:	2900004c 	andi	r4,r5,1
 c005670:	2088b03a 	or	r4,r4,r2
 c005674:	81000115 	stw	r4,4(r16)
 c005678:	01400144 	movi	r5,5
 c00567c:	8089883a 	add	r4,r16,r2
 c005680:	21400115 	stw	r5,4(r4)
 c005684:	21400215 	stw	r5,8(r4)
 c005688:	3080cd36 	bltu	r6,r2,c0059c0 <_malloc_r+0x794>
 c00568c:	00830074 	movhi	r2,3073
 c005690:	108d2604 	addi	r2,r2,13464
 c005694:	11000017 	ldw	r4,0(r2)
 c005698:	20c0012e 	bgeu	r4,r3,c0056a0 <_malloc_r+0x474>
 c00569c:	10c00015 	stw	r3,0(r2)
 c0056a0:	00830074 	movhi	r2,3073
 c0056a4:	108d2504 	addi	r2,r2,13460
 c0056a8:	11000017 	ldw	r4,0(r2)
 c0056ac:	9c000217 	ldw	r16,8(r19)
 c0056b0:	20c0012e 	bgeu	r4,r3,c0056b8 <_malloc_r+0x48c>
 c0056b4:	10c00015 	stw	r3,0(r2)
 c0056b8:	80c00117 	ldw	r3,4(r16)
 c0056bc:	00bfff04 	movi	r2,-4
 c0056c0:	1886703a 	and	r3,r3,r2
 c0056c4:	1c45c83a 	sub	r2,r3,r17
 c0056c8:	1c400236 	bltu	r3,r17,c0056d4 <_malloc_r+0x4a8>
 c0056cc:	00c003c4 	movi	r3,15
 c0056d0:	18800416 	blt	r3,r2,c0056e4 <_malloc_r+0x4b8>
 c0056d4:	9009883a 	mov	r4,r18
 c0056d8:	c00d9600 	call	c00d960 <__malloc_unlock>
 c0056dc:	0005883a 	mov	r2,zero
 c0056e0:	003f7b06 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c0056e4:	88c00054 	ori	r3,r17,1
 c0056e8:	80c00115 	stw	r3,4(r16)
 c0056ec:	8463883a 	add	r17,r16,r17
 c0056f0:	10800054 	ori	r2,r2,1
 c0056f4:	9c400215 	stw	r17,8(r19)
 c0056f8:	88800115 	stw	r2,4(r17)
 c0056fc:	9009883a 	mov	r4,r18
 c005700:	c00d9600 	call	c00d960 <__malloc_unlock>
 c005704:	80800204 	addi	r2,r16,8
 c005708:	003f7106 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c00570c:	00c00504 	movi	r3,20
 c005710:	18804a2e 	bgeu	r3,r2,c00583c <_malloc_r+0x610>
 c005714:	00c01504 	movi	r3,84
 c005718:	18806e36 	bltu	r3,r2,c0058d4 <_malloc_r+0x6a8>
 c00571c:	8804d33a 	srli	r2,r17,12
 c005720:	12001bc4 	addi	r8,r2,111
 c005724:	11c01b84 	addi	r7,r2,110
 c005728:	4209883a 	add	r4,r8,r8
 c00572c:	003edd06 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c005730:	3804d27a 	srli	r2,r7,9
 c005734:	00c00104 	movi	r3,4
 c005738:	1880442e 	bgeu	r3,r2,c00584c <_malloc_r+0x620>
 c00573c:	00c00504 	movi	r3,20
 c005740:	18808136 	bltu	r3,r2,c005948 <_malloc_r+0x71c>
 c005744:	11401704 	addi	r5,r2,92
 c005748:	10c016c4 	addi	r3,r2,91
 c00574c:	294b883a 	add	r5,r5,r5
 c005750:	294b883a 	add	r5,r5,r5
 c005754:	294b883a 	add	r5,r5,r5
 c005758:	994b883a 	add	r5,r19,r5
 c00575c:	28800017 	ldw	r2,0(r5)
 c005760:	01830074 	movhi	r6,3073
 c005764:	297ffe04 	addi	r5,r5,-8
 c005768:	3180cf04 	addi	r6,r6,828
 c00576c:	28806526 	beq	r5,r2,c005904 <_malloc_r+0x6d8>
 c005770:	01bfff04 	movi	r6,-4
 c005774:	10c00117 	ldw	r3,4(r2)
 c005778:	1986703a 	and	r3,r3,r6
 c00577c:	38c0022e 	bgeu	r7,r3,c005788 <_malloc_r+0x55c>
 c005780:	10800217 	ldw	r2,8(r2)
 c005784:	28bffb1e 	bne	r5,r2,c005774 <__alt_data_end+0xfc005774>
 c005788:	11400317 	ldw	r5,12(r2)
 c00578c:	98c00117 	ldw	r3,4(r19)
 c005790:	81400315 	stw	r5,12(r16)
 c005794:	80800215 	stw	r2,8(r16)
 c005798:	2c000215 	stw	r16,8(r5)
 c00579c:	14000315 	stw	r16,12(r2)
 c0057a0:	003ef806 	br	c005384 <__alt_data_end+0xfc005384>
 c0057a4:	88c00054 	ori	r3,r17,1
 c0057a8:	80c00115 	stw	r3,4(r16)
 c0057ac:	8463883a 	add	r17,r16,r17
 c0057b0:	34400515 	stw	r17,20(r6)
 c0057b4:	34400415 	stw	r17,16(r6)
 c0057b8:	10c00054 	ori	r3,r2,1
 c0057bc:	8a000315 	stw	r8,12(r17)
 c0057c0:	8a000215 	stw	r8,8(r17)
 c0057c4:	88c00115 	stw	r3,4(r17)
 c0057c8:	88a3883a 	add	r17,r17,r2
 c0057cc:	88800015 	stw	r2,0(r17)
 c0057d0:	9009883a 	mov	r4,r18
 c0057d4:	c00d9600 	call	c00d960 <__malloc_unlock>
 c0057d8:	80800204 	addi	r2,r16,8
 c0057dc:	003f3c06 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c0057e0:	30c00117 	ldw	r3,4(r6)
 c0057e4:	003ee706 	br	c005384 <__alt_data_end+0xfc005384>
 c0057e8:	5ac00044 	addi	r11,r11,1
 c0057ec:	588000cc 	andi	r2,r11,3
 c0057f0:	31800204 	addi	r6,r6,8
 c0057f4:	103efd1e 	bne	r2,zero,c0053ec <__alt_data_end+0xfc0053ec>
 c0057f8:	00002406 	br	c00588c <_malloc_r+0x660>
 c0057fc:	14000317 	ldw	r16,12(r2)
 c005800:	143f251e 	bne	r2,r16,c005498 <__alt_data_end+0xfc005498>
 c005804:	21000084 	addi	r4,r4,2
 c005808:	003ebc06 	br	c0052fc <__alt_data_end+0xfc0052fc>
 c00580c:	8085883a 	add	r2,r16,r2
 c005810:	10c00117 	ldw	r3,4(r2)
 c005814:	81000317 	ldw	r4,12(r16)
 c005818:	81400217 	ldw	r5,8(r16)
 c00581c:	18c00054 	ori	r3,r3,1
 c005820:	10c00115 	stw	r3,4(r2)
 c005824:	29000315 	stw	r4,12(r5)
 c005828:	21400215 	stw	r5,8(r4)
 c00582c:	9009883a 	mov	r4,r18
 c005830:	c00d9600 	call	c00d960 <__malloc_unlock>
 c005834:	80800204 	addi	r2,r16,8
 c005838:	003f2506 	br	c0054d0 <__alt_data_end+0xfc0054d0>
 c00583c:	12001704 	addi	r8,r2,92
 c005840:	11c016c4 	addi	r7,r2,91
 c005844:	4209883a 	add	r4,r8,r8
 c005848:	003e9606 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c00584c:	3804d1ba 	srli	r2,r7,6
 c005850:	11400e44 	addi	r5,r2,57
 c005854:	10c00e04 	addi	r3,r2,56
 c005858:	294b883a 	add	r5,r5,r5
 c00585c:	003fbc06 	br	c005750 <__alt_data_end+0xfc005750>
 c005860:	84ff5926 	beq	r16,r19,c0055c8 <__alt_data_end+0xfc0055c8>
 c005864:	00830074 	movhi	r2,3073
 c005868:	1080cf04 	addi	r2,r2,828
 c00586c:	14000217 	ldw	r16,8(r2)
 c005870:	00bfff04 	movi	r2,-4
 c005874:	80c00117 	ldw	r3,4(r16)
 c005878:	1886703a 	and	r3,r3,r2
 c00587c:	003f9106 	br	c0056c4 <__alt_data_end+0xfc0056c4>
 c005880:	60800217 	ldw	r2,8(r12)
 c005884:	213fffc4 	addi	r4,r4,-1
 c005888:	1300651e 	bne	r2,r12,c005a20 <_malloc_r+0x7f4>
 c00588c:	208000cc 	andi	r2,r4,3
 c005890:	633ffe04 	addi	r12,r12,-8
 c005894:	103ffa1e 	bne	r2,zero,c005880 <__alt_data_end+0xfc005880>
 c005898:	98800117 	ldw	r2,4(r19)
 c00589c:	0146303a 	nor	r3,zero,r5
 c0058a0:	1884703a 	and	r2,r3,r2
 c0058a4:	98800115 	stw	r2,4(r19)
 c0058a8:	294b883a 	add	r5,r5,r5
 c0058ac:	117f2836 	bltu	r2,r5,c005550 <__alt_data_end+0xfc005550>
 c0058b0:	283f2726 	beq	r5,zero,c005550 <__alt_data_end+0xfc005550>
 c0058b4:	2886703a 	and	r3,r5,r2
 c0058b8:	5809883a 	mov	r4,r11
 c0058bc:	183ec31e 	bne	r3,zero,c0053cc <__alt_data_end+0xfc0053cc>
 c0058c0:	294b883a 	add	r5,r5,r5
 c0058c4:	2886703a 	and	r3,r5,r2
 c0058c8:	21000104 	addi	r4,r4,4
 c0058cc:	183ffc26 	beq	r3,zero,c0058c0 <__alt_data_end+0xfc0058c0>
 c0058d0:	003ebe06 	br	c0053cc <__alt_data_end+0xfc0053cc>
 c0058d4:	00c05504 	movi	r3,340
 c0058d8:	18801236 	bltu	r3,r2,c005924 <_malloc_r+0x6f8>
 c0058dc:	8804d3fa 	srli	r2,r17,15
 c0058e0:	12001e04 	addi	r8,r2,120
 c0058e4:	11c01dc4 	addi	r7,r2,119
 c0058e8:	4209883a 	add	r4,r8,r8
 c0058ec:	003e6d06 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c0058f0:	00c40004 	movi	r3,4096
 c0058f4:	003f4606 	br	c005610 <__alt_data_end+0xfc005610>
 c0058f8:	00800044 	movi	r2,1
 c0058fc:	a0800115 	stw	r2,4(r20)
 c005900:	003f7406 	br	c0056d4 <__alt_data_end+0xfc0056d4>
 c005904:	1805d0ba 	srai	r2,r3,2
 c005908:	01c00044 	movi	r7,1
 c00590c:	30c00117 	ldw	r3,4(r6)
 c005910:	388e983a 	sll	r7,r7,r2
 c005914:	2805883a 	mov	r2,r5
 c005918:	38c6b03a 	or	r3,r7,r3
 c00591c:	30c00115 	stw	r3,4(r6)
 c005920:	003f9b06 	br	c005790 <__alt_data_end+0xfc005790>
 c005924:	00c15504 	movi	r3,1364
 c005928:	18801a36 	bltu	r3,r2,c005994 <_malloc_r+0x768>
 c00592c:	8804d4ba 	srli	r2,r17,18
 c005930:	12001f44 	addi	r8,r2,125
 c005934:	11c01f04 	addi	r7,r2,124
 c005938:	4209883a 	add	r4,r8,r8
 c00593c:	003e5906 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c005940:	ad400404 	addi	r21,r21,16
 c005944:	003f1706 	br	c0055a4 <__alt_data_end+0xfc0055a4>
 c005948:	00c01504 	movi	r3,84
 c00594c:	18802336 	bltu	r3,r2,c0059dc <_malloc_r+0x7b0>
 c005950:	3804d33a 	srli	r2,r7,12
 c005954:	11401bc4 	addi	r5,r2,111
 c005958:	10c01b84 	addi	r3,r2,110
 c00595c:	294b883a 	add	r5,r5,r5
 c005960:	003f7b06 	br	c005750 <__alt_data_end+0xfc005750>
 c005964:	9c000217 	ldw	r16,8(r19)
 c005968:	00bfff04 	movi	r2,-4
 c00596c:	80c00117 	ldw	r3,4(r16)
 c005970:	1886703a 	and	r3,r3,r2
 c005974:	003f5306 	br	c0056c4 <__alt_data_end+0xfc0056c4>
 c005978:	3083ffcc 	andi	r2,r6,4095
 c00597c:	103f181e 	bne	r2,zero,c0055e0 <__alt_data_end+0xfc0055e0>
 c005980:	99000217 	ldw	r4,8(r19)
 c005984:	b545883a 	add	r2,r22,r21
 c005988:	10800054 	ori	r2,r2,1
 c00598c:	20800115 	stw	r2,4(r4)
 c005990:	003f3e06 	br	c00568c <__alt_data_end+0xfc00568c>
 c005994:	01003f84 	movi	r4,254
 c005998:	02001fc4 	movi	r8,127
 c00599c:	01c01f84 	movi	r7,126
 c0059a0:	003e4006 	br	c0052a4 <__alt_data_end+0xfc0052a4>
 c0059a4:	00830074 	movhi	r2,3073
 c0059a8:	10865804 	addi	r2,r2,6496
 c0059ac:	15000015 	stw	r20,0(r2)
 c0059b0:	003f1106 	br	c0055f8 <__alt_data_end+0xfc0055f8>
 c0059b4:	00800044 	movi	r2,1
 c0059b8:	002b883a 	mov	r21,zero
 c0059bc:	003f1f06 	br	c00563c <__alt_data_end+0xfc00563c>
 c0059c0:	81400204 	addi	r5,r16,8
 c0059c4:	9009883a 	mov	r4,r18
 c0059c8:	c004afc0 	call	c004afc <_free_r>
 c0059cc:	00830074 	movhi	r2,3073
 c0059d0:	108d3004 	addi	r2,r2,13504
 c0059d4:	10c00017 	ldw	r3,0(r2)
 c0059d8:	003f2c06 	br	c00568c <__alt_data_end+0xfc00568c>
 c0059dc:	00c05504 	movi	r3,340
 c0059e0:	18800536 	bltu	r3,r2,c0059f8 <_malloc_r+0x7cc>
 c0059e4:	3804d3fa 	srli	r2,r7,15
 c0059e8:	11401e04 	addi	r5,r2,120
 c0059ec:	10c01dc4 	addi	r3,r2,119
 c0059f0:	294b883a 	add	r5,r5,r5
 c0059f4:	003f5606 	br	c005750 <__alt_data_end+0xfc005750>
 c0059f8:	00c15504 	movi	r3,1364
 c0059fc:	18800536 	bltu	r3,r2,c005a14 <_malloc_r+0x7e8>
 c005a00:	3804d4ba 	srli	r2,r7,18
 c005a04:	11401f44 	addi	r5,r2,125
 c005a08:	10c01f04 	addi	r3,r2,124
 c005a0c:	294b883a 	add	r5,r5,r5
 c005a10:	003f4f06 	br	c005750 <__alt_data_end+0xfc005750>
 c005a14:	01403f84 	movi	r5,254
 c005a18:	00c01f84 	movi	r3,126
 c005a1c:	003f4c06 	br	c005750 <__alt_data_end+0xfc005750>
 c005a20:	98800117 	ldw	r2,4(r19)
 c005a24:	003fa006 	br	c0058a8 <__alt_data_end+0xfc0058a8>
 c005a28:	8808d0fa 	srli	r4,r17,3
 c005a2c:	20800044 	addi	r2,r4,1
 c005a30:	1085883a 	add	r2,r2,r2
 c005a34:	003e9006 	br	c005478 <__alt_data_end+0xfc005478>

0c005a38 <memchr>:
 c005a38:	208000cc 	andi	r2,r4,3
 c005a3c:	280f883a 	mov	r7,r5
 c005a40:	10003426 	beq	r2,zero,c005b14 <memchr+0xdc>
 c005a44:	30bfffc4 	addi	r2,r6,-1
 c005a48:	30001a26 	beq	r6,zero,c005ab4 <memchr+0x7c>
 c005a4c:	20c00003 	ldbu	r3,0(r4)
 c005a50:	29803fcc 	andi	r6,r5,255
 c005a54:	30c0051e 	bne	r6,r3,c005a6c <memchr+0x34>
 c005a58:	00001806 	br	c005abc <memchr+0x84>
 c005a5c:	10001526 	beq	r2,zero,c005ab4 <memchr+0x7c>
 c005a60:	20c00003 	ldbu	r3,0(r4)
 c005a64:	10bfffc4 	addi	r2,r2,-1
 c005a68:	30c01426 	beq	r6,r3,c005abc <memchr+0x84>
 c005a6c:	21000044 	addi	r4,r4,1
 c005a70:	20c000cc 	andi	r3,r4,3
 c005a74:	183ff91e 	bne	r3,zero,c005a5c <__alt_data_end+0xfc005a5c>
 c005a78:	020000c4 	movi	r8,3
 c005a7c:	40801136 	bltu	r8,r2,c005ac4 <memchr+0x8c>
 c005a80:	10000c26 	beq	r2,zero,c005ab4 <memchr+0x7c>
 c005a84:	20c00003 	ldbu	r3,0(r4)
 c005a88:	29403fcc 	andi	r5,r5,255
 c005a8c:	28c00b26 	beq	r5,r3,c005abc <memchr+0x84>
 c005a90:	20c00044 	addi	r3,r4,1
 c005a94:	39803fcc 	andi	r6,r7,255
 c005a98:	2089883a 	add	r4,r4,r2
 c005a9c:	00000306 	br	c005aac <memchr+0x74>
 c005aa0:	18c00044 	addi	r3,r3,1
 c005aa4:	197fffc3 	ldbu	r5,-1(r3)
 c005aa8:	31400526 	beq	r6,r5,c005ac0 <memchr+0x88>
 c005aac:	1805883a 	mov	r2,r3
 c005ab0:	20fffb1e 	bne	r4,r3,c005aa0 <__alt_data_end+0xfc005aa0>
 c005ab4:	0005883a 	mov	r2,zero
 c005ab8:	f800283a 	ret
 c005abc:	2005883a 	mov	r2,r4
 c005ac0:	f800283a 	ret
 c005ac4:	28c03fcc 	andi	r3,r5,255
 c005ac8:	1812923a 	slli	r9,r3,8
 c005acc:	02ffbff4 	movhi	r11,65279
 c005ad0:	02a02074 	movhi	r10,32897
 c005ad4:	48d2b03a 	or	r9,r9,r3
 c005ad8:	4806943a 	slli	r3,r9,16
 c005adc:	5affbfc4 	addi	r11,r11,-257
 c005ae0:	52a02004 	addi	r10,r10,-32640
 c005ae4:	48d2b03a 	or	r9,r9,r3
 c005ae8:	20c00017 	ldw	r3,0(r4)
 c005aec:	48c6f03a 	xor	r3,r9,r3
 c005af0:	1acd883a 	add	r6,r3,r11
 c005af4:	00c6303a 	nor	r3,zero,r3
 c005af8:	30c6703a 	and	r3,r6,r3
 c005afc:	1a86703a 	and	r3,r3,r10
 c005b00:	183fe01e 	bne	r3,zero,c005a84 <__alt_data_end+0xfc005a84>
 c005b04:	10bfff04 	addi	r2,r2,-4
 c005b08:	21000104 	addi	r4,r4,4
 c005b0c:	40bff636 	bltu	r8,r2,c005ae8 <__alt_data_end+0xfc005ae8>
 c005b10:	003fdb06 	br	c005a80 <__alt_data_end+0xfc005a80>
 c005b14:	3005883a 	mov	r2,r6
 c005b18:	003fd706 	br	c005a78 <__alt_data_end+0xfc005a78>

0c005b1c <memcpy>:
 c005b1c:	defffd04 	addi	sp,sp,-12
 c005b20:	dfc00215 	stw	ra,8(sp)
 c005b24:	dc400115 	stw	r17,4(sp)
 c005b28:	dc000015 	stw	r16,0(sp)
 c005b2c:	00c003c4 	movi	r3,15
 c005b30:	2005883a 	mov	r2,r4
 c005b34:	1980452e 	bgeu	r3,r6,c005c4c <memcpy+0x130>
 c005b38:	2906b03a 	or	r3,r5,r4
 c005b3c:	18c000cc 	andi	r3,r3,3
 c005b40:	1800441e 	bne	r3,zero,c005c54 <memcpy+0x138>
 c005b44:	347ffc04 	addi	r17,r6,-16
 c005b48:	8822d13a 	srli	r17,r17,4
 c005b4c:	28c00104 	addi	r3,r5,4
 c005b50:	23400104 	addi	r13,r4,4
 c005b54:	8820913a 	slli	r16,r17,4
 c005b58:	2b000204 	addi	r12,r5,8
 c005b5c:	22c00204 	addi	r11,r4,8
 c005b60:	84000504 	addi	r16,r16,20
 c005b64:	2a800304 	addi	r10,r5,12
 c005b68:	22400304 	addi	r9,r4,12
 c005b6c:	2c21883a 	add	r16,r5,r16
 c005b70:	2811883a 	mov	r8,r5
 c005b74:	200f883a 	mov	r7,r4
 c005b78:	41000017 	ldw	r4,0(r8)
 c005b7c:	1fc00017 	ldw	ra,0(r3)
 c005b80:	63c00017 	ldw	r15,0(r12)
 c005b84:	39000015 	stw	r4,0(r7)
 c005b88:	53800017 	ldw	r14,0(r10)
 c005b8c:	6fc00015 	stw	ra,0(r13)
 c005b90:	5bc00015 	stw	r15,0(r11)
 c005b94:	4b800015 	stw	r14,0(r9)
 c005b98:	18c00404 	addi	r3,r3,16
 c005b9c:	39c00404 	addi	r7,r7,16
 c005ba0:	42000404 	addi	r8,r8,16
 c005ba4:	6b400404 	addi	r13,r13,16
 c005ba8:	63000404 	addi	r12,r12,16
 c005bac:	5ac00404 	addi	r11,r11,16
 c005bb0:	52800404 	addi	r10,r10,16
 c005bb4:	4a400404 	addi	r9,r9,16
 c005bb8:	1c3fef1e 	bne	r3,r16,c005b78 <__alt_data_end+0xfc005b78>
 c005bbc:	89c00044 	addi	r7,r17,1
 c005bc0:	380e913a 	slli	r7,r7,4
 c005bc4:	310003cc 	andi	r4,r6,15
 c005bc8:	02c000c4 	movi	r11,3
 c005bcc:	11c7883a 	add	r3,r2,r7
 c005bd0:	29cb883a 	add	r5,r5,r7
 c005bd4:	5900212e 	bgeu	r11,r4,c005c5c <memcpy+0x140>
 c005bd8:	1813883a 	mov	r9,r3
 c005bdc:	2811883a 	mov	r8,r5
 c005be0:	200f883a 	mov	r7,r4
 c005be4:	42800017 	ldw	r10,0(r8)
 c005be8:	4a400104 	addi	r9,r9,4
 c005bec:	39ffff04 	addi	r7,r7,-4
 c005bf0:	4abfff15 	stw	r10,-4(r9)
 c005bf4:	42000104 	addi	r8,r8,4
 c005bf8:	59fffa36 	bltu	r11,r7,c005be4 <__alt_data_end+0xfc005be4>
 c005bfc:	213fff04 	addi	r4,r4,-4
 c005c00:	2008d0ba 	srli	r4,r4,2
 c005c04:	318000cc 	andi	r6,r6,3
 c005c08:	21000044 	addi	r4,r4,1
 c005c0c:	2109883a 	add	r4,r4,r4
 c005c10:	2109883a 	add	r4,r4,r4
 c005c14:	1907883a 	add	r3,r3,r4
 c005c18:	290b883a 	add	r5,r5,r4
 c005c1c:	30000626 	beq	r6,zero,c005c38 <memcpy+0x11c>
 c005c20:	198d883a 	add	r6,r3,r6
 c005c24:	29c00003 	ldbu	r7,0(r5)
 c005c28:	18c00044 	addi	r3,r3,1
 c005c2c:	29400044 	addi	r5,r5,1
 c005c30:	19ffffc5 	stb	r7,-1(r3)
 c005c34:	19bffb1e 	bne	r3,r6,c005c24 <__alt_data_end+0xfc005c24>
 c005c38:	dfc00217 	ldw	ra,8(sp)
 c005c3c:	dc400117 	ldw	r17,4(sp)
 c005c40:	dc000017 	ldw	r16,0(sp)
 c005c44:	dec00304 	addi	sp,sp,12
 c005c48:	f800283a 	ret
 c005c4c:	2007883a 	mov	r3,r4
 c005c50:	003ff206 	br	c005c1c <__alt_data_end+0xfc005c1c>
 c005c54:	2007883a 	mov	r3,r4
 c005c58:	003ff106 	br	c005c20 <__alt_data_end+0xfc005c20>
 c005c5c:	200d883a 	mov	r6,r4
 c005c60:	003fee06 	br	c005c1c <__alt_data_end+0xfc005c1c>

0c005c64 <memset>:
 c005c64:	20c000cc 	andi	r3,r4,3
 c005c68:	2005883a 	mov	r2,r4
 c005c6c:	18004426 	beq	r3,zero,c005d80 <memset+0x11c>
 c005c70:	31ffffc4 	addi	r7,r6,-1
 c005c74:	30004026 	beq	r6,zero,c005d78 <memset+0x114>
 c005c78:	2813883a 	mov	r9,r5
 c005c7c:	200d883a 	mov	r6,r4
 c005c80:	2007883a 	mov	r3,r4
 c005c84:	00000406 	br	c005c98 <memset+0x34>
 c005c88:	3a3fffc4 	addi	r8,r7,-1
 c005c8c:	31800044 	addi	r6,r6,1
 c005c90:	38003926 	beq	r7,zero,c005d78 <memset+0x114>
 c005c94:	400f883a 	mov	r7,r8
 c005c98:	18c00044 	addi	r3,r3,1
 c005c9c:	32400005 	stb	r9,0(r6)
 c005ca0:	1a0000cc 	andi	r8,r3,3
 c005ca4:	403ff81e 	bne	r8,zero,c005c88 <__alt_data_end+0xfc005c88>
 c005ca8:	010000c4 	movi	r4,3
 c005cac:	21c02d2e 	bgeu	r4,r7,c005d64 <memset+0x100>
 c005cb0:	29003fcc 	andi	r4,r5,255
 c005cb4:	200c923a 	slli	r6,r4,8
 c005cb8:	3108b03a 	or	r4,r6,r4
 c005cbc:	200c943a 	slli	r6,r4,16
 c005cc0:	218cb03a 	or	r6,r4,r6
 c005cc4:	010003c4 	movi	r4,15
 c005cc8:	21c0182e 	bgeu	r4,r7,c005d2c <memset+0xc8>
 c005ccc:	3b3ffc04 	addi	r12,r7,-16
 c005cd0:	6018d13a 	srli	r12,r12,4
 c005cd4:	1a000104 	addi	r8,r3,4
 c005cd8:	1ac00204 	addi	r11,r3,8
 c005cdc:	6008913a 	slli	r4,r12,4
 c005ce0:	1a800304 	addi	r10,r3,12
 c005ce4:	1813883a 	mov	r9,r3
 c005ce8:	21000504 	addi	r4,r4,20
 c005cec:	1909883a 	add	r4,r3,r4
 c005cf0:	49800015 	stw	r6,0(r9)
 c005cf4:	41800015 	stw	r6,0(r8)
 c005cf8:	59800015 	stw	r6,0(r11)
 c005cfc:	51800015 	stw	r6,0(r10)
 c005d00:	42000404 	addi	r8,r8,16
 c005d04:	4a400404 	addi	r9,r9,16
 c005d08:	5ac00404 	addi	r11,r11,16
 c005d0c:	52800404 	addi	r10,r10,16
 c005d10:	413ff71e 	bne	r8,r4,c005cf0 <__alt_data_end+0xfc005cf0>
 c005d14:	63000044 	addi	r12,r12,1
 c005d18:	6018913a 	slli	r12,r12,4
 c005d1c:	39c003cc 	andi	r7,r7,15
 c005d20:	010000c4 	movi	r4,3
 c005d24:	1b07883a 	add	r3,r3,r12
 c005d28:	21c00e2e 	bgeu	r4,r7,c005d64 <memset+0x100>
 c005d2c:	1813883a 	mov	r9,r3
 c005d30:	3811883a 	mov	r8,r7
 c005d34:	010000c4 	movi	r4,3
 c005d38:	49800015 	stw	r6,0(r9)
 c005d3c:	423fff04 	addi	r8,r8,-4
 c005d40:	4a400104 	addi	r9,r9,4
 c005d44:	223ffc36 	bltu	r4,r8,c005d38 <__alt_data_end+0xfc005d38>
 c005d48:	393fff04 	addi	r4,r7,-4
 c005d4c:	2008d0ba 	srli	r4,r4,2
 c005d50:	39c000cc 	andi	r7,r7,3
 c005d54:	21000044 	addi	r4,r4,1
 c005d58:	2109883a 	add	r4,r4,r4
 c005d5c:	2109883a 	add	r4,r4,r4
 c005d60:	1907883a 	add	r3,r3,r4
 c005d64:	38000526 	beq	r7,zero,c005d7c <memset+0x118>
 c005d68:	19cf883a 	add	r7,r3,r7
 c005d6c:	19400005 	stb	r5,0(r3)
 c005d70:	18c00044 	addi	r3,r3,1
 c005d74:	38fffd1e 	bne	r7,r3,c005d6c <__alt_data_end+0xfc005d6c>
 c005d78:	f800283a 	ret
 c005d7c:	f800283a 	ret
 c005d80:	2007883a 	mov	r3,r4
 c005d84:	300f883a 	mov	r7,r6
 c005d88:	003fc706 	br	c005ca8 <__alt_data_end+0xfc005ca8>

0c005d8c <_Balloc>:
 c005d8c:	20801317 	ldw	r2,76(r4)
 c005d90:	defffc04 	addi	sp,sp,-16
 c005d94:	dc400115 	stw	r17,4(sp)
 c005d98:	dc000015 	stw	r16,0(sp)
 c005d9c:	dfc00315 	stw	ra,12(sp)
 c005da0:	dc800215 	stw	r18,8(sp)
 c005da4:	2023883a 	mov	r17,r4
 c005da8:	2821883a 	mov	r16,r5
 c005dac:	10000f26 	beq	r2,zero,c005dec <_Balloc+0x60>
 c005db0:	8407883a 	add	r3,r16,r16
 c005db4:	18c7883a 	add	r3,r3,r3
 c005db8:	10c7883a 	add	r3,r2,r3
 c005dbc:	18800017 	ldw	r2,0(r3)
 c005dc0:	10001126 	beq	r2,zero,c005e08 <_Balloc+0x7c>
 c005dc4:	11000017 	ldw	r4,0(r2)
 c005dc8:	19000015 	stw	r4,0(r3)
 c005dcc:	10000415 	stw	zero,16(r2)
 c005dd0:	10000315 	stw	zero,12(r2)
 c005dd4:	dfc00317 	ldw	ra,12(sp)
 c005dd8:	dc800217 	ldw	r18,8(sp)
 c005ddc:	dc400117 	ldw	r17,4(sp)
 c005de0:	dc000017 	ldw	r16,0(sp)
 c005de4:	dec00404 	addi	sp,sp,16
 c005de8:	f800283a 	ret
 c005dec:	01800844 	movi	r6,33
 c005df0:	01400104 	movi	r5,4
 c005df4:	c0089680 	call	c008968 <_calloc_r>
 c005df8:	88801315 	stw	r2,76(r17)
 c005dfc:	103fec1e 	bne	r2,zero,c005db0 <__alt_data_end+0xfc005db0>
 c005e00:	0005883a 	mov	r2,zero
 c005e04:	003ff306 	br	c005dd4 <__alt_data_end+0xfc005dd4>
 c005e08:	01400044 	movi	r5,1
 c005e0c:	2c24983a 	sll	r18,r5,r16
 c005e10:	8809883a 	mov	r4,r17
 c005e14:	91800144 	addi	r6,r18,5
 c005e18:	318d883a 	add	r6,r6,r6
 c005e1c:	318d883a 	add	r6,r6,r6
 c005e20:	c0089680 	call	c008968 <_calloc_r>
 c005e24:	103ff626 	beq	r2,zero,c005e00 <__alt_data_end+0xfc005e00>
 c005e28:	14000115 	stw	r16,4(r2)
 c005e2c:	14800215 	stw	r18,8(r2)
 c005e30:	003fe606 	br	c005dcc <__alt_data_end+0xfc005dcc>

0c005e34 <_Bfree>:
 c005e34:	28000826 	beq	r5,zero,c005e58 <_Bfree+0x24>
 c005e38:	28c00117 	ldw	r3,4(r5)
 c005e3c:	20801317 	ldw	r2,76(r4)
 c005e40:	18c7883a 	add	r3,r3,r3
 c005e44:	18c7883a 	add	r3,r3,r3
 c005e48:	10c5883a 	add	r2,r2,r3
 c005e4c:	10c00017 	ldw	r3,0(r2)
 c005e50:	28c00015 	stw	r3,0(r5)
 c005e54:	11400015 	stw	r5,0(r2)
 c005e58:	f800283a 	ret

0c005e5c <__multadd>:
 c005e5c:	defff704 	addi	sp,sp,-36
 c005e60:	dc800215 	stw	r18,8(sp)
 c005e64:	2c800417 	ldw	r18,16(r5)
 c005e68:	dd800615 	stw	r22,24(sp)
 c005e6c:	dd400515 	stw	r21,20(sp)
 c005e70:	dd000415 	stw	r20,16(sp)
 c005e74:	dcc00315 	stw	r19,12(sp)
 c005e78:	dc400115 	stw	r17,4(sp)
 c005e7c:	dc000015 	stw	r16,0(sp)
 c005e80:	dfc00815 	stw	ra,32(sp)
 c005e84:	ddc00715 	stw	r23,28(sp)
 c005e88:	2827883a 	mov	r19,r5
 c005e8c:	2029883a 	mov	r20,r4
 c005e90:	3023883a 	mov	r17,r6
 c005e94:	3821883a 	mov	r16,r7
 c005e98:	2d400504 	addi	r21,r5,20
 c005e9c:	002d883a 	mov	r22,zero
 c005ea0:	adc00017 	ldw	r23,0(r21)
 c005ea4:	880b883a 	mov	r5,r17
 c005ea8:	ad400104 	addi	r21,r21,4
 c005eac:	b93fffcc 	andi	r4,r23,65535
 c005eb0:	c0005340 	call	c000534 <__mulsi3>
 c005eb4:	b808d43a 	srli	r4,r23,16
 c005eb8:	880b883a 	mov	r5,r17
 c005ebc:	1421883a 	add	r16,r2,r16
 c005ec0:	c0005340 	call	c000534 <__mulsi3>
 c005ec4:	800ed43a 	srli	r7,r16,16
 c005ec8:	80ffffcc 	andi	r3,r16,65535
 c005ecc:	b5800044 	addi	r22,r22,1
 c005ed0:	11c5883a 	add	r2,r2,r7
 c005ed4:	100e943a 	slli	r7,r2,16
 c005ed8:	1020d43a 	srli	r16,r2,16
 c005edc:	38c7883a 	add	r3,r7,r3
 c005ee0:	a8ffff15 	stw	r3,-4(r21)
 c005ee4:	b4bfee16 	blt	r22,r18,c005ea0 <__alt_data_end+0xfc005ea0>
 c005ee8:	80000926 	beq	r16,zero,c005f10 <__multadd+0xb4>
 c005eec:	98800217 	ldw	r2,8(r19)
 c005ef0:	9080130e 	bge	r18,r2,c005f40 <__multadd+0xe4>
 c005ef4:	90800144 	addi	r2,r18,5
 c005ef8:	1085883a 	add	r2,r2,r2
 c005efc:	1085883a 	add	r2,r2,r2
 c005f00:	9885883a 	add	r2,r19,r2
 c005f04:	14000015 	stw	r16,0(r2)
 c005f08:	94800044 	addi	r18,r18,1
 c005f0c:	9c800415 	stw	r18,16(r19)
 c005f10:	9805883a 	mov	r2,r19
 c005f14:	dfc00817 	ldw	ra,32(sp)
 c005f18:	ddc00717 	ldw	r23,28(sp)
 c005f1c:	dd800617 	ldw	r22,24(sp)
 c005f20:	dd400517 	ldw	r21,20(sp)
 c005f24:	dd000417 	ldw	r20,16(sp)
 c005f28:	dcc00317 	ldw	r19,12(sp)
 c005f2c:	dc800217 	ldw	r18,8(sp)
 c005f30:	dc400117 	ldw	r17,4(sp)
 c005f34:	dc000017 	ldw	r16,0(sp)
 c005f38:	dec00904 	addi	sp,sp,36
 c005f3c:	f800283a 	ret
 c005f40:	99400117 	ldw	r5,4(r19)
 c005f44:	a009883a 	mov	r4,r20
 c005f48:	29400044 	addi	r5,r5,1
 c005f4c:	c005d8c0 	call	c005d8c <_Balloc>
 c005f50:	99800417 	ldw	r6,16(r19)
 c005f54:	99400304 	addi	r5,r19,12
 c005f58:	11000304 	addi	r4,r2,12
 c005f5c:	31800084 	addi	r6,r6,2
 c005f60:	318d883a 	add	r6,r6,r6
 c005f64:	318d883a 	add	r6,r6,r6
 c005f68:	1023883a 	mov	r17,r2
 c005f6c:	c005b1c0 	call	c005b1c <memcpy>
 c005f70:	98000a26 	beq	r19,zero,c005f9c <__multadd+0x140>
 c005f74:	98c00117 	ldw	r3,4(r19)
 c005f78:	a0801317 	ldw	r2,76(r20)
 c005f7c:	18c7883a 	add	r3,r3,r3
 c005f80:	18c7883a 	add	r3,r3,r3
 c005f84:	10c5883a 	add	r2,r2,r3
 c005f88:	10c00017 	ldw	r3,0(r2)
 c005f8c:	98c00015 	stw	r3,0(r19)
 c005f90:	14c00015 	stw	r19,0(r2)
 c005f94:	8827883a 	mov	r19,r17
 c005f98:	003fd606 	br	c005ef4 <__alt_data_end+0xfc005ef4>
 c005f9c:	8827883a 	mov	r19,r17
 c005fa0:	003fd406 	br	c005ef4 <__alt_data_end+0xfc005ef4>

0c005fa4 <__s2b>:
 c005fa4:	defff904 	addi	sp,sp,-28
 c005fa8:	dc400115 	stw	r17,4(sp)
 c005fac:	dc000015 	stw	r16,0(sp)
 c005fb0:	2023883a 	mov	r17,r4
 c005fb4:	2821883a 	mov	r16,r5
 c005fb8:	39000204 	addi	r4,r7,8
 c005fbc:	01400244 	movi	r5,9
 c005fc0:	dcc00315 	stw	r19,12(sp)
 c005fc4:	dc800215 	stw	r18,8(sp)
 c005fc8:	dfc00615 	stw	ra,24(sp)
 c005fcc:	dd400515 	stw	r21,20(sp)
 c005fd0:	dd000415 	stw	r20,16(sp)
 c005fd4:	3825883a 	mov	r18,r7
 c005fd8:	3027883a 	mov	r19,r6
 c005fdc:	c00a9480 	call	c00a948 <__divsi3>
 c005fe0:	00c00044 	movi	r3,1
 c005fe4:	000b883a 	mov	r5,zero
 c005fe8:	1880030e 	bge	r3,r2,c005ff8 <__s2b+0x54>
 c005fec:	18c7883a 	add	r3,r3,r3
 c005ff0:	29400044 	addi	r5,r5,1
 c005ff4:	18bffd16 	blt	r3,r2,c005fec <__alt_data_end+0xfc005fec>
 c005ff8:	8809883a 	mov	r4,r17
 c005ffc:	c005d8c0 	call	c005d8c <_Balloc>
 c006000:	d8c00717 	ldw	r3,28(sp)
 c006004:	10c00515 	stw	r3,20(r2)
 c006008:	00c00044 	movi	r3,1
 c00600c:	10c00415 	stw	r3,16(r2)
 c006010:	00c00244 	movi	r3,9
 c006014:	1cc0210e 	bge	r3,r19,c00609c <__s2b+0xf8>
 c006018:	80eb883a 	add	r21,r16,r3
 c00601c:	a829883a 	mov	r20,r21
 c006020:	84e1883a 	add	r16,r16,r19
 c006024:	a1c00007 	ldb	r7,0(r20)
 c006028:	01800284 	movi	r6,10
 c00602c:	a5000044 	addi	r20,r20,1
 c006030:	100b883a 	mov	r5,r2
 c006034:	39fff404 	addi	r7,r7,-48
 c006038:	8809883a 	mov	r4,r17
 c00603c:	c005e5c0 	call	c005e5c <__multadd>
 c006040:	a43ff81e 	bne	r20,r16,c006024 <__alt_data_end+0xfc006024>
 c006044:	ace1883a 	add	r16,r21,r19
 c006048:	843ffe04 	addi	r16,r16,-8
 c00604c:	9c800a0e 	bge	r19,r18,c006078 <__s2b+0xd4>
 c006050:	94e5c83a 	sub	r18,r18,r19
 c006054:	84a5883a 	add	r18,r16,r18
 c006058:	81c00007 	ldb	r7,0(r16)
 c00605c:	01800284 	movi	r6,10
 c006060:	84000044 	addi	r16,r16,1
 c006064:	100b883a 	mov	r5,r2
 c006068:	39fff404 	addi	r7,r7,-48
 c00606c:	8809883a 	mov	r4,r17
 c006070:	c005e5c0 	call	c005e5c <__multadd>
 c006074:	84bff81e 	bne	r16,r18,c006058 <__alt_data_end+0xfc006058>
 c006078:	dfc00617 	ldw	ra,24(sp)
 c00607c:	dd400517 	ldw	r21,20(sp)
 c006080:	dd000417 	ldw	r20,16(sp)
 c006084:	dcc00317 	ldw	r19,12(sp)
 c006088:	dc800217 	ldw	r18,8(sp)
 c00608c:	dc400117 	ldw	r17,4(sp)
 c006090:	dc000017 	ldw	r16,0(sp)
 c006094:	dec00704 	addi	sp,sp,28
 c006098:	f800283a 	ret
 c00609c:	84000284 	addi	r16,r16,10
 c0060a0:	1827883a 	mov	r19,r3
 c0060a4:	003fe906 	br	c00604c <__alt_data_end+0xfc00604c>

0c0060a8 <__hi0bits>:
 c0060a8:	20bfffec 	andhi	r2,r4,65535
 c0060ac:	1000141e 	bne	r2,zero,c006100 <__hi0bits+0x58>
 c0060b0:	2008943a 	slli	r4,r4,16
 c0060b4:	00800404 	movi	r2,16
 c0060b8:	20ffc02c 	andhi	r3,r4,65280
 c0060bc:	1800021e 	bne	r3,zero,c0060c8 <__hi0bits+0x20>
 c0060c0:	2008923a 	slli	r4,r4,8
 c0060c4:	10800204 	addi	r2,r2,8
 c0060c8:	20fc002c 	andhi	r3,r4,61440
 c0060cc:	1800021e 	bne	r3,zero,c0060d8 <__hi0bits+0x30>
 c0060d0:	2008913a 	slli	r4,r4,4
 c0060d4:	10800104 	addi	r2,r2,4
 c0060d8:	20f0002c 	andhi	r3,r4,49152
 c0060dc:	1800031e 	bne	r3,zero,c0060ec <__hi0bits+0x44>
 c0060e0:	2109883a 	add	r4,r4,r4
 c0060e4:	10800084 	addi	r2,r2,2
 c0060e8:	2109883a 	add	r4,r4,r4
 c0060ec:	20000316 	blt	r4,zero,c0060fc <__hi0bits+0x54>
 c0060f0:	2110002c 	andhi	r4,r4,16384
 c0060f4:	2000041e 	bne	r4,zero,c006108 <__hi0bits+0x60>
 c0060f8:	00800804 	movi	r2,32
 c0060fc:	f800283a 	ret
 c006100:	0005883a 	mov	r2,zero
 c006104:	003fec06 	br	c0060b8 <__alt_data_end+0xfc0060b8>
 c006108:	10800044 	addi	r2,r2,1
 c00610c:	f800283a 	ret

0c006110 <__lo0bits>:
 c006110:	20c00017 	ldw	r3,0(r4)
 c006114:	188001cc 	andi	r2,r3,7
 c006118:	10000826 	beq	r2,zero,c00613c <__lo0bits+0x2c>
 c00611c:	1880004c 	andi	r2,r3,1
 c006120:	1000211e 	bne	r2,zero,c0061a8 <__lo0bits+0x98>
 c006124:	1880008c 	andi	r2,r3,2
 c006128:	1000211e 	bne	r2,zero,c0061b0 <__lo0bits+0xa0>
 c00612c:	1806d0ba 	srli	r3,r3,2
 c006130:	00800084 	movi	r2,2
 c006134:	20c00015 	stw	r3,0(r4)
 c006138:	f800283a 	ret
 c00613c:	18bfffcc 	andi	r2,r3,65535
 c006140:	10001326 	beq	r2,zero,c006190 <__lo0bits+0x80>
 c006144:	0005883a 	mov	r2,zero
 c006148:	19403fcc 	andi	r5,r3,255
 c00614c:	2800021e 	bne	r5,zero,c006158 <__lo0bits+0x48>
 c006150:	1806d23a 	srli	r3,r3,8
 c006154:	10800204 	addi	r2,r2,8
 c006158:	194003cc 	andi	r5,r3,15
 c00615c:	2800021e 	bne	r5,zero,c006168 <__lo0bits+0x58>
 c006160:	1806d13a 	srli	r3,r3,4
 c006164:	10800104 	addi	r2,r2,4
 c006168:	194000cc 	andi	r5,r3,3
 c00616c:	2800021e 	bne	r5,zero,c006178 <__lo0bits+0x68>
 c006170:	1806d0ba 	srli	r3,r3,2
 c006174:	10800084 	addi	r2,r2,2
 c006178:	1940004c 	andi	r5,r3,1
 c00617c:	2800081e 	bne	r5,zero,c0061a0 <__lo0bits+0x90>
 c006180:	1806d07a 	srli	r3,r3,1
 c006184:	1800051e 	bne	r3,zero,c00619c <__lo0bits+0x8c>
 c006188:	00800804 	movi	r2,32
 c00618c:	f800283a 	ret
 c006190:	1806d43a 	srli	r3,r3,16
 c006194:	00800404 	movi	r2,16
 c006198:	003feb06 	br	c006148 <__alt_data_end+0xfc006148>
 c00619c:	10800044 	addi	r2,r2,1
 c0061a0:	20c00015 	stw	r3,0(r4)
 c0061a4:	f800283a 	ret
 c0061a8:	0005883a 	mov	r2,zero
 c0061ac:	f800283a 	ret
 c0061b0:	1806d07a 	srli	r3,r3,1
 c0061b4:	00800044 	movi	r2,1
 c0061b8:	20c00015 	stw	r3,0(r4)
 c0061bc:	f800283a 	ret

0c0061c0 <__i2b>:
 c0061c0:	defffd04 	addi	sp,sp,-12
 c0061c4:	dc000015 	stw	r16,0(sp)
 c0061c8:	04000044 	movi	r16,1
 c0061cc:	dc400115 	stw	r17,4(sp)
 c0061d0:	2823883a 	mov	r17,r5
 c0061d4:	800b883a 	mov	r5,r16
 c0061d8:	dfc00215 	stw	ra,8(sp)
 c0061dc:	c005d8c0 	call	c005d8c <_Balloc>
 c0061e0:	14400515 	stw	r17,20(r2)
 c0061e4:	14000415 	stw	r16,16(r2)
 c0061e8:	dfc00217 	ldw	ra,8(sp)
 c0061ec:	dc400117 	ldw	r17,4(sp)
 c0061f0:	dc000017 	ldw	r16,0(sp)
 c0061f4:	dec00304 	addi	sp,sp,12
 c0061f8:	f800283a 	ret

0c0061fc <__multiply>:
 c0061fc:	deffef04 	addi	sp,sp,-68
 c006200:	dc400815 	stw	r17,32(sp)
 c006204:	dc000715 	stw	r16,28(sp)
 c006208:	34400417 	ldw	r17,16(r6)
 c00620c:	2c000417 	ldw	r16,16(r5)
 c006210:	dd800d15 	stw	r22,52(sp)
 c006214:	dc800915 	stw	r18,36(sp)
 c006218:	dfc01015 	stw	ra,64(sp)
 c00621c:	df000f15 	stw	fp,60(sp)
 c006220:	ddc00e15 	stw	r23,56(sp)
 c006224:	dd400c15 	stw	r21,48(sp)
 c006228:	dd000b15 	stw	r20,44(sp)
 c00622c:	dcc00a15 	stw	r19,40(sp)
 c006230:	2825883a 	mov	r18,r5
 c006234:	302d883a 	mov	r22,r6
 c006238:	8440050e 	bge	r16,r17,c006250 <__multiply+0x54>
 c00623c:	8007883a 	mov	r3,r16
 c006240:	3025883a 	mov	r18,r6
 c006244:	8821883a 	mov	r16,r17
 c006248:	282d883a 	mov	r22,r5
 c00624c:	1823883a 	mov	r17,r3
 c006250:	90800217 	ldw	r2,8(r18)
 c006254:	8447883a 	add	r3,r16,r17
 c006258:	d8c00215 	stw	r3,8(sp)
 c00625c:	91400117 	ldw	r5,4(r18)
 c006260:	10c0010e 	bge	r2,r3,c006268 <__multiply+0x6c>
 c006264:	29400044 	addi	r5,r5,1
 c006268:	c005d8c0 	call	c005d8c <_Balloc>
 c00626c:	d8c00217 	ldw	r3,8(sp)
 c006270:	d8800615 	stw	r2,24(sp)
 c006274:	18eb883a 	add	r21,r3,r3
 c006278:	ad6b883a 	add	r21,r21,r21
 c00627c:	10c00504 	addi	r3,r2,20
 c006280:	1d6b883a 	add	r21,r3,r21
 c006284:	d8c00115 	stw	r3,4(sp)
 c006288:	dd400315 	stw	r21,12(sp)
 c00628c:	1805883a 	mov	r2,r3
 c006290:	1d40042e 	bgeu	r3,r21,c0062a4 <__multiply+0xa8>
 c006294:	d8c00317 	ldw	r3,12(sp)
 c006298:	10000015 	stw	zero,0(r2)
 c00629c:	10800104 	addi	r2,r2,4
 c0062a0:	10fffc36 	bltu	r2,r3,c006294 <__alt_data_end+0xfc006294>
 c0062a4:	8c63883a 	add	r17,r17,r17
 c0062a8:	b5800504 	addi	r22,r22,20
 c0062ac:	8c63883a 	add	r17,r17,r17
 c0062b0:	94800504 	addi	r18,r18,20
 c0062b4:	8421883a 	add	r16,r16,r16
 c0062b8:	b463883a 	add	r17,r22,r17
 c0062bc:	8421883a 	add	r16,r16,r16
 c0062c0:	dd800015 	stw	r22,0(sp)
 c0062c4:	dc800415 	stw	r18,16(sp)
 c0062c8:	dc400515 	stw	r17,20(sp)
 c0062cc:	9429883a 	add	r20,r18,r16
 c0062d0:	b4404f2e 	bgeu	r22,r17,c006410 <__multiply+0x214>
 c0062d4:	d8c00017 	ldw	r3,0(sp)
 c0062d8:	1c800017 	ldw	r18,0(r3)
 c0062dc:	947fffcc 	andi	r17,r18,65535
 c0062e0:	88001e26 	beq	r17,zero,c00635c <__multiply+0x160>
 c0062e4:	dd800117 	ldw	r22,4(sp)
 c0062e8:	dd400417 	ldw	r21,16(sp)
 c0062ec:	0027883a 	mov	r19,zero
 c0062f0:	ac800017 	ldw	r18,0(r21)
 c0062f4:	b4000017 	ldw	r16,0(r22)
 c0062f8:	880b883a 	mov	r5,r17
 c0062fc:	913fffcc 	andi	r4,r18,65535
 c006300:	c0005340 	call	c000534 <__mulsi3>
 c006304:	9008d43a 	srli	r4,r18,16
 c006308:	84bfffcc 	andi	r18,r16,65535
 c00630c:	1485883a 	add	r2,r2,r18
 c006310:	14e5883a 	add	r18,r2,r19
 c006314:	8020d43a 	srli	r16,r16,16
 c006318:	9026d43a 	srli	r19,r18,16
 c00631c:	880b883a 	mov	r5,r17
 c006320:	c0005340 	call	c000534 <__mulsi3>
 c006324:	1405883a 	add	r2,r2,r16
 c006328:	14e1883a 	add	r16,r2,r19
 c00632c:	90ffffcc 	andi	r3,r18,65535
 c006330:	8024943a 	slli	r18,r16,16
 c006334:	ad400104 	addi	r21,r21,4
 c006338:	b005883a 	mov	r2,r22
 c00633c:	90c6b03a 	or	r3,r18,r3
 c006340:	b0c00015 	stw	r3,0(r22)
 c006344:	8026d43a 	srli	r19,r16,16
 c006348:	b5800104 	addi	r22,r22,4
 c00634c:	ad3fe836 	bltu	r21,r20,c0062f0 <__alt_data_end+0xfc0062f0>
 c006350:	d8c00017 	ldw	r3,0(sp)
 c006354:	14c00115 	stw	r19,4(r2)
 c006358:	1c800017 	ldw	r18,0(r3)
 c00635c:	9024d43a 	srli	r18,r18,16
 c006360:	90002226 	beq	r18,zero,c0063ec <__multiply+0x1f0>
 c006364:	d8c00117 	ldw	r3,4(sp)
 c006368:	dd800417 	ldw	r22,16(sp)
 c00636c:	002f883a 	mov	r23,zero
 c006370:	1f000017 	ldw	fp,0(r3)
 c006374:	1823883a 	mov	r17,r3
 c006378:	182b883a 	mov	r21,r3
 c00637c:	e021883a 	mov	r16,fp
 c006380:	00000106 	br	c006388 <__multiply+0x18c>
 c006384:	982b883a 	mov	r21,r19
 c006388:	b100000b 	ldhu	r4,0(r22)
 c00638c:	8020d43a 	srli	r16,r16,16
 c006390:	900b883a 	mov	r5,r18
 c006394:	c0005340 	call	c000534 <__mulsi3>
 c006398:	1405883a 	add	r2,r2,r16
 c00639c:	15ef883a 	add	r23,r2,r23
 c0063a0:	b804943a 	slli	r2,r23,16
 c0063a4:	e0ffffcc 	andi	r3,fp,65535
 c0063a8:	8c400104 	addi	r17,r17,4
 c0063ac:	10c6b03a 	or	r3,r2,r3
 c0063b0:	88ffff15 	stw	r3,-4(r17)
 c0063b4:	b5800104 	addi	r22,r22,4
 c0063b8:	b13fff17 	ldw	r4,-4(r22)
 c0063bc:	acc00104 	addi	r19,r21,4
 c0063c0:	900b883a 	mov	r5,r18
 c0063c4:	2008d43a 	srli	r4,r4,16
 c0063c8:	9c000017 	ldw	r16,0(r19)
 c0063cc:	c0005340 	call	c000534 <__mulsi3>
 c0063d0:	b806d43a 	srli	r3,r23,16
 c0063d4:	813fffcc 	andi	r4,r16,65535
 c0063d8:	1105883a 	add	r2,r2,r4
 c0063dc:	10f9883a 	add	fp,r2,r3
 c0063e0:	e02ed43a 	srli	r23,fp,16
 c0063e4:	b53fe736 	bltu	r22,r20,c006384 <__alt_data_end+0xfc006384>
 c0063e8:	af000115 	stw	fp,4(r21)
 c0063ec:	d8c00017 	ldw	r3,0(sp)
 c0063f0:	d9000517 	ldw	r4,20(sp)
 c0063f4:	18c00104 	addi	r3,r3,4
 c0063f8:	d8c00015 	stw	r3,0(sp)
 c0063fc:	d8c00117 	ldw	r3,4(sp)
 c006400:	18c00104 	addi	r3,r3,4
 c006404:	d8c00115 	stw	r3,4(sp)
 c006408:	d8c00017 	ldw	r3,0(sp)
 c00640c:	193fb136 	bltu	r3,r4,c0062d4 <__alt_data_end+0xfc0062d4>
 c006410:	d8c00217 	ldw	r3,8(sp)
 c006414:	00c00c0e 	bge	zero,r3,c006448 <__multiply+0x24c>
 c006418:	d8c00317 	ldw	r3,12(sp)
 c00641c:	18bfff17 	ldw	r2,-4(r3)
 c006420:	1d7fff04 	addi	r21,r3,-4
 c006424:	10000326 	beq	r2,zero,c006434 <__multiply+0x238>
 c006428:	00000706 	br	c006448 <__multiply+0x24c>
 c00642c:	a8800017 	ldw	r2,0(r21)
 c006430:	1000051e 	bne	r2,zero,c006448 <__multiply+0x24c>
 c006434:	d8c00217 	ldw	r3,8(sp)
 c006438:	ad7fff04 	addi	r21,r21,-4
 c00643c:	18ffffc4 	addi	r3,r3,-1
 c006440:	d8c00215 	stw	r3,8(sp)
 c006444:	183ff91e 	bne	r3,zero,c00642c <__alt_data_end+0xfc00642c>
 c006448:	d8c00617 	ldw	r3,24(sp)
 c00644c:	d9000217 	ldw	r4,8(sp)
 c006450:	1805883a 	mov	r2,r3
 c006454:	19000415 	stw	r4,16(r3)
 c006458:	dfc01017 	ldw	ra,64(sp)
 c00645c:	df000f17 	ldw	fp,60(sp)
 c006460:	ddc00e17 	ldw	r23,56(sp)
 c006464:	dd800d17 	ldw	r22,52(sp)
 c006468:	dd400c17 	ldw	r21,48(sp)
 c00646c:	dd000b17 	ldw	r20,44(sp)
 c006470:	dcc00a17 	ldw	r19,40(sp)
 c006474:	dc800917 	ldw	r18,36(sp)
 c006478:	dc400817 	ldw	r17,32(sp)
 c00647c:	dc000717 	ldw	r16,28(sp)
 c006480:	dec01104 	addi	sp,sp,68
 c006484:	f800283a 	ret

0c006488 <__pow5mult>:
 c006488:	defffa04 	addi	sp,sp,-24
 c00648c:	dcc00315 	stw	r19,12(sp)
 c006490:	dc000015 	stw	r16,0(sp)
 c006494:	dfc00515 	stw	ra,20(sp)
 c006498:	dd000415 	stw	r20,16(sp)
 c00649c:	dc800215 	stw	r18,8(sp)
 c0064a0:	dc400115 	stw	r17,4(sp)
 c0064a4:	308000cc 	andi	r2,r6,3
 c0064a8:	3021883a 	mov	r16,r6
 c0064ac:	2027883a 	mov	r19,r4
 c0064b0:	10002f1e 	bne	r2,zero,c006570 <__pow5mult+0xe8>
 c0064b4:	2825883a 	mov	r18,r5
 c0064b8:	8021d0ba 	srai	r16,r16,2
 c0064bc:	80001a26 	beq	r16,zero,c006528 <__pow5mult+0xa0>
 c0064c0:	9c401217 	ldw	r17,72(r19)
 c0064c4:	8800061e 	bne	r17,zero,c0064e0 <__pow5mult+0x58>
 c0064c8:	00003406 	br	c00659c <__pow5mult+0x114>
 c0064cc:	8021d07a 	srai	r16,r16,1
 c0064d0:	80001526 	beq	r16,zero,c006528 <__pow5mult+0xa0>
 c0064d4:	88800017 	ldw	r2,0(r17)
 c0064d8:	10001c26 	beq	r2,zero,c00654c <__pow5mult+0xc4>
 c0064dc:	1023883a 	mov	r17,r2
 c0064e0:	8080004c 	andi	r2,r16,1
 c0064e4:	103ff926 	beq	r2,zero,c0064cc <__alt_data_end+0xfc0064cc>
 c0064e8:	880d883a 	mov	r6,r17
 c0064ec:	900b883a 	mov	r5,r18
 c0064f0:	9809883a 	mov	r4,r19
 c0064f4:	c0061fc0 	call	c0061fc <__multiply>
 c0064f8:	90001b26 	beq	r18,zero,c006568 <__pow5mult+0xe0>
 c0064fc:	91000117 	ldw	r4,4(r18)
 c006500:	98c01317 	ldw	r3,76(r19)
 c006504:	8021d07a 	srai	r16,r16,1
 c006508:	2109883a 	add	r4,r4,r4
 c00650c:	2109883a 	add	r4,r4,r4
 c006510:	1907883a 	add	r3,r3,r4
 c006514:	19000017 	ldw	r4,0(r3)
 c006518:	91000015 	stw	r4,0(r18)
 c00651c:	1c800015 	stw	r18,0(r3)
 c006520:	1025883a 	mov	r18,r2
 c006524:	803feb1e 	bne	r16,zero,c0064d4 <__alt_data_end+0xfc0064d4>
 c006528:	9005883a 	mov	r2,r18
 c00652c:	dfc00517 	ldw	ra,20(sp)
 c006530:	dd000417 	ldw	r20,16(sp)
 c006534:	dcc00317 	ldw	r19,12(sp)
 c006538:	dc800217 	ldw	r18,8(sp)
 c00653c:	dc400117 	ldw	r17,4(sp)
 c006540:	dc000017 	ldw	r16,0(sp)
 c006544:	dec00604 	addi	sp,sp,24
 c006548:	f800283a 	ret
 c00654c:	880d883a 	mov	r6,r17
 c006550:	880b883a 	mov	r5,r17
 c006554:	9809883a 	mov	r4,r19
 c006558:	c0061fc0 	call	c0061fc <__multiply>
 c00655c:	88800015 	stw	r2,0(r17)
 c006560:	10000015 	stw	zero,0(r2)
 c006564:	003fdd06 	br	c0064dc <__alt_data_end+0xfc0064dc>
 c006568:	1025883a 	mov	r18,r2
 c00656c:	003fd706 	br	c0064cc <__alt_data_end+0xfc0064cc>
 c006570:	10bfffc4 	addi	r2,r2,-1
 c006574:	1085883a 	add	r2,r2,r2
 c006578:	00c30074 	movhi	r3,3073
 c00657c:	18ff0a04 	addi	r3,r3,-984
 c006580:	1085883a 	add	r2,r2,r2
 c006584:	1885883a 	add	r2,r3,r2
 c006588:	11800017 	ldw	r6,0(r2)
 c00658c:	000f883a 	mov	r7,zero
 c006590:	c005e5c0 	call	c005e5c <__multadd>
 c006594:	1025883a 	mov	r18,r2
 c006598:	003fc706 	br	c0064b8 <__alt_data_end+0xfc0064b8>
 c00659c:	05000044 	movi	r20,1
 c0065a0:	a00b883a 	mov	r5,r20
 c0065a4:	9809883a 	mov	r4,r19
 c0065a8:	c005d8c0 	call	c005d8c <_Balloc>
 c0065ac:	1023883a 	mov	r17,r2
 c0065b0:	00809c44 	movi	r2,625
 c0065b4:	88800515 	stw	r2,20(r17)
 c0065b8:	8d000415 	stw	r20,16(r17)
 c0065bc:	9c401215 	stw	r17,72(r19)
 c0065c0:	88000015 	stw	zero,0(r17)
 c0065c4:	003fc606 	br	c0064e0 <__alt_data_end+0xfc0064e0>

0c0065c8 <__lshift>:
 c0065c8:	defff904 	addi	sp,sp,-28
 c0065cc:	dd400515 	stw	r21,20(sp)
 c0065d0:	dcc00315 	stw	r19,12(sp)
 c0065d4:	302bd17a 	srai	r21,r6,5
 c0065d8:	2cc00417 	ldw	r19,16(r5)
 c0065dc:	28800217 	ldw	r2,8(r5)
 c0065e0:	dd000415 	stw	r20,16(sp)
 c0065e4:	ace7883a 	add	r19,r21,r19
 c0065e8:	dc800215 	stw	r18,8(sp)
 c0065ec:	dc400115 	stw	r17,4(sp)
 c0065f0:	dc000015 	stw	r16,0(sp)
 c0065f4:	dfc00615 	stw	ra,24(sp)
 c0065f8:	9c000044 	addi	r16,r19,1
 c0065fc:	2823883a 	mov	r17,r5
 c006600:	3029883a 	mov	r20,r6
 c006604:	2025883a 	mov	r18,r4
 c006608:	29400117 	ldw	r5,4(r5)
 c00660c:	1400030e 	bge	r2,r16,c00661c <__lshift+0x54>
 c006610:	1085883a 	add	r2,r2,r2
 c006614:	29400044 	addi	r5,r5,1
 c006618:	143ffd16 	blt	r2,r16,c006610 <__alt_data_end+0xfc006610>
 c00661c:	9009883a 	mov	r4,r18
 c006620:	c005d8c0 	call	c005d8c <_Balloc>
 c006624:	10c00504 	addi	r3,r2,20
 c006628:	0540070e 	bge	zero,r21,c006648 <__lshift+0x80>
 c00662c:	ad6b883a 	add	r21,r21,r21
 c006630:	ad6b883a 	add	r21,r21,r21
 c006634:	1809883a 	mov	r4,r3
 c006638:	1d47883a 	add	r3,r3,r21
 c00663c:	20000015 	stw	zero,0(r4)
 c006640:	21000104 	addi	r4,r4,4
 c006644:	193ffd1e 	bne	r3,r4,c00663c <__alt_data_end+0xfc00663c>
 c006648:	8a000417 	ldw	r8,16(r17)
 c00664c:	89000504 	addi	r4,r17,20
 c006650:	a18007cc 	andi	r6,r20,31
 c006654:	4211883a 	add	r8,r8,r8
 c006658:	4211883a 	add	r8,r8,r8
 c00665c:	2211883a 	add	r8,r4,r8
 c006660:	30002326 	beq	r6,zero,c0066f0 <__lshift+0x128>
 c006664:	02400804 	movi	r9,32
 c006668:	4993c83a 	sub	r9,r9,r6
 c00666c:	000b883a 	mov	r5,zero
 c006670:	21c00017 	ldw	r7,0(r4)
 c006674:	1815883a 	mov	r10,r3
 c006678:	18c00104 	addi	r3,r3,4
 c00667c:	398e983a 	sll	r7,r7,r6
 c006680:	21000104 	addi	r4,r4,4
 c006684:	394ab03a 	or	r5,r7,r5
 c006688:	197fff15 	stw	r5,-4(r3)
 c00668c:	217fff17 	ldw	r5,-4(r4)
 c006690:	2a4ad83a 	srl	r5,r5,r9
 c006694:	223ff636 	bltu	r4,r8,c006670 <__alt_data_end+0xfc006670>
 c006698:	51400115 	stw	r5,4(r10)
 c00669c:	28001a1e 	bne	r5,zero,c006708 <__lshift+0x140>
 c0066a0:	843fffc4 	addi	r16,r16,-1
 c0066a4:	14000415 	stw	r16,16(r2)
 c0066a8:	88000826 	beq	r17,zero,c0066cc <__lshift+0x104>
 c0066ac:	89000117 	ldw	r4,4(r17)
 c0066b0:	90c01317 	ldw	r3,76(r18)
 c0066b4:	2109883a 	add	r4,r4,r4
 c0066b8:	2109883a 	add	r4,r4,r4
 c0066bc:	1907883a 	add	r3,r3,r4
 c0066c0:	19000017 	ldw	r4,0(r3)
 c0066c4:	89000015 	stw	r4,0(r17)
 c0066c8:	1c400015 	stw	r17,0(r3)
 c0066cc:	dfc00617 	ldw	ra,24(sp)
 c0066d0:	dd400517 	ldw	r21,20(sp)
 c0066d4:	dd000417 	ldw	r20,16(sp)
 c0066d8:	dcc00317 	ldw	r19,12(sp)
 c0066dc:	dc800217 	ldw	r18,8(sp)
 c0066e0:	dc400117 	ldw	r17,4(sp)
 c0066e4:	dc000017 	ldw	r16,0(sp)
 c0066e8:	dec00704 	addi	sp,sp,28
 c0066ec:	f800283a 	ret
 c0066f0:	21400017 	ldw	r5,0(r4)
 c0066f4:	18c00104 	addi	r3,r3,4
 c0066f8:	21000104 	addi	r4,r4,4
 c0066fc:	197fff15 	stw	r5,-4(r3)
 c006700:	223ffb36 	bltu	r4,r8,c0066f0 <__alt_data_end+0xfc0066f0>
 c006704:	003fe606 	br	c0066a0 <__alt_data_end+0xfc0066a0>
 c006708:	9c000084 	addi	r16,r19,2
 c00670c:	003fe406 	br	c0066a0 <__alt_data_end+0xfc0066a0>

0c006710 <__mcmp>:
 c006710:	20800417 	ldw	r2,16(r4)
 c006714:	28c00417 	ldw	r3,16(r5)
 c006718:	10c5c83a 	sub	r2,r2,r3
 c00671c:	1000111e 	bne	r2,zero,c006764 <__mcmp+0x54>
 c006720:	18c7883a 	add	r3,r3,r3
 c006724:	18c7883a 	add	r3,r3,r3
 c006728:	21000504 	addi	r4,r4,20
 c00672c:	29400504 	addi	r5,r5,20
 c006730:	20c5883a 	add	r2,r4,r3
 c006734:	28cb883a 	add	r5,r5,r3
 c006738:	00000106 	br	c006740 <__mcmp+0x30>
 c00673c:	20800a2e 	bgeu	r4,r2,c006768 <__mcmp+0x58>
 c006740:	10bfff04 	addi	r2,r2,-4
 c006744:	297fff04 	addi	r5,r5,-4
 c006748:	11800017 	ldw	r6,0(r2)
 c00674c:	28c00017 	ldw	r3,0(r5)
 c006750:	30fffa26 	beq	r6,r3,c00673c <__alt_data_end+0xfc00673c>
 c006754:	30c00236 	bltu	r6,r3,c006760 <__mcmp+0x50>
 c006758:	00800044 	movi	r2,1
 c00675c:	f800283a 	ret
 c006760:	00bfffc4 	movi	r2,-1
 c006764:	f800283a 	ret
 c006768:	0005883a 	mov	r2,zero
 c00676c:	f800283a 	ret

0c006770 <__mdiff>:
 c006770:	28c00417 	ldw	r3,16(r5)
 c006774:	30800417 	ldw	r2,16(r6)
 c006778:	defffa04 	addi	sp,sp,-24
 c00677c:	dcc00315 	stw	r19,12(sp)
 c006780:	dc800215 	stw	r18,8(sp)
 c006784:	dfc00515 	stw	ra,20(sp)
 c006788:	dd000415 	stw	r20,16(sp)
 c00678c:	dc400115 	stw	r17,4(sp)
 c006790:	dc000015 	stw	r16,0(sp)
 c006794:	1887c83a 	sub	r3,r3,r2
 c006798:	2825883a 	mov	r18,r5
 c00679c:	3027883a 	mov	r19,r6
 c0067a0:	1800141e 	bne	r3,zero,c0067f4 <__mdiff+0x84>
 c0067a4:	1085883a 	add	r2,r2,r2
 c0067a8:	1085883a 	add	r2,r2,r2
 c0067ac:	2a000504 	addi	r8,r5,20
 c0067b0:	34000504 	addi	r16,r6,20
 c0067b4:	4087883a 	add	r3,r8,r2
 c0067b8:	8085883a 	add	r2,r16,r2
 c0067bc:	00000106 	br	c0067c4 <__mdiff+0x54>
 c0067c0:	40c0592e 	bgeu	r8,r3,c006928 <__mdiff+0x1b8>
 c0067c4:	18ffff04 	addi	r3,r3,-4
 c0067c8:	10bfff04 	addi	r2,r2,-4
 c0067cc:	19c00017 	ldw	r7,0(r3)
 c0067d0:	11400017 	ldw	r5,0(r2)
 c0067d4:	397ffa26 	beq	r7,r5,c0067c0 <__alt_data_end+0xfc0067c0>
 c0067d8:	3940592e 	bgeu	r7,r5,c006940 <__mdiff+0x1d0>
 c0067dc:	9005883a 	mov	r2,r18
 c0067e0:	4023883a 	mov	r17,r8
 c0067e4:	9825883a 	mov	r18,r19
 c0067e8:	05000044 	movi	r20,1
 c0067ec:	1027883a 	mov	r19,r2
 c0067f0:	00000406 	br	c006804 <__mdiff+0x94>
 c0067f4:	18005616 	blt	r3,zero,c006950 <__mdiff+0x1e0>
 c0067f8:	34400504 	addi	r17,r6,20
 c0067fc:	2c000504 	addi	r16,r5,20
 c006800:	0029883a 	mov	r20,zero
 c006804:	91400117 	ldw	r5,4(r18)
 c006808:	c005d8c0 	call	c005d8c <_Balloc>
 c00680c:	92400417 	ldw	r9,16(r18)
 c006810:	9b000417 	ldw	r12,16(r19)
 c006814:	12c00504 	addi	r11,r2,20
 c006818:	4a51883a 	add	r8,r9,r9
 c00681c:	6319883a 	add	r12,r12,r12
 c006820:	4211883a 	add	r8,r8,r8
 c006824:	6319883a 	add	r12,r12,r12
 c006828:	15000315 	stw	r20,12(r2)
 c00682c:	8211883a 	add	r8,r16,r8
 c006830:	8b19883a 	add	r12,r17,r12
 c006834:	0007883a 	mov	r3,zero
 c006838:	81400017 	ldw	r5,0(r16)
 c00683c:	89c00017 	ldw	r7,0(r17)
 c006840:	59800104 	addi	r6,r11,4
 c006844:	293fffcc 	andi	r4,r5,65535
 c006848:	20c7883a 	add	r3,r4,r3
 c00684c:	393fffcc 	andi	r4,r7,65535
 c006850:	1909c83a 	sub	r4,r3,r4
 c006854:	280ad43a 	srli	r5,r5,16
 c006858:	380ed43a 	srli	r7,r7,16
 c00685c:	2007d43a 	srai	r3,r4,16
 c006860:	213fffcc 	andi	r4,r4,65535
 c006864:	29cbc83a 	sub	r5,r5,r7
 c006868:	28c7883a 	add	r3,r5,r3
 c00686c:	180a943a 	slli	r5,r3,16
 c006870:	8c400104 	addi	r17,r17,4
 c006874:	84000104 	addi	r16,r16,4
 c006878:	2908b03a 	or	r4,r5,r4
 c00687c:	59000015 	stw	r4,0(r11)
 c006880:	1807d43a 	srai	r3,r3,16
 c006884:	3015883a 	mov	r10,r6
 c006888:	3017883a 	mov	r11,r6
 c00688c:	8b3fea36 	bltu	r17,r12,c006838 <__alt_data_end+0xfc006838>
 c006890:	8200162e 	bgeu	r16,r8,c0068ec <__mdiff+0x17c>
 c006894:	8017883a 	mov	r11,r16
 c006898:	59400017 	ldw	r5,0(r11)
 c00689c:	31800104 	addi	r6,r6,4
 c0068a0:	5ac00104 	addi	r11,r11,4
 c0068a4:	293fffcc 	andi	r4,r5,65535
 c0068a8:	20c7883a 	add	r3,r4,r3
 c0068ac:	280ed43a 	srli	r7,r5,16
 c0068b0:	180bd43a 	srai	r5,r3,16
 c0068b4:	193fffcc 	andi	r4,r3,65535
 c0068b8:	3947883a 	add	r3,r7,r5
 c0068bc:	180a943a 	slli	r5,r3,16
 c0068c0:	1807d43a 	srai	r3,r3,16
 c0068c4:	2908b03a 	or	r4,r5,r4
 c0068c8:	313fff15 	stw	r4,-4(r6)
 c0068cc:	5a3ff236 	bltu	r11,r8,c006898 <__alt_data_end+0xfc006898>
 c0068d0:	0406303a 	nor	r3,zero,r16
 c0068d4:	1a07883a 	add	r3,r3,r8
 c0068d8:	1806d0ba 	srli	r3,r3,2
 c0068dc:	18c00044 	addi	r3,r3,1
 c0068e0:	18c7883a 	add	r3,r3,r3
 c0068e4:	18c7883a 	add	r3,r3,r3
 c0068e8:	50d5883a 	add	r10,r10,r3
 c0068ec:	50ffff04 	addi	r3,r10,-4
 c0068f0:	2000041e 	bne	r4,zero,c006904 <__mdiff+0x194>
 c0068f4:	18ffff04 	addi	r3,r3,-4
 c0068f8:	19000017 	ldw	r4,0(r3)
 c0068fc:	4a7fffc4 	addi	r9,r9,-1
 c006900:	203ffc26 	beq	r4,zero,c0068f4 <__alt_data_end+0xfc0068f4>
 c006904:	12400415 	stw	r9,16(r2)
 c006908:	dfc00517 	ldw	ra,20(sp)
 c00690c:	dd000417 	ldw	r20,16(sp)
 c006910:	dcc00317 	ldw	r19,12(sp)
 c006914:	dc800217 	ldw	r18,8(sp)
 c006918:	dc400117 	ldw	r17,4(sp)
 c00691c:	dc000017 	ldw	r16,0(sp)
 c006920:	dec00604 	addi	sp,sp,24
 c006924:	f800283a 	ret
 c006928:	000b883a 	mov	r5,zero
 c00692c:	c005d8c0 	call	c005d8c <_Balloc>
 c006930:	00c00044 	movi	r3,1
 c006934:	10c00415 	stw	r3,16(r2)
 c006938:	10000515 	stw	zero,20(r2)
 c00693c:	003ff206 	br	c006908 <__alt_data_end+0xfc006908>
 c006940:	8023883a 	mov	r17,r16
 c006944:	0029883a 	mov	r20,zero
 c006948:	4021883a 	mov	r16,r8
 c00694c:	003fad06 	br	c006804 <__alt_data_end+0xfc006804>
 c006950:	9005883a 	mov	r2,r18
 c006954:	94400504 	addi	r17,r18,20
 c006958:	9c000504 	addi	r16,r19,20
 c00695c:	9825883a 	mov	r18,r19
 c006960:	05000044 	movi	r20,1
 c006964:	1027883a 	mov	r19,r2
 c006968:	003fa606 	br	c006804 <__alt_data_end+0xfc006804>

0c00696c <__ulp>:
 c00696c:	295ffc2c 	andhi	r5,r5,32752
 c006970:	00bf3034 	movhi	r2,64704
 c006974:	2887883a 	add	r3,r5,r2
 c006978:	00c0020e 	bge	zero,r3,c006984 <__ulp+0x18>
 c00697c:	0005883a 	mov	r2,zero
 c006980:	f800283a 	ret
 c006984:	00c7c83a 	sub	r3,zero,r3
 c006988:	1807d53a 	srai	r3,r3,20
 c00698c:	008004c4 	movi	r2,19
 c006990:	10c00b0e 	bge	r2,r3,c0069c0 <__ulp+0x54>
 c006994:	18bffb04 	addi	r2,r3,-20
 c006998:	01000784 	movi	r4,30
 c00699c:	0007883a 	mov	r3,zero
 c0069a0:	20800516 	blt	r4,r2,c0069b8 <__ulp+0x4c>
 c0069a4:	010007c4 	movi	r4,31
 c0069a8:	2089c83a 	sub	r4,r4,r2
 c0069ac:	00800044 	movi	r2,1
 c0069b0:	1104983a 	sll	r2,r2,r4
 c0069b4:	f800283a 	ret
 c0069b8:	00800044 	movi	r2,1
 c0069bc:	f800283a 	ret
 c0069c0:	01400234 	movhi	r5,8
 c0069c4:	28c7d83a 	sra	r3,r5,r3
 c0069c8:	0005883a 	mov	r2,zero
 c0069cc:	f800283a 	ret

0c0069d0 <__b2d>:
 c0069d0:	defffa04 	addi	sp,sp,-24
 c0069d4:	dc000015 	stw	r16,0(sp)
 c0069d8:	24000417 	ldw	r16,16(r4)
 c0069dc:	dc400115 	stw	r17,4(sp)
 c0069e0:	24400504 	addi	r17,r4,20
 c0069e4:	8421883a 	add	r16,r16,r16
 c0069e8:	8421883a 	add	r16,r16,r16
 c0069ec:	8c21883a 	add	r16,r17,r16
 c0069f0:	dc800215 	stw	r18,8(sp)
 c0069f4:	84bfff17 	ldw	r18,-4(r16)
 c0069f8:	dd000415 	stw	r20,16(sp)
 c0069fc:	dcc00315 	stw	r19,12(sp)
 c006a00:	9009883a 	mov	r4,r18
 c006a04:	2829883a 	mov	r20,r5
 c006a08:	dfc00515 	stw	ra,20(sp)
 c006a0c:	c0060a80 	call	c0060a8 <__hi0bits>
 c006a10:	00c00804 	movi	r3,32
 c006a14:	1889c83a 	sub	r4,r3,r2
 c006a18:	a1000015 	stw	r4,0(r20)
 c006a1c:	01000284 	movi	r4,10
 c006a20:	84ffff04 	addi	r19,r16,-4
 c006a24:	20801216 	blt	r4,r2,c006a70 <__b2d+0xa0>
 c006a28:	018002c4 	movi	r6,11
 c006a2c:	308dc83a 	sub	r6,r6,r2
 c006a30:	9186d83a 	srl	r3,r18,r6
 c006a34:	18cffc34 	orhi	r3,r3,16368
 c006a38:	8cc0212e 	bgeu	r17,r19,c006ac0 <__b2d+0xf0>
 c006a3c:	813ffe17 	ldw	r4,-8(r16)
 c006a40:	218cd83a 	srl	r6,r4,r6
 c006a44:	10800544 	addi	r2,r2,21
 c006a48:	9084983a 	sll	r2,r18,r2
 c006a4c:	1184b03a 	or	r2,r2,r6
 c006a50:	dfc00517 	ldw	ra,20(sp)
 c006a54:	dd000417 	ldw	r20,16(sp)
 c006a58:	dcc00317 	ldw	r19,12(sp)
 c006a5c:	dc800217 	ldw	r18,8(sp)
 c006a60:	dc400117 	ldw	r17,4(sp)
 c006a64:	dc000017 	ldw	r16,0(sp)
 c006a68:	dec00604 	addi	sp,sp,24
 c006a6c:	f800283a 	ret
 c006a70:	8cc00f2e 	bgeu	r17,r19,c006ab0 <__b2d+0xe0>
 c006a74:	117ffd44 	addi	r5,r2,-11
 c006a78:	80bffe17 	ldw	r2,-8(r16)
 c006a7c:	28000e26 	beq	r5,zero,c006ab8 <__b2d+0xe8>
 c006a80:	1949c83a 	sub	r4,r3,r5
 c006a84:	9164983a 	sll	r18,r18,r5
 c006a88:	1106d83a 	srl	r3,r2,r4
 c006a8c:	81bffe04 	addi	r6,r16,-8
 c006a90:	948ffc34 	orhi	r18,r18,16368
 c006a94:	90c6b03a 	or	r3,r18,r3
 c006a98:	89800e2e 	bgeu	r17,r6,c006ad4 <__b2d+0x104>
 c006a9c:	81bffd17 	ldw	r6,-12(r16)
 c006aa0:	1144983a 	sll	r2,r2,r5
 c006aa4:	310ad83a 	srl	r5,r6,r4
 c006aa8:	2884b03a 	or	r2,r5,r2
 c006aac:	003fe806 	br	c006a50 <__alt_data_end+0xfc006a50>
 c006ab0:	10bffd44 	addi	r2,r2,-11
 c006ab4:	1000041e 	bne	r2,zero,c006ac8 <__b2d+0xf8>
 c006ab8:	90cffc34 	orhi	r3,r18,16368
 c006abc:	003fe406 	br	c006a50 <__alt_data_end+0xfc006a50>
 c006ac0:	000d883a 	mov	r6,zero
 c006ac4:	003fdf06 	br	c006a44 <__alt_data_end+0xfc006a44>
 c006ac8:	90a4983a 	sll	r18,r18,r2
 c006acc:	0005883a 	mov	r2,zero
 c006ad0:	003ff906 	br	c006ab8 <__alt_data_end+0xfc006ab8>
 c006ad4:	1144983a 	sll	r2,r2,r5
 c006ad8:	003fdd06 	br	c006a50 <__alt_data_end+0xfc006a50>

0c006adc <__d2b>:
 c006adc:	defff804 	addi	sp,sp,-32
 c006ae0:	dc000215 	stw	r16,8(sp)
 c006ae4:	3021883a 	mov	r16,r6
 c006ae8:	dc400315 	stw	r17,12(sp)
 c006aec:	8022907a 	slli	r17,r16,1
 c006af0:	dd000615 	stw	r20,24(sp)
 c006af4:	2829883a 	mov	r20,r5
 c006af8:	01400044 	movi	r5,1
 c006afc:	dcc00515 	stw	r19,20(sp)
 c006b00:	dc800415 	stw	r18,16(sp)
 c006b04:	dfc00715 	stw	ra,28(sp)
 c006b08:	3825883a 	mov	r18,r7
 c006b0c:	8822d57a 	srli	r17,r17,21
 c006b10:	c005d8c0 	call	c005d8c <_Balloc>
 c006b14:	1027883a 	mov	r19,r2
 c006b18:	00800434 	movhi	r2,16
 c006b1c:	10bfffc4 	addi	r2,r2,-1
 c006b20:	808c703a 	and	r6,r16,r2
 c006b24:	88000126 	beq	r17,zero,c006b2c <__d2b+0x50>
 c006b28:	31800434 	orhi	r6,r6,16
 c006b2c:	d9800015 	stw	r6,0(sp)
 c006b30:	a0002426 	beq	r20,zero,c006bc4 <__d2b+0xe8>
 c006b34:	d9000104 	addi	r4,sp,4
 c006b38:	dd000115 	stw	r20,4(sp)
 c006b3c:	c0061100 	call	c006110 <__lo0bits>
 c006b40:	d8c00017 	ldw	r3,0(sp)
 c006b44:	10002f1e 	bne	r2,zero,c006c04 <__d2b+0x128>
 c006b48:	d9000117 	ldw	r4,4(sp)
 c006b4c:	99000515 	stw	r4,20(r19)
 c006b50:	1821003a 	cmpeq	r16,r3,zero
 c006b54:	01000084 	movi	r4,2
 c006b58:	2421c83a 	sub	r16,r4,r16
 c006b5c:	98c00615 	stw	r3,24(r19)
 c006b60:	9c000415 	stw	r16,16(r19)
 c006b64:	88001f1e 	bne	r17,zero,c006be4 <__d2b+0x108>
 c006b68:	10bef384 	addi	r2,r2,-1074
 c006b6c:	90800015 	stw	r2,0(r18)
 c006b70:	00900034 	movhi	r2,16384
 c006b74:	10bfffc4 	addi	r2,r2,-1
 c006b78:	8085883a 	add	r2,r16,r2
 c006b7c:	1085883a 	add	r2,r2,r2
 c006b80:	1085883a 	add	r2,r2,r2
 c006b84:	9885883a 	add	r2,r19,r2
 c006b88:	11000517 	ldw	r4,20(r2)
 c006b8c:	8020917a 	slli	r16,r16,5
 c006b90:	c0060a80 	call	c0060a8 <__hi0bits>
 c006b94:	d8c00817 	ldw	r3,32(sp)
 c006b98:	8085c83a 	sub	r2,r16,r2
 c006b9c:	18800015 	stw	r2,0(r3)
 c006ba0:	9805883a 	mov	r2,r19
 c006ba4:	dfc00717 	ldw	ra,28(sp)
 c006ba8:	dd000617 	ldw	r20,24(sp)
 c006bac:	dcc00517 	ldw	r19,20(sp)
 c006bb0:	dc800417 	ldw	r18,16(sp)
 c006bb4:	dc400317 	ldw	r17,12(sp)
 c006bb8:	dc000217 	ldw	r16,8(sp)
 c006bbc:	dec00804 	addi	sp,sp,32
 c006bc0:	f800283a 	ret
 c006bc4:	d809883a 	mov	r4,sp
 c006bc8:	c0061100 	call	c006110 <__lo0bits>
 c006bcc:	d8c00017 	ldw	r3,0(sp)
 c006bd0:	04000044 	movi	r16,1
 c006bd4:	9c000415 	stw	r16,16(r19)
 c006bd8:	98c00515 	stw	r3,20(r19)
 c006bdc:	10800804 	addi	r2,r2,32
 c006be0:	883fe126 	beq	r17,zero,c006b68 <__alt_data_end+0xfc006b68>
 c006be4:	00c00d44 	movi	r3,53
 c006be8:	8c7ef344 	addi	r17,r17,-1075
 c006bec:	88a3883a 	add	r17,r17,r2
 c006bf0:	1885c83a 	sub	r2,r3,r2
 c006bf4:	d8c00817 	ldw	r3,32(sp)
 c006bf8:	94400015 	stw	r17,0(r18)
 c006bfc:	18800015 	stw	r2,0(r3)
 c006c00:	003fe706 	br	c006ba0 <__alt_data_end+0xfc006ba0>
 c006c04:	01000804 	movi	r4,32
 c006c08:	2089c83a 	sub	r4,r4,r2
 c006c0c:	1908983a 	sll	r4,r3,r4
 c006c10:	d9400117 	ldw	r5,4(sp)
 c006c14:	1886d83a 	srl	r3,r3,r2
 c006c18:	2148b03a 	or	r4,r4,r5
 c006c1c:	99000515 	stw	r4,20(r19)
 c006c20:	d8c00015 	stw	r3,0(sp)
 c006c24:	003fca06 	br	c006b50 <__alt_data_end+0xfc006b50>

0c006c28 <__ratio>:
 c006c28:	defff904 	addi	sp,sp,-28
 c006c2c:	dc400315 	stw	r17,12(sp)
 c006c30:	2823883a 	mov	r17,r5
 c006c34:	d9400104 	addi	r5,sp,4
 c006c38:	dfc00615 	stw	ra,24(sp)
 c006c3c:	dcc00515 	stw	r19,20(sp)
 c006c40:	dc800415 	stw	r18,16(sp)
 c006c44:	2027883a 	mov	r19,r4
 c006c48:	dc000215 	stw	r16,8(sp)
 c006c4c:	c0069d00 	call	c0069d0 <__b2d>
 c006c50:	d80b883a 	mov	r5,sp
 c006c54:	8809883a 	mov	r4,r17
 c006c58:	1025883a 	mov	r18,r2
 c006c5c:	1821883a 	mov	r16,r3
 c006c60:	c0069d00 	call	c0069d0 <__b2d>
 c006c64:	8a000417 	ldw	r8,16(r17)
 c006c68:	99000417 	ldw	r4,16(r19)
 c006c6c:	d9400117 	ldw	r5,4(sp)
 c006c70:	2209c83a 	sub	r4,r4,r8
 c006c74:	2010917a 	slli	r8,r4,5
 c006c78:	d9000017 	ldw	r4,0(sp)
 c006c7c:	2909c83a 	sub	r4,r5,r4
 c006c80:	4109883a 	add	r4,r8,r4
 c006c84:	01000e0e 	bge	zero,r4,c006cc0 <__ratio+0x98>
 c006c88:	2008953a 	slli	r4,r4,20
 c006c8c:	2421883a 	add	r16,r4,r16
 c006c90:	100d883a 	mov	r6,r2
 c006c94:	180f883a 	mov	r7,r3
 c006c98:	9009883a 	mov	r4,r18
 c006c9c:	800b883a 	mov	r5,r16
 c006ca0:	c00b3a80 	call	c00b3a8 <__divdf3>
 c006ca4:	dfc00617 	ldw	ra,24(sp)
 c006ca8:	dcc00517 	ldw	r19,20(sp)
 c006cac:	dc800417 	ldw	r18,16(sp)
 c006cb0:	dc400317 	ldw	r17,12(sp)
 c006cb4:	dc000217 	ldw	r16,8(sp)
 c006cb8:	dec00704 	addi	sp,sp,28
 c006cbc:	f800283a 	ret
 c006cc0:	2008953a 	slli	r4,r4,20
 c006cc4:	1907c83a 	sub	r3,r3,r4
 c006cc8:	003ff106 	br	c006c90 <__alt_data_end+0xfc006c90>

0c006ccc <_mprec_log10>:
 c006ccc:	defffe04 	addi	sp,sp,-8
 c006cd0:	dc000015 	stw	r16,0(sp)
 c006cd4:	dfc00115 	stw	ra,4(sp)
 c006cd8:	008005c4 	movi	r2,23
 c006cdc:	2021883a 	mov	r16,r4
 c006ce0:	11000d0e 	bge	r2,r4,c006d18 <_mprec_log10+0x4c>
 c006ce4:	0005883a 	mov	r2,zero
 c006ce8:	00cffc34 	movhi	r3,16368
 c006cec:	843fffc4 	addi	r16,r16,-1
 c006cf0:	000d883a 	mov	r6,zero
 c006cf4:	01d00934 	movhi	r7,16420
 c006cf8:	1009883a 	mov	r4,r2
 c006cfc:	180b883a 	mov	r5,r3
 c006d00:	c00bfd00 	call	c00bfd0 <__muldf3>
 c006d04:	803ff91e 	bne	r16,zero,c006cec <__alt_data_end+0xfc006cec>
 c006d08:	dfc00117 	ldw	ra,4(sp)
 c006d0c:	dc000017 	ldw	r16,0(sp)
 c006d10:	dec00204 	addi	sp,sp,8
 c006d14:	f800283a 	ret
 c006d18:	202090fa 	slli	r16,r4,3
 c006d1c:	00830074 	movhi	r2,3073
 c006d20:	10bf2104 	addi	r2,r2,-892
 c006d24:	1421883a 	add	r16,r2,r16
 c006d28:	80800017 	ldw	r2,0(r16)
 c006d2c:	80c00117 	ldw	r3,4(r16)
 c006d30:	dfc00117 	ldw	ra,4(sp)
 c006d34:	dc000017 	ldw	r16,0(sp)
 c006d38:	dec00204 	addi	sp,sp,8
 c006d3c:	f800283a 	ret

0c006d40 <__copybits>:
 c006d40:	297fffc4 	addi	r5,r5,-1
 c006d44:	280fd17a 	srai	r7,r5,5
 c006d48:	30c00417 	ldw	r3,16(r6)
 c006d4c:	30800504 	addi	r2,r6,20
 c006d50:	39c00044 	addi	r7,r7,1
 c006d54:	18c7883a 	add	r3,r3,r3
 c006d58:	39cf883a 	add	r7,r7,r7
 c006d5c:	18c7883a 	add	r3,r3,r3
 c006d60:	39cf883a 	add	r7,r7,r7
 c006d64:	10c7883a 	add	r3,r2,r3
 c006d68:	21cf883a 	add	r7,r4,r7
 c006d6c:	10c00d2e 	bgeu	r2,r3,c006da4 <__copybits+0x64>
 c006d70:	200b883a 	mov	r5,r4
 c006d74:	12000017 	ldw	r8,0(r2)
 c006d78:	29400104 	addi	r5,r5,4
 c006d7c:	10800104 	addi	r2,r2,4
 c006d80:	2a3fff15 	stw	r8,-4(r5)
 c006d84:	10fffb36 	bltu	r2,r3,c006d74 <__alt_data_end+0xfc006d74>
 c006d88:	1985c83a 	sub	r2,r3,r6
 c006d8c:	10bffac4 	addi	r2,r2,-21
 c006d90:	1004d0ba 	srli	r2,r2,2
 c006d94:	10800044 	addi	r2,r2,1
 c006d98:	1085883a 	add	r2,r2,r2
 c006d9c:	1085883a 	add	r2,r2,r2
 c006da0:	2089883a 	add	r4,r4,r2
 c006da4:	21c0032e 	bgeu	r4,r7,c006db4 <__copybits+0x74>
 c006da8:	20000015 	stw	zero,0(r4)
 c006dac:	21000104 	addi	r4,r4,4
 c006db0:	21fffd36 	bltu	r4,r7,c006da8 <__alt_data_end+0xfc006da8>
 c006db4:	f800283a 	ret

0c006db8 <__any_on>:
 c006db8:	20c00417 	ldw	r3,16(r4)
 c006dbc:	2805d17a 	srai	r2,r5,5
 c006dc0:	21000504 	addi	r4,r4,20
 c006dc4:	18800d0e 	bge	r3,r2,c006dfc <__any_on+0x44>
 c006dc8:	18c7883a 	add	r3,r3,r3
 c006dcc:	18c7883a 	add	r3,r3,r3
 c006dd0:	20c7883a 	add	r3,r4,r3
 c006dd4:	20c0192e 	bgeu	r4,r3,c006e3c <__any_on+0x84>
 c006dd8:	18bfff17 	ldw	r2,-4(r3)
 c006ddc:	18ffff04 	addi	r3,r3,-4
 c006de0:	1000041e 	bne	r2,zero,c006df4 <__any_on+0x3c>
 c006de4:	20c0142e 	bgeu	r4,r3,c006e38 <__any_on+0x80>
 c006de8:	18ffff04 	addi	r3,r3,-4
 c006dec:	19400017 	ldw	r5,0(r3)
 c006df0:	283ffc26 	beq	r5,zero,c006de4 <__alt_data_end+0xfc006de4>
 c006df4:	00800044 	movi	r2,1
 c006df8:	f800283a 	ret
 c006dfc:	10c00a0e 	bge	r2,r3,c006e28 <__any_on+0x70>
 c006e00:	1085883a 	add	r2,r2,r2
 c006e04:	1085883a 	add	r2,r2,r2
 c006e08:	294007cc 	andi	r5,r5,31
 c006e0c:	2087883a 	add	r3,r4,r2
 c006e10:	283ff026 	beq	r5,zero,c006dd4 <__alt_data_end+0xfc006dd4>
 c006e14:	19800017 	ldw	r6,0(r3)
 c006e18:	3144d83a 	srl	r2,r6,r5
 c006e1c:	114a983a 	sll	r5,r2,r5
 c006e20:	317ff41e 	bne	r6,r5,c006df4 <__alt_data_end+0xfc006df4>
 c006e24:	003feb06 	br	c006dd4 <__alt_data_end+0xfc006dd4>
 c006e28:	1085883a 	add	r2,r2,r2
 c006e2c:	1085883a 	add	r2,r2,r2
 c006e30:	2087883a 	add	r3,r4,r2
 c006e34:	003fe706 	br	c006dd4 <__alt_data_end+0xfc006dd4>
 c006e38:	f800283a 	ret
 c006e3c:	0005883a 	mov	r2,zero
 c006e40:	f800283a 	ret

0c006e44 <__fpclassifyd>:
 c006e44:	00a00034 	movhi	r2,32768
 c006e48:	10bfffc4 	addi	r2,r2,-1
 c006e4c:	2884703a 	and	r2,r5,r2
 c006e50:	10000726 	beq	r2,zero,c006e70 <__fpclassifyd+0x2c>
 c006e54:	00fffc34 	movhi	r3,65520
 c006e58:	019ff834 	movhi	r6,32736
 c006e5c:	28c7883a 	add	r3,r5,r3
 c006e60:	31bfffc4 	addi	r6,r6,-1
 c006e64:	30c00536 	bltu	r6,r3,c006e7c <__fpclassifyd+0x38>
 c006e68:	00800104 	movi	r2,4
 c006e6c:	f800283a 	ret
 c006e70:	2000021e 	bne	r4,zero,c006e7c <__fpclassifyd+0x38>
 c006e74:	00800084 	movi	r2,2
 c006e78:	f800283a 	ret
 c006e7c:	00dffc34 	movhi	r3,32752
 c006e80:	019ff834 	movhi	r6,32736
 c006e84:	28cb883a 	add	r5,r5,r3
 c006e88:	31bfffc4 	addi	r6,r6,-1
 c006e8c:	317ff62e 	bgeu	r6,r5,c006e68 <__alt_data_end+0xfc006e68>
 c006e90:	01400434 	movhi	r5,16
 c006e94:	297fffc4 	addi	r5,r5,-1
 c006e98:	28800236 	bltu	r5,r2,c006ea4 <__fpclassifyd+0x60>
 c006e9c:	008000c4 	movi	r2,3
 c006ea0:	f800283a 	ret
 c006ea4:	10c00226 	beq	r2,r3,c006eb0 <__fpclassifyd+0x6c>
 c006ea8:	0005883a 	mov	r2,zero
 c006eac:	f800283a 	ret
 c006eb0:	2005003a 	cmpeq	r2,r4,zero
 c006eb4:	f800283a 	ret

0c006eb8 <_sbrk_r>:
 c006eb8:	defffd04 	addi	sp,sp,-12
 c006ebc:	dc000015 	stw	r16,0(sp)
 c006ec0:	04030074 	movhi	r16,3073
 c006ec4:	dc400115 	stw	r17,4(sp)
 c006ec8:	840d2804 	addi	r16,r16,13472
 c006ecc:	2023883a 	mov	r17,r4
 c006ed0:	2809883a 	mov	r4,r5
 c006ed4:	dfc00215 	stw	ra,8(sp)
 c006ed8:	80000015 	stw	zero,0(r16)
 c006edc:	c00db480 	call	c00db48 <sbrk>
 c006ee0:	00ffffc4 	movi	r3,-1
 c006ee4:	10c00526 	beq	r2,r3,c006efc <_sbrk_r+0x44>
 c006ee8:	dfc00217 	ldw	ra,8(sp)
 c006eec:	dc400117 	ldw	r17,4(sp)
 c006ef0:	dc000017 	ldw	r16,0(sp)
 c006ef4:	dec00304 	addi	sp,sp,12
 c006ef8:	f800283a 	ret
 c006efc:	80c00017 	ldw	r3,0(r16)
 c006f00:	183ff926 	beq	r3,zero,c006ee8 <__alt_data_end+0xfc006ee8>
 c006f04:	88c00015 	stw	r3,0(r17)
 c006f08:	003ff706 	br	c006ee8 <__alt_data_end+0xfc006ee8>

0c006f0c <__sread>:
 c006f0c:	defffe04 	addi	sp,sp,-8
 c006f10:	dc000015 	stw	r16,0(sp)
 c006f14:	2821883a 	mov	r16,r5
 c006f18:	2940038f 	ldh	r5,14(r5)
 c006f1c:	dfc00115 	stw	ra,4(sp)
 c006f20:	c0094840 	call	c009484 <_read_r>
 c006f24:	10000716 	blt	r2,zero,c006f44 <__sread+0x38>
 c006f28:	80c01417 	ldw	r3,80(r16)
 c006f2c:	1887883a 	add	r3,r3,r2
 c006f30:	80c01415 	stw	r3,80(r16)
 c006f34:	dfc00117 	ldw	ra,4(sp)
 c006f38:	dc000017 	ldw	r16,0(sp)
 c006f3c:	dec00204 	addi	sp,sp,8
 c006f40:	f800283a 	ret
 c006f44:	80c0030b 	ldhu	r3,12(r16)
 c006f48:	18fbffcc 	andi	r3,r3,61439
 c006f4c:	80c0030d 	sth	r3,12(r16)
 c006f50:	dfc00117 	ldw	ra,4(sp)
 c006f54:	dc000017 	ldw	r16,0(sp)
 c006f58:	dec00204 	addi	sp,sp,8
 c006f5c:	f800283a 	ret

0c006f60 <__seofread>:
 c006f60:	0005883a 	mov	r2,zero
 c006f64:	f800283a 	ret

0c006f68 <__swrite>:
 c006f68:	2880030b 	ldhu	r2,12(r5)
 c006f6c:	defffb04 	addi	sp,sp,-20
 c006f70:	dcc00315 	stw	r19,12(sp)
 c006f74:	dc800215 	stw	r18,8(sp)
 c006f78:	dc400115 	stw	r17,4(sp)
 c006f7c:	dc000015 	stw	r16,0(sp)
 c006f80:	dfc00415 	stw	ra,16(sp)
 c006f84:	10c0400c 	andi	r3,r2,256
 c006f88:	2821883a 	mov	r16,r5
 c006f8c:	2023883a 	mov	r17,r4
 c006f90:	3025883a 	mov	r18,r6
 c006f94:	3827883a 	mov	r19,r7
 c006f98:	18000526 	beq	r3,zero,c006fb0 <__swrite+0x48>
 c006f9c:	2940038f 	ldh	r5,14(r5)
 c006fa0:	01c00084 	movi	r7,2
 c006fa4:	000d883a 	mov	r6,zero
 c006fa8:	c0092c80 	call	c0092c8 <_lseek_r>
 c006fac:	8080030b 	ldhu	r2,12(r16)
 c006fb0:	8140038f 	ldh	r5,14(r16)
 c006fb4:	10bbffcc 	andi	r2,r2,61439
 c006fb8:	980f883a 	mov	r7,r19
 c006fbc:	900d883a 	mov	r6,r18
 c006fc0:	8809883a 	mov	r4,r17
 c006fc4:	8080030d 	sth	r2,12(r16)
 c006fc8:	dfc00417 	ldw	ra,16(sp)
 c006fcc:	dcc00317 	ldw	r19,12(sp)
 c006fd0:	dc800217 	ldw	r18,8(sp)
 c006fd4:	dc400117 	ldw	r17,4(sp)
 c006fd8:	dc000017 	ldw	r16,0(sp)
 c006fdc:	dec00504 	addi	sp,sp,20
 c006fe0:	c0088b41 	jmpi	c0088b4 <_write_r>

0c006fe4 <__sseek>:
 c006fe4:	defffe04 	addi	sp,sp,-8
 c006fe8:	dc000015 	stw	r16,0(sp)
 c006fec:	2821883a 	mov	r16,r5
 c006ff0:	2940038f 	ldh	r5,14(r5)
 c006ff4:	dfc00115 	stw	ra,4(sp)
 c006ff8:	c0092c80 	call	c0092c8 <_lseek_r>
 c006ffc:	00ffffc4 	movi	r3,-1
 c007000:	10c00826 	beq	r2,r3,c007024 <__sseek+0x40>
 c007004:	80c0030b 	ldhu	r3,12(r16)
 c007008:	80801415 	stw	r2,80(r16)
 c00700c:	18c40014 	ori	r3,r3,4096
 c007010:	80c0030d 	sth	r3,12(r16)
 c007014:	dfc00117 	ldw	ra,4(sp)
 c007018:	dc000017 	ldw	r16,0(sp)
 c00701c:	dec00204 	addi	sp,sp,8
 c007020:	f800283a 	ret
 c007024:	80c0030b 	ldhu	r3,12(r16)
 c007028:	18fbffcc 	andi	r3,r3,61439
 c00702c:	80c0030d 	sth	r3,12(r16)
 c007030:	dfc00117 	ldw	ra,4(sp)
 c007034:	dc000017 	ldw	r16,0(sp)
 c007038:	dec00204 	addi	sp,sp,8
 c00703c:	f800283a 	ret

0c007040 <__sclose>:
 c007040:	2940038f 	ldh	r5,14(r5)
 c007044:	c0089141 	jmpi	c008914 <_close_r>

0c007048 <strcmp>:
 c007048:	2144b03a 	or	r2,r4,r5
 c00704c:	108000cc 	andi	r2,r2,3
 c007050:	1000171e 	bne	r2,zero,c0070b0 <strcmp+0x68>
 c007054:	20800017 	ldw	r2,0(r4)
 c007058:	28c00017 	ldw	r3,0(r5)
 c00705c:	10c0141e 	bne	r2,r3,c0070b0 <strcmp+0x68>
 c007060:	027fbff4 	movhi	r9,65279
 c007064:	4a7fbfc4 	addi	r9,r9,-257
 c007068:	0086303a 	nor	r3,zero,r2
 c00706c:	02202074 	movhi	r8,32897
 c007070:	1245883a 	add	r2,r2,r9
 c007074:	42202004 	addi	r8,r8,-32640
 c007078:	10c4703a 	and	r2,r2,r3
 c00707c:	1204703a 	and	r2,r2,r8
 c007080:	10000226 	beq	r2,zero,c00708c <strcmp+0x44>
 c007084:	00002306 	br	c007114 <strcmp+0xcc>
 c007088:	1000221e 	bne	r2,zero,c007114 <strcmp+0xcc>
 c00708c:	21000104 	addi	r4,r4,4
 c007090:	20c00017 	ldw	r3,0(r4)
 c007094:	29400104 	addi	r5,r5,4
 c007098:	29800017 	ldw	r6,0(r5)
 c00709c:	1a4f883a 	add	r7,r3,r9
 c0070a0:	00c4303a 	nor	r2,zero,r3
 c0070a4:	3884703a 	and	r2,r7,r2
 c0070a8:	1204703a 	and	r2,r2,r8
 c0070ac:	19bff626 	beq	r3,r6,c007088 <__alt_data_end+0xfc007088>
 c0070b0:	20800003 	ldbu	r2,0(r4)
 c0070b4:	10c03fcc 	andi	r3,r2,255
 c0070b8:	18c0201c 	xori	r3,r3,128
 c0070bc:	18ffe004 	addi	r3,r3,-128
 c0070c0:	18000c26 	beq	r3,zero,c0070f4 <strcmp+0xac>
 c0070c4:	29800007 	ldb	r6,0(r5)
 c0070c8:	19800326 	beq	r3,r6,c0070d8 <strcmp+0x90>
 c0070cc:	00001306 	br	c00711c <strcmp+0xd4>
 c0070d0:	29800007 	ldb	r6,0(r5)
 c0070d4:	11800b1e 	bne	r2,r6,c007104 <strcmp+0xbc>
 c0070d8:	21000044 	addi	r4,r4,1
 c0070dc:	20c00003 	ldbu	r3,0(r4)
 c0070e0:	29400044 	addi	r5,r5,1
 c0070e4:	18803fcc 	andi	r2,r3,255
 c0070e8:	1080201c 	xori	r2,r2,128
 c0070ec:	10bfe004 	addi	r2,r2,-128
 c0070f0:	103ff71e 	bne	r2,zero,c0070d0 <__alt_data_end+0xfc0070d0>
 c0070f4:	0007883a 	mov	r3,zero
 c0070f8:	28800003 	ldbu	r2,0(r5)
 c0070fc:	1885c83a 	sub	r2,r3,r2
 c007100:	f800283a 	ret
 c007104:	28800003 	ldbu	r2,0(r5)
 c007108:	18c03fcc 	andi	r3,r3,255
 c00710c:	1885c83a 	sub	r2,r3,r2
 c007110:	f800283a 	ret
 c007114:	0005883a 	mov	r2,zero
 c007118:	f800283a 	ret
 c00711c:	10c03fcc 	andi	r3,r2,255
 c007120:	003ff506 	br	c0070f8 <__alt_data_end+0xfc0070f8>

0c007124 <strlen>:
 c007124:	208000cc 	andi	r2,r4,3
 c007128:	10002026 	beq	r2,zero,c0071ac <strlen+0x88>
 c00712c:	20800007 	ldb	r2,0(r4)
 c007130:	10002026 	beq	r2,zero,c0071b4 <strlen+0x90>
 c007134:	2005883a 	mov	r2,r4
 c007138:	00000206 	br	c007144 <strlen+0x20>
 c00713c:	10c00007 	ldb	r3,0(r2)
 c007140:	18001826 	beq	r3,zero,c0071a4 <strlen+0x80>
 c007144:	10800044 	addi	r2,r2,1
 c007148:	10c000cc 	andi	r3,r2,3
 c00714c:	183ffb1e 	bne	r3,zero,c00713c <__alt_data_end+0xfc00713c>
 c007150:	10c00017 	ldw	r3,0(r2)
 c007154:	01ffbff4 	movhi	r7,65279
 c007158:	39ffbfc4 	addi	r7,r7,-257
 c00715c:	00ca303a 	nor	r5,zero,r3
 c007160:	01a02074 	movhi	r6,32897
 c007164:	19c7883a 	add	r3,r3,r7
 c007168:	31a02004 	addi	r6,r6,-32640
 c00716c:	1946703a 	and	r3,r3,r5
 c007170:	1986703a 	and	r3,r3,r6
 c007174:	1800091e 	bne	r3,zero,c00719c <strlen+0x78>
 c007178:	10800104 	addi	r2,r2,4
 c00717c:	10c00017 	ldw	r3,0(r2)
 c007180:	19cb883a 	add	r5,r3,r7
 c007184:	00c6303a 	nor	r3,zero,r3
 c007188:	28c6703a 	and	r3,r5,r3
 c00718c:	1986703a 	and	r3,r3,r6
 c007190:	183ff926 	beq	r3,zero,c007178 <__alt_data_end+0xfc007178>
 c007194:	00000106 	br	c00719c <strlen+0x78>
 c007198:	10800044 	addi	r2,r2,1
 c00719c:	10c00007 	ldb	r3,0(r2)
 c0071a0:	183ffd1e 	bne	r3,zero,c007198 <__alt_data_end+0xfc007198>
 c0071a4:	1105c83a 	sub	r2,r2,r4
 c0071a8:	f800283a 	ret
 c0071ac:	2005883a 	mov	r2,r4
 c0071b0:	003fe706 	br	c007150 <__alt_data_end+0xfc007150>
 c0071b4:	0005883a 	mov	r2,zero
 c0071b8:	f800283a 	ret

0c0071bc <__sprint_r.part.0>:
 c0071bc:	28801917 	ldw	r2,100(r5)
 c0071c0:	defff604 	addi	sp,sp,-40
 c0071c4:	dd400515 	stw	r21,20(sp)
 c0071c8:	dfc00915 	stw	ra,36(sp)
 c0071cc:	df000815 	stw	fp,32(sp)
 c0071d0:	ddc00715 	stw	r23,28(sp)
 c0071d4:	dd800615 	stw	r22,24(sp)
 c0071d8:	dd000415 	stw	r20,16(sp)
 c0071dc:	dcc00315 	stw	r19,12(sp)
 c0071e0:	dc800215 	stw	r18,8(sp)
 c0071e4:	dc400115 	stw	r17,4(sp)
 c0071e8:	dc000015 	stw	r16,0(sp)
 c0071ec:	1088000c 	andi	r2,r2,8192
 c0071f0:	302b883a 	mov	r21,r6
 c0071f4:	10002e26 	beq	r2,zero,c0072b0 <__sprint_r.part.0+0xf4>
 c0071f8:	30800217 	ldw	r2,8(r6)
 c0071fc:	35800017 	ldw	r22,0(r6)
 c007200:	10002926 	beq	r2,zero,c0072a8 <__sprint_r.part.0+0xec>
 c007204:	2827883a 	mov	r19,r5
 c007208:	2029883a 	mov	r20,r4
 c00720c:	b5c00104 	addi	r23,r22,4
 c007210:	04bfffc4 	movi	r18,-1
 c007214:	bc400017 	ldw	r17,0(r23)
 c007218:	b4000017 	ldw	r16,0(r22)
 c00721c:	0039883a 	mov	fp,zero
 c007220:	8822d0ba 	srli	r17,r17,2
 c007224:	8800031e 	bne	r17,zero,c007234 <__sprint_r.part.0+0x78>
 c007228:	00001806 	br	c00728c <__sprint_r.part.0+0xd0>
 c00722c:	84000104 	addi	r16,r16,4
 c007230:	8f001526 	beq	r17,fp,c007288 <__sprint_r.part.0+0xcc>
 c007234:	81400017 	ldw	r5,0(r16)
 c007238:	980d883a 	mov	r6,r19
 c00723c:	a009883a 	mov	r4,r20
 c007240:	c008cac0 	call	c008cac <_fputwc_r>
 c007244:	e7000044 	addi	fp,fp,1
 c007248:	14bff81e 	bne	r2,r18,c00722c <__alt_data_end+0xfc00722c>
 c00724c:	9005883a 	mov	r2,r18
 c007250:	a8000215 	stw	zero,8(r21)
 c007254:	a8000115 	stw	zero,4(r21)
 c007258:	dfc00917 	ldw	ra,36(sp)
 c00725c:	df000817 	ldw	fp,32(sp)
 c007260:	ddc00717 	ldw	r23,28(sp)
 c007264:	dd800617 	ldw	r22,24(sp)
 c007268:	dd400517 	ldw	r21,20(sp)
 c00726c:	dd000417 	ldw	r20,16(sp)
 c007270:	dcc00317 	ldw	r19,12(sp)
 c007274:	dc800217 	ldw	r18,8(sp)
 c007278:	dc400117 	ldw	r17,4(sp)
 c00727c:	dc000017 	ldw	r16,0(sp)
 c007280:	dec00a04 	addi	sp,sp,40
 c007284:	f800283a 	ret
 c007288:	a8800217 	ldw	r2,8(r21)
 c00728c:	8c63883a 	add	r17,r17,r17
 c007290:	8c63883a 	add	r17,r17,r17
 c007294:	1445c83a 	sub	r2,r2,r17
 c007298:	a8800215 	stw	r2,8(r21)
 c00729c:	b5800204 	addi	r22,r22,8
 c0072a0:	bdc00204 	addi	r23,r23,8
 c0072a4:	103fdb1e 	bne	r2,zero,c007214 <__alt_data_end+0xfc007214>
 c0072a8:	0005883a 	mov	r2,zero
 c0072ac:	003fe806 	br	c007250 <__alt_data_end+0xfc007250>
 c0072b0:	c008dac0 	call	c008dac <__sfvwrite_r>
 c0072b4:	003fe606 	br	c007250 <__alt_data_end+0xfc007250>

0c0072b8 <__sprint_r>:
 c0072b8:	30c00217 	ldw	r3,8(r6)
 c0072bc:	18000126 	beq	r3,zero,c0072c4 <__sprint_r+0xc>
 c0072c0:	c0071bc1 	jmpi	c0071bc <__sprint_r.part.0>
 c0072c4:	30000115 	stw	zero,4(r6)
 c0072c8:	0005883a 	mov	r2,zero
 c0072cc:	f800283a 	ret

0c0072d0 <___vfiprintf_internal_r>:
 c0072d0:	deffca04 	addi	sp,sp,-216
 c0072d4:	dd403115 	stw	r21,196(sp)
 c0072d8:	dfc03515 	stw	ra,212(sp)
 c0072dc:	df003415 	stw	fp,208(sp)
 c0072e0:	ddc03315 	stw	r23,204(sp)
 c0072e4:	dd803215 	stw	r22,200(sp)
 c0072e8:	dd003015 	stw	r20,192(sp)
 c0072ec:	dcc02f15 	stw	r19,188(sp)
 c0072f0:	dc802e15 	stw	r18,184(sp)
 c0072f4:	dc402d15 	stw	r17,180(sp)
 c0072f8:	dc002c15 	stw	r16,176(sp)
 c0072fc:	d9002115 	stw	r4,132(sp)
 c007300:	d9402015 	stw	r5,128(sp)
 c007304:	d9c02215 	stw	r7,136(sp)
 c007308:	302b883a 	mov	r21,r6
 c00730c:	20000226 	beq	r4,zero,c007318 <___vfiprintf_internal_r+0x48>
 c007310:	20800e17 	ldw	r2,56(r4)
 c007314:	1000cf26 	beq	r2,zero,c007654 <___vfiprintf_internal_r+0x384>
 c007318:	d8c02017 	ldw	r3,128(sp)
 c00731c:	1880030b 	ldhu	r2,12(r3)
 c007320:	10c8000c 	andi	r3,r2,8192
 c007324:	1800071e 	bne	r3,zero,c007344 <___vfiprintf_internal_r+0x74>
 c007328:	d9402017 	ldw	r5,128(sp)
 c00732c:	00f7ffc4 	movi	r3,-8193
 c007330:	10880014 	ori	r2,r2,8192
 c007334:	29001917 	ldw	r4,100(r5)
 c007338:	2880030d 	sth	r2,12(r5)
 c00733c:	20c6703a 	and	r3,r4,r3
 c007340:	28c01915 	stw	r3,100(r5)
 c007344:	10c0020c 	andi	r3,r2,8
 c007348:	1800a526 	beq	r3,zero,c0075e0 <___vfiprintf_internal_r+0x310>
 c00734c:	d9002017 	ldw	r4,128(sp)
 c007350:	20c00417 	ldw	r3,16(r4)
 c007354:	1800a226 	beq	r3,zero,c0075e0 <___vfiprintf_internal_r+0x310>
 c007358:	1080068c 	andi	r2,r2,26
 c00735c:	00c00284 	movi	r3,10
 c007360:	10c0a826 	beq	r2,r3,c007604 <___vfiprintf_internal_r+0x334>
 c007364:	d9001a04 	addi	r4,sp,104
 c007368:	d94019c4 	addi	r5,sp,103
 c00736c:	04830074 	movhi	r18,3073
 c007370:	2145c83a 	sub	r2,r4,r5
 c007374:	94bf5304 	addi	r18,r18,-692
 c007378:	d9001e15 	stw	r4,120(sp)
 c00737c:	d9401f15 	stw	r5,124(sp)
 c007380:	dec01a15 	stw	sp,104(sp)
 c007384:	d8001c15 	stw	zero,112(sp)
 c007388:	d8001b15 	stw	zero,108(sp)
 c00738c:	d811883a 	mov	r8,sp
 c007390:	d8002615 	stw	zero,152(sp)
 c007394:	d8002415 	stw	zero,144(sp)
 c007398:	d8802815 	stw	r2,160(sp)
 c00739c:	a82d883a 	mov	r22,r21
 c0073a0:	b0800007 	ldb	r2,0(r22)
 c0073a4:	10040d26 	beq	r2,zero,c0083dc <___vfiprintf_internal_r+0x110c>
 c0073a8:	00c00944 	movi	r3,37
 c0073ac:	b029883a 	mov	r20,r22
 c0073b0:	10c0021e 	bne	r2,r3,c0073bc <___vfiprintf_internal_r+0xec>
 c0073b4:	00001606 	br	c007410 <___vfiprintf_internal_r+0x140>
 c0073b8:	10c00326 	beq	r2,r3,c0073c8 <___vfiprintf_internal_r+0xf8>
 c0073bc:	a5000044 	addi	r20,r20,1
 c0073c0:	a0800007 	ldb	r2,0(r20)
 c0073c4:	103ffc1e 	bne	r2,zero,c0073b8 <__alt_data_end+0xfc0073b8>
 c0073c8:	a5a1c83a 	sub	r16,r20,r22
 c0073cc:	80001026 	beq	r16,zero,c007410 <___vfiprintf_internal_r+0x140>
 c0073d0:	d8c01c17 	ldw	r3,112(sp)
 c0073d4:	d8801b17 	ldw	r2,108(sp)
 c0073d8:	45800015 	stw	r22,0(r8)
 c0073dc:	80c7883a 	add	r3,r16,r3
 c0073e0:	10800044 	addi	r2,r2,1
 c0073e4:	44000115 	stw	r16,4(r8)
 c0073e8:	d8c01c15 	stw	r3,112(sp)
 c0073ec:	d8801b15 	stw	r2,108(sp)
 c0073f0:	010001c4 	movi	r4,7
 c0073f4:	2080750e 	bge	r4,r2,c0075cc <___vfiprintf_internal_r+0x2fc>
 c0073f8:	1803951e 	bne	r3,zero,c008250 <___vfiprintf_internal_r+0xf80>
 c0073fc:	d8c02417 	ldw	r3,144(sp)
 c007400:	d8001b15 	stw	zero,108(sp)
 c007404:	d811883a 	mov	r8,sp
 c007408:	1c07883a 	add	r3,r3,r16
 c00740c:	d8c02415 	stw	r3,144(sp)
 c007410:	a0800007 	ldb	r2,0(r20)
 c007414:	1002e026 	beq	r2,zero,c007f98 <___vfiprintf_internal_r+0xcc8>
 c007418:	a5800044 	addi	r22,r20,1
 c00741c:	a0c00047 	ldb	r3,1(r20)
 c007420:	d8001d85 	stb	zero,118(sp)
 c007424:	0027883a 	mov	r19,zero
 c007428:	d8002305 	stb	zero,140(sp)
 c00742c:	043fffc4 	movi	r16,-1
 c007430:	d8002515 	stw	zero,148(sp)
 c007434:	0023883a 	mov	r17,zero
 c007438:	05001604 	movi	r20,88
 c00743c:	05400244 	movi	r21,9
 c007440:	402f883a 	mov	r23,r8
 c007444:	b5800044 	addi	r22,r22,1
 c007448:	18bff804 	addi	r2,r3,-32
 c00744c:	a0827736 	bltu	r20,r2,c007e2c <___vfiprintf_internal_r+0xb5c>
 c007450:	100490ba 	slli	r2,r2,2
 c007454:	01030034 	movhi	r4,3072
 c007458:	211d1a04 	addi	r4,r4,29800
 c00745c:	1105883a 	add	r2,r2,r4
 c007460:	10800017 	ldw	r2,0(r2)
 c007464:	1000683a 	jmp	r2
 c007468:	0c007b2c 	andhi	r16,at,492
 c00746c:	0c007e2c 	andhi	r16,at,504
 c007470:	0c007e2c 	andhi	r16,at,504
 c007474:	0c007b48 	cmpgei	r16,at,493
 c007478:	0c007e2c 	andhi	r16,at,504
 c00747c:	0c007e2c 	andhi	r16,at,504
 c007480:	0c007e2c 	andhi	r16,at,504
 c007484:	0c007e2c 	andhi	r16,at,504
 c007488:	0c007e2c 	andhi	r16,at,504
 c00748c:	0c007e2c 	andhi	r16,at,504
 c007490:	0c007d50 	cmplti	r16,at,501
 c007494:	0c007d74 	orhi	r16,at,501
 c007498:	0c007e2c 	andhi	r16,at,504
 c00749c:	0c00766c 	andhi	r16,at,473
 c0074a0:	0c007d88 	cmpgei	r16,at,502
 c0074a4:	0c007e2c 	andhi	r16,at,504
 c0074a8:	0c007b54 	ori	r16,at,493
 c0074ac:	0c007b60 	cmpeqi	r16,at,493
 c0074b0:	0c007b60 	cmpeqi	r16,at,493
 c0074b4:	0c007b60 	cmpeqi	r16,at,493
 c0074b8:	0c007b60 	cmpeqi	r16,at,493
 c0074bc:	0c007b60 	cmpeqi	r16,at,493
 c0074c0:	0c007b60 	cmpeqi	r16,at,493
 c0074c4:	0c007b60 	cmpeqi	r16,at,493
 c0074c8:	0c007b60 	cmpeqi	r16,at,493
 c0074cc:	0c007b60 	cmpeqi	r16,at,493
 c0074d0:	0c007e2c 	andhi	r16,at,504
 c0074d4:	0c007e2c 	andhi	r16,at,504
 c0074d8:	0c007e2c 	andhi	r16,at,504
 c0074dc:	0c007e2c 	andhi	r16,at,504
 c0074e0:	0c007e2c 	andhi	r16,at,504
 c0074e4:	0c007e2c 	andhi	r16,at,504
 c0074e8:	0c007e2c 	andhi	r16,at,504
 c0074ec:	0c007e2c 	andhi	r16,at,504
 c0074f0:	0c007e2c 	andhi	r16,at,504
 c0074f4:	0c007e2c 	andhi	r16,at,504
 c0074f8:	0c007ba0 	cmpeqi	r16,at,494
 c0074fc:	0c007e2c 	andhi	r16,at,504
 c007500:	0c007e2c 	andhi	r16,at,504
 c007504:	0c007e2c 	andhi	r16,at,504
 c007508:	0c007e2c 	andhi	r16,at,504
 c00750c:	0c007e2c 	andhi	r16,at,504
 c007510:	0c007e2c 	andhi	r16,at,504
 c007514:	0c007e2c 	andhi	r16,at,504
 c007518:	0c007e2c 	andhi	r16,at,504
 c00751c:	0c007e2c 	andhi	r16,at,504
 c007520:	0c007e2c 	andhi	r16,at,504
 c007524:	0c007bdc 	xori	r16,at,495
 c007528:	0c007e2c 	andhi	r16,at,504
 c00752c:	0c007e2c 	andhi	r16,at,504
 c007530:	0c007e2c 	andhi	r16,at,504
 c007534:	0c007e2c 	andhi	r16,at,504
 c007538:	0c007e2c 	andhi	r16,at,504
 c00753c:	0c007c38 	rdprs	r16,at,496
 c007540:	0c007e2c 	andhi	r16,at,504
 c007544:	0c007e2c 	andhi	r16,at,504
 c007548:	0c007cac 	andhi	r16,at,498
 c00754c:	0c007e2c 	andhi	r16,at,504
 c007550:	0c007e2c 	andhi	r16,at,504
 c007554:	0c007e2c 	andhi	r16,at,504
 c007558:	0c007e2c 	andhi	r16,at,504
 c00755c:	0c007e2c 	andhi	r16,at,504
 c007560:	0c007e2c 	andhi	r16,at,504
 c007564:	0c007e2c 	andhi	r16,at,504
 c007568:	0c007e2c 	andhi	r16,at,504
 c00756c:	0c007e2c 	andhi	r16,at,504
 c007570:	0c007e2c 	andhi	r16,at,504
 c007574:	0c007a54 	ori	r16,at,489
 c007578:	0c007a84 	addi	r16,at,490
 c00757c:	0c007e2c 	andhi	r16,at,504
 c007580:	0c007e2c 	andhi	r16,at,504
 c007584:	0c007e2c 	andhi	r16,at,504
 c007588:	0c007dd4 	ori	r16,at,503
 c00758c:	0c007a84 	addi	r16,at,490
 c007590:	0c007e2c 	andhi	r16,at,504
 c007594:	0c007e2c 	andhi	r16,at,504
 c007598:	0c00792c 	andhi	r16,at,484
 c00759c:	0c007e2c 	andhi	r16,at,504
 c0075a0:	0c007940 	call	c00794 <__alt_mem_onchip_memory2_0+0xc00794>
 c0075a4:	0c007978 	rdprs	r16,at,485
 c0075a8:	0c007678 	rdprs	r16,at,473
 c0075ac:	0c007920 	cmpeqi	r16,at,484
 c0075b0:	0c007e2c 	andhi	r16,at,504
 c0075b4:	0c007cec 	andhi	r16,at,499
 c0075b8:	0c007e2c 	andhi	r16,at,504
 c0075bc:	0c007d38 	rdprs	r16,at,500
 c0075c0:	0c007e2c 	andhi	r16,at,504
 c0075c4:	0c007e2c 	andhi	r16,at,504
 c0075c8:	0c0079fc 	xorhi	r16,at,487
 c0075cc:	42000204 	addi	r8,r8,8
 c0075d0:	d8c02417 	ldw	r3,144(sp)
 c0075d4:	1c07883a 	add	r3,r3,r16
 c0075d8:	d8c02415 	stw	r3,144(sp)
 c0075dc:	003f8c06 	br	c007410 <__alt_data_end+0xfc007410>
 c0075e0:	d9402017 	ldw	r5,128(sp)
 c0075e4:	d9002117 	ldw	r4,132(sp)
 c0075e8:	c00297c0 	call	c00297c <__swsetup_r>
 c0075ec:	1003c11e 	bne	r2,zero,c0084f4 <___vfiprintf_internal_r+0x1224>
 c0075f0:	d9402017 	ldw	r5,128(sp)
 c0075f4:	00c00284 	movi	r3,10
 c0075f8:	2880030b 	ldhu	r2,12(r5)
 c0075fc:	1080068c 	andi	r2,r2,26
 c007600:	10ff581e 	bne	r2,r3,c007364 <__alt_data_end+0xfc007364>
 c007604:	d8c02017 	ldw	r3,128(sp)
 c007608:	1880038f 	ldh	r2,14(r3)
 c00760c:	103f5516 	blt	r2,zero,c007364 <__alt_data_end+0xfc007364>
 c007610:	d9c02217 	ldw	r7,136(sp)
 c007614:	d9002117 	ldw	r4,132(sp)
 c007618:	a80d883a 	mov	r6,r21
 c00761c:	180b883a 	mov	r5,r3
 c007620:	c0087f80 	call	c0087f8 <__sbprintf>
 c007624:	dfc03517 	ldw	ra,212(sp)
 c007628:	df003417 	ldw	fp,208(sp)
 c00762c:	ddc03317 	ldw	r23,204(sp)
 c007630:	dd803217 	ldw	r22,200(sp)
 c007634:	dd403117 	ldw	r21,196(sp)
 c007638:	dd003017 	ldw	r20,192(sp)
 c00763c:	dcc02f17 	ldw	r19,188(sp)
 c007640:	dc802e17 	ldw	r18,184(sp)
 c007644:	dc402d17 	ldw	r17,180(sp)
 c007648:	dc002c17 	ldw	r16,176(sp)
 c00764c:	dec03604 	addi	sp,sp,216
 c007650:	f800283a 	ret
 c007654:	c0049880 	call	c004988 <__sinit>
 c007658:	003f2f06 	br	c007318 <__alt_data_end+0xfc007318>
 c00765c:	d8c02517 	ldw	r3,148(sp)
 c007660:	d8802215 	stw	r2,136(sp)
 c007664:	00c7c83a 	sub	r3,zero,r3
 c007668:	d8c02515 	stw	r3,148(sp)
 c00766c:	8c400114 	ori	r17,r17,4
 c007670:	b0c00007 	ldb	r3,0(r22)
 c007674:	003f7306 	br	c007444 <__alt_data_end+0xfc007444>
 c007678:	00800c04 	movi	r2,48
 c00767c:	d9402217 	ldw	r5,136(sp)
 c007680:	d8801d05 	stb	r2,116(sp)
 c007684:	00801e04 	movi	r2,120
 c007688:	d8801d45 	stb	r2,117(sp)
 c00768c:	d8001d85 	stb	zero,118(sp)
 c007690:	b811883a 	mov	r8,r23
 c007694:	28c00104 	addi	r3,r5,4
 c007698:	2cc00017 	ldw	r19,0(r5)
 c00769c:	0029883a 	mov	r20,zero
 c0076a0:	88800094 	ori	r2,r17,2
 c0076a4:	80032516 	blt	r16,zero,c00833c <___vfiprintf_internal_r+0x106c>
 c0076a8:	00bfdfc4 	movi	r2,-129
 c0076ac:	88a2703a 	and	r17,r17,r2
 c0076b0:	d8c02215 	stw	r3,136(sp)
 c0076b4:	8c400094 	ori	r17,r17,2
 c0076b8:	98032a1e 	bne	r19,zero,c008364 <___vfiprintf_internal_r+0x1094>
 c0076bc:	00830074 	movhi	r2,3073
 c0076c0:	10bef204 	addi	r2,r2,-1080
 c0076c4:	d8802615 	stw	r2,152(sp)
 c0076c8:	002b883a 	mov	r21,zero
 c0076cc:	8001741e 	bne	r16,zero,c007ca0 <___vfiprintf_internal_r+0x9d0>
 c0076d0:	0021883a 	mov	r16,zero
 c0076d4:	0029883a 	mov	r20,zero
 c0076d8:	ddc01a04 	addi	r23,sp,104
 c0076dc:	8027883a 	mov	r19,r16
 c0076e0:	8500010e 	bge	r16,r20,c0076e8 <___vfiprintf_internal_r+0x418>
 c0076e4:	a027883a 	mov	r19,r20
 c0076e8:	ad403fcc 	andi	r21,r21,255
 c0076ec:	ad40201c 	xori	r21,r21,128
 c0076f0:	ad7fe004 	addi	r21,r21,-128
 c0076f4:	a8000126 	beq	r21,zero,c0076fc <___vfiprintf_internal_r+0x42c>
 c0076f8:	9cc00044 	addi	r19,r19,1
 c0076fc:	89c0008c 	andi	r7,r17,2
 c007700:	38000126 	beq	r7,zero,c007708 <___vfiprintf_internal_r+0x438>
 c007704:	9cc00084 	addi	r19,r19,2
 c007708:	88c0210c 	andi	r3,r17,132
 c00770c:	1801dd1e 	bne	r3,zero,c007e84 <___vfiprintf_internal_r+0xbb4>
 c007710:	d9402517 	ldw	r5,148(sp)
 c007714:	2cebc83a 	sub	r21,r5,r19
 c007718:	0541da0e 	bge	zero,r21,c007e84 <___vfiprintf_internal_r+0xbb4>
 c00771c:	07000404 	movi	fp,16
 c007720:	d8801c17 	ldw	r2,112(sp)
 c007724:	e543be0e 	bge	fp,r21,c008620 <___vfiprintf_internal_r+0x1350>
 c007728:	01430074 	movhi	r5,3073
 c00772c:	297f5704 	addi	r5,r5,-676
 c007730:	dc002715 	stw	r16,156(sp)
 c007734:	d9801b17 	ldw	r6,108(sp)
 c007738:	a821883a 	mov	r16,r21
 c00773c:	d9402315 	stw	r5,140(sp)
 c007740:	028001c4 	movi	r10,7
 c007744:	d9c02915 	stw	r7,164(sp)
 c007748:	182b883a 	mov	r21,r3
 c00774c:	00000506 	br	c007764 <___vfiprintf_internal_r+0x494>
 c007750:	31000084 	addi	r4,r6,2
 c007754:	42000204 	addi	r8,r8,8
 c007758:	180d883a 	mov	r6,r3
 c00775c:	843ffc04 	addi	r16,r16,-16
 c007760:	e4000f0e 	bge	fp,r16,c0077a0 <___vfiprintf_internal_r+0x4d0>
 c007764:	01030074 	movhi	r4,3073
 c007768:	10800404 	addi	r2,r2,16
 c00776c:	30c00044 	addi	r3,r6,1
 c007770:	213f5704 	addi	r4,r4,-676
 c007774:	41000015 	stw	r4,0(r8)
 c007778:	47000115 	stw	fp,4(r8)
 c00777c:	d8801c15 	stw	r2,112(sp)
 c007780:	d8c01b15 	stw	r3,108(sp)
 c007784:	50fff20e 	bge	r10,r3,c007750 <__alt_data_end+0xfc007750>
 c007788:	1001b21e 	bne	r2,zero,c007e54 <___vfiprintf_internal_r+0xb84>
 c00778c:	843ffc04 	addi	r16,r16,-16
 c007790:	000d883a 	mov	r6,zero
 c007794:	01000044 	movi	r4,1
 c007798:	d811883a 	mov	r8,sp
 c00779c:	e43ff116 	blt	fp,r16,c007764 <__alt_data_end+0xfc007764>
 c0077a0:	a807883a 	mov	r3,r21
 c0077a4:	d9c02917 	ldw	r7,164(sp)
 c0077a8:	802b883a 	mov	r21,r16
 c0077ac:	dc002717 	ldw	r16,156(sp)
 c0077b0:	d9402317 	ldw	r5,140(sp)
 c0077b4:	a885883a 	add	r2,r21,r2
 c0077b8:	45400115 	stw	r21,4(r8)
 c0077bc:	41400015 	stw	r5,0(r8)
 c0077c0:	d8801c15 	stw	r2,112(sp)
 c0077c4:	d9001b15 	stw	r4,108(sp)
 c0077c8:	014001c4 	movi	r5,7
 c0077cc:	29026216 	blt	r5,r4,c008158 <___vfiprintf_internal_r+0xe88>
 c0077d0:	d9801d87 	ldb	r6,118(sp)
 c0077d4:	42000204 	addi	r8,r8,8
 c0077d8:	21400044 	addi	r5,r4,1
 c0077dc:	3001ae1e 	bne	r6,zero,c007e98 <___vfiprintf_internal_r+0xbc8>
 c0077e0:	3801bb26 	beq	r7,zero,c007ed0 <___vfiprintf_internal_r+0xc00>
 c0077e4:	d9001d04 	addi	r4,sp,116
 c0077e8:	10800084 	addi	r2,r2,2
 c0077ec:	41000015 	stw	r4,0(r8)
 c0077f0:	01000084 	movi	r4,2
 c0077f4:	41000115 	stw	r4,4(r8)
 c0077f8:	d8801c15 	stw	r2,112(sp)
 c0077fc:	d9401b15 	stw	r5,108(sp)
 c007800:	010001c4 	movi	r4,7
 c007804:	2142680e 	bge	r4,r5,c0081a8 <___vfiprintf_internal_r+0xed8>
 c007808:	1002b11e 	bne	r2,zero,c0082d0 <___vfiprintf_internal_r+0x1000>
 c00780c:	01802004 	movi	r6,128
 c007810:	01400044 	movi	r5,1
 c007814:	0009883a 	mov	r4,zero
 c007818:	d811883a 	mov	r8,sp
 c00781c:	1981ae1e 	bne	r3,r6,c007ed8 <___vfiprintf_internal_r+0xc08>
 c007820:	d8c02517 	ldw	r3,148(sp)
 c007824:	1cf9c83a 	sub	fp,r3,r19
 c007828:	0701ab0e 	bge	zero,fp,c007ed8 <___vfiprintf_internal_r+0xc08>
 c00782c:	05400404 	movi	r21,16
 c007830:	af03a90e 	bge	r21,fp,c0086d8 <___vfiprintf_internal_r+0x1408>
 c007834:	01430074 	movhi	r5,3073
 c007838:	297f5304 	addi	r5,r5,-692
 c00783c:	d9402315 	stw	r5,140(sp)
 c007840:	01c001c4 	movi	r7,7
 c007844:	00000506 	br	c00785c <___vfiprintf_internal_r+0x58c>
 c007848:	21800084 	addi	r6,r4,2
 c00784c:	42000204 	addi	r8,r8,8
 c007850:	1809883a 	mov	r4,r3
 c007854:	e73ffc04 	addi	fp,fp,-16
 c007858:	af000d0e 	bge	r21,fp,c007890 <___vfiprintf_internal_r+0x5c0>
 c00785c:	10800404 	addi	r2,r2,16
 c007860:	20c00044 	addi	r3,r4,1
 c007864:	44800015 	stw	r18,0(r8)
 c007868:	45400115 	stw	r21,4(r8)
 c00786c:	d8801c15 	stw	r2,112(sp)
 c007870:	d8c01b15 	stw	r3,108(sp)
 c007874:	38fff40e 	bge	r7,r3,c007848 <__alt_data_end+0xfc007848>
 c007878:	10022b1e 	bne	r2,zero,c008128 <___vfiprintf_internal_r+0xe58>
 c00787c:	e73ffc04 	addi	fp,fp,-16
 c007880:	01800044 	movi	r6,1
 c007884:	0009883a 	mov	r4,zero
 c007888:	d811883a 	mov	r8,sp
 c00788c:	af3ff316 	blt	r21,fp,c00785c <__alt_data_end+0xfc00785c>
 c007890:	d8c02317 	ldw	r3,140(sp)
 c007894:	1705883a 	add	r2,r2,fp
 c007898:	47000115 	stw	fp,4(r8)
 c00789c:	40c00015 	stw	r3,0(r8)
 c0078a0:	d8801c15 	stw	r2,112(sp)
 c0078a4:	d9801b15 	stw	r6,108(sp)
 c0078a8:	00c001c4 	movi	r3,7
 c0078ac:	19829416 	blt	r3,r6,c008300 <___vfiprintf_internal_r+0x1030>
 c0078b0:	8521c83a 	sub	r16,r16,r20
 c0078b4:	42000204 	addi	r8,r8,8
 c0078b8:	31400044 	addi	r5,r6,1
 c0078bc:	3009883a 	mov	r4,r6
 c0078c0:	04018716 	blt	zero,r16,c007ee0 <___vfiprintf_internal_r+0xc10>
 c0078c4:	a085883a 	add	r2,r20,r2
 c0078c8:	45c00015 	stw	r23,0(r8)
 c0078cc:	45000115 	stw	r20,4(r8)
 c0078d0:	d8801c15 	stw	r2,112(sp)
 c0078d4:	d9401b15 	stw	r5,108(sp)
 c0078d8:	00c001c4 	movi	r3,7
 c0078dc:	1941c20e 	bge	r3,r5,c007fe8 <___vfiprintf_internal_r+0xd18>
 c0078e0:	1002531e 	bne	r2,zero,c008230 <___vfiprintf_internal_r+0xf60>
 c0078e4:	d8001b15 	stw	zero,108(sp)
 c0078e8:	8c40010c 	andi	r17,r17,4
 c0078ec:	88023226 	beq	r17,zero,c0081b8 <___vfiprintf_internal_r+0xee8>
 c0078f0:	d9002517 	ldw	r4,148(sp)
 c0078f4:	24e3c83a 	sub	r17,r4,r19
 c0078f8:	04432916 	blt	zero,r17,c0085a0 <___vfiprintf_internal_r+0x12d0>
 c0078fc:	d8802517 	ldw	r2,148(sp)
 c007900:	14c0010e 	bge	r2,r19,c007908 <___vfiprintf_internal_r+0x638>
 c007904:	9805883a 	mov	r2,r19
 c007908:	d8c02417 	ldw	r3,144(sp)
 c00790c:	1887883a 	add	r3,r3,r2
 c007910:	d8c02415 	stw	r3,144(sp)
 c007914:	d8001b15 	stw	zero,108(sp)
 c007918:	d811883a 	mov	r8,sp
 c00791c:	003ea006 	br	c0073a0 <__alt_data_end+0xfc0073a0>
 c007920:	8c400814 	ori	r17,r17,32
 c007924:	b0c00007 	ldb	r3,0(r22)
 c007928:	003ec606 	br	c007444 <__alt_data_end+0xfc007444>
 c00792c:	b0c00007 	ldb	r3,0(r22)
 c007930:	00801b04 	movi	r2,108
 c007934:	18832026 	beq	r3,r2,c0085b8 <___vfiprintf_internal_r+0x12e8>
 c007938:	8c400414 	ori	r17,r17,16
 c00793c:	003ec106 	br	c007444 <__alt_data_end+0xfc007444>
 c007940:	9cc03fcc 	andi	r19,r19,255
 c007944:	b811883a 	mov	r8,r23
 c007948:	9803981e 	bne	r19,zero,c0087ac <___vfiprintf_internal_r+0x14dc>
 c00794c:	8880080c 	andi	r2,r17,32
 c007950:	1002be26 	beq	r2,zero,c00844c <___vfiprintf_internal_r+0x117c>
 c007954:	d9002217 	ldw	r4,136(sp)
 c007958:	d9402417 	ldw	r5,144(sp)
 c00795c:	20800017 	ldw	r2,0(r4)
 c007960:	2807d7fa 	srai	r3,r5,31
 c007964:	21000104 	addi	r4,r4,4
 c007968:	d9002215 	stw	r4,136(sp)
 c00796c:	11400015 	stw	r5,0(r2)
 c007970:	10c00115 	stw	r3,4(r2)
 c007974:	003e8a06 	br	c0073a0 <__alt_data_end+0xfc0073a0>
 c007978:	9cc03fcc 	andi	r19,r19,255
 c00797c:	b811883a 	mov	r8,r23
 c007980:	9803871e 	bne	r19,zero,c0087a0 <___vfiprintf_internal_r+0x14d0>
 c007984:	8880080c 	andi	r2,r17,32
 c007988:	10009a26 	beq	r2,zero,c007bf4 <___vfiprintf_internal_r+0x924>
 c00798c:	d9002217 	ldw	r4,136(sp)
 c007990:	d8001d85 	stb	zero,118(sp)
 c007994:	20800204 	addi	r2,r4,8
 c007998:	24c00017 	ldw	r19,0(r4)
 c00799c:	25000117 	ldw	r20,4(r4)
 c0079a0:	8002a416 	blt	r16,zero,c008434 <___vfiprintf_internal_r+0x1164>
 c0079a4:	013fdfc4 	movi	r4,-129
 c0079a8:	9d06b03a 	or	r3,r19,r20
 c0079ac:	d8802215 	stw	r2,136(sp)
 c0079b0:	8922703a 	and	r17,r17,r4
 c0079b4:	18009b26 	beq	r3,zero,c007c24 <___vfiprintf_internal_r+0x954>
 c0079b8:	002b883a 	mov	r21,zero
 c0079bc:	ddc01a04 	addi	r23,sp,104
 c0079c0:	9806d0fa 	srli	r3,r19,3
 c0079c4:	a008977a 	slli	r4,r20,29
 c0079c8:	a028d0fa 	srli	r20,r20,3
 c0079cc:	9cc001cc 	andi	r19,r19,7
 c0079d0:	98800c04 	addi	r2,r19,48
 c0079d4:	bdffffc4 	addi	r23,r23,-1
 c0079d8:	20e6b03a 	or	r19,r4,r3
 c0079dc:	b8800005 	stb	r2,0(r23)
 c0079e0:	9d06b03a 	or	r3,r19,r20
 c0079e4:	183ff61e 	bne	r3,zero,c0079c0 <__alt_data_end+0xfc0079c0>
 c0079e8:	88c0004c 	andi	r3,r17,1
 c0079ec:	18021f1e 	bne	r3,zero,c00826c <___vfiprintf_internal_r+0xf9c>
 c0079f0:	d9401e17 	ldw	r5,120(sp)
 c0079f4:	2de9c83a 	sub	r20,r5,r23
 c0079f8:	003f3806 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c0079fc:	9cc03fcc 	andi	r19,r19,255
 c007a00:	b811883a 	mov	r8,r23
 c007a04:	98034f1e 	bne	r19,zero,c008744 <___vfiprintf_internal_r+0x1474>
 c007a08:	00830074 	movhi	r2,3073
 c007a0c:	10bef204 	addi	r2,r2,-1080
 c007a10:	d8802615 	stw	r2,152(sp)
 c007a14:	8880080c 	andi	r2,r17,32
 c007a18:	1000ac26 	beq	r2,zero,c007ccc <___vfiprintf_internal_r+0x9fc>
 c007a1c:	d9002217 	ldw	r4,136(sp)
 c007a20:	24c00017 	ldw	r19,0(r4)
 c007a24:	25000117 	ldw	r20,4(r4)
 c007a28:	21000204 	addi	r4,r4,8
 c007a2c:	d9002215 	stw	r4,136(sp)
 c007a30:	8880004c 	andi	r2,r17,1
 c007a34:	1001e726 	beq	r2,zero,c0081d4 <___vfiprintf_internal_r+0xf04>
 c007a38:	9d04b03a 	or	r2,r19,r20
 c007a3c:	10025c1e 	bne	r2,zero,c0083b0 <___vfiprintf_internal_r+0x10e0>
 c007a40:	d8001d85 	stb	zero,118(sp)
 c007a44:	80024416 	blt	r16,zero,c008358 <___vfiprintf_internal_r+0x1088>
 c007a48:	00bfdfc4 	movi	r2,-129
 c007a4c:	88a2703a 	and	r17,r17,r2
 c007a50:	003f1d06 	br	c0076c8 <__alt_data_end+0xfc0076c8>
 c007a54:	d8c02217 	ldw	r3,136(sp)
 c007a58:	04c00044 	movi	r19,1
 c007a5c:	b811883a 	mov	r8,r23
 c007a60:	18800017 	ldw	r2,0(r3)
 c007a64:	18c00104 	addi	r3,r3,4
 c007a68:	d8001d85 	stb	zero,118(sp)
 c007a6c:	d8801005 	stb	r2,64(sp)
 c007a70:	d8c02215 	stw	r3,136(sp)
 c007a74:	9829883a 	mov	r20,r19
 c007a78:	ddc01004 	addi	r23,sp,64
 c007a7c:	0021883a 	mov	r16,zero
 c007a80:	003f1e06 	br	c0076fc <__alt_data_end+0xfc0076fc>
 c007a84:	9cc03fcc 	andi	r19,r19,255
 c007a88:	b811883a 	mov	r8,r23
 c007a8c:	9803331e 	bne	r19,zero,c00875c <___vfiprintf_internal_r+0x148c>
 c007a90:	8880080c 	andi	r2,r17,32
 c007a94:	10004826 	beq	r2,zero,c007bb8 <___vfiprintf_internal_r+0x8e8>
 c007a98:	d9002217 	ldw	r4,136(sp)
 c007a9c:	20800117 	ldw	r2,4(r4)
 c007aa0:	24c00017 	ldw	r19,0(r4)
 c007aa4:	21000204 	addi	r4,r4,8
 c007aa8:	d9002215 	stw	r4,136(sp)
 c007aac:	1029883a 	mov	r20,r2
 c007ab0:	10024c16 	blt	r2,zero,c0083e4 <___vfiprintf_internal_r+0x1114>
 c007ab4:	dd401d83 	ldbu	r21,118(sp)
 c007ab8:	80007116 	blt	r16,zero,c007c80 <___vfiprintf_internal_r+0x9b0>
 c007abc:	00ffdfc4 	movi	r3,-129
 c007ac0:	9d04b03a 	or	r2,r19,r20
 c007ac4:	88e2703a 	and	r17,r17,r3
 c007ac8:	1000d126 	beq	r2,zero,c007e10 <___vfiprintf_internal_r+0xb40>
 c007acc:	a0023526 	beq	r20,zero,c0083a4 <___vfiprintf_internal_r+0x10d4>
 c007ad0:	ddc01a04 	addi	r23,sp,104
 c007ad4:	4039883a 	mov	fp,r8
 c007ad8:	9809883a 	mov	r4,r19
 c007adc:	a00b883a 	mov	r5,r20
 c007ae0:	01800284 	movi	r6,10
 c007ae4:	000f883a 	mov	r7,zero
 c007ae8:	c00a3840 	call	c00a384 <__umoddi3>
 c007aec:	10800c04 	addi	r2,r2,48
 c007af0:	bdffffc4 	addi	r23,r23,-1
 c007af4:	9809883a 	mov	r4,r19
 c007af8:	a00b883a 	mov	r5,r20
 c007afc:	b8800005 	stb	r2,0(r23)
 c007b00:	01800284 	movi	r6,10
 c007b04:	000f883a 	mov	r7,zero
 c007b08:	c009d880 	call	c009d88 <__udivdi3>
 c007b0c:	1027883a 	mov	r19,r2
 c007b10:	10c4b03a 	or	r2,r2,r3
 c007b14:	1829883a 	mov	r20,r3
 c007b18:	103fef1e 	bne	r2,zero,c007ad8 <__alt_data_end+0xfc007ad8>
 c007b1c:	d9001e17 	ldw	r4,120(sp)
 c007b20:	e011883a 	mov	r8,fp
 c007b24:	25e9c83a 	sub	r20,r4,r23
 c007b28:	003eec06 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c007b2c:	d8802307 	ldb	r2,140(sp)
 c007b30:	1002361e 	bne	r2,zero,c00840c <___vfiprintf_internal_r+0x113c>
 c007b34:	00c00804 	movi	r3,32
 c007b38:	d8c02305 	stb	r3,140(sp)
 c007b3c:	04c00044 	movi	r19,1
 c007b40:	b0c00007 	ldb	r3,0(r22)
 c007b44:	003e3f06 	br	c007444 <__alt_data_end+0xfc007444>
 c007b48:	8c400054 	ori	r17,r17,1
 c007b4c:	b0c00007 	ldb	r3,0(r22)
 c007b50:	003e3c06 	br	c007444 <__alt_data_end+0xfc007444>
 c007b54:	8c402014 	ori	r17,r17,128
 c007b58:	b0c00007 	ldb	r3,0(r22)
 c007b5c:	003e3906 	br	c007444 <__alt_data_end+0xfc007444>
 c007b60:	dc002715 	stw	r16,156(sp)
 c007b64:	d8002515 	stw	zero,148(sp)
 c007b68:	1f3ff404 	addi	fp,r3,-48
 c007b6c:	0009883a 	mov	r4,zero
 c007b70:	b021883a 	mov	r16,r22
 c007b74:	01400284 	movi	r5,10
 c007b78:	c0005340 	call	c000534 <__mulsi3>
 c007b7c:	80c00007 	ldb	r3,0(r16)
 c007b80:	e089883a 	add	r4,fp,r2
 c007b84:	b5800044 	addi	r22,r22,1
 c007b88:	1f3ff404 	addi	fp,r3,-48
 c007b8c:	b021883a 	mov	r16,r22
 c007b90:	af3ff82e 	bgeu	r21,fp,c007b74 <__alt_data_end+0xfc007b74>
 c007b94:	d9002515 	stw	r4,148(sp)
 c007b98:	dc002717 	ldw	r16,156(sp)
 c007b9c:	003e2a06 	br	c007448 <__alt_data_end+0xfc007448>
 c007ba0:	9cc03fcc 	andi	r19,r19,255
 c007ba4:	b811883a 	mov	r8,r23
 c007ba8:	9802e91e 	bne	r19,zero,c008750 <___vfiprintf_internal_r+0x1480>
 c007bac:	8c400414 	ori	r17,r17,16
 c007bb0:	8880080c 	andi	r2,r17,32
 c007bb4:	103fb81e 	bne	r2,zero,c007a98 <__alt_data_end+0xfc007a98>
 c007bb8:	8880040c 	andi	r2,r17,16
 c007bbc:	10022e26 	beq	r2,zero,c008478 <___vfiprintf_internal_r+0x11a8>
 c007bc0:	d9402217 	ldw	r5,136(sp)
 c007bc4:	2cc00017 	ldw	r19,0(r5)
 c007bc8:	29400104 	addi	r5,r5,4
 c007bcc:	d9402215 	stw	r5,136(sp)
 c007bd0:	9829d7fa 	srai	r20,r19,31
 c007bd4:	a005883a 	mov	r2,r20
 c007bd8:	003fb506 	br	c007ab0 <__alt_data_end+0xfc007ab0>
 c007bdc:	9cc03fcc 	andi	r19,r19,255
 c007be0:	b811883a 	mov	r8,r23
 c007be4:	9802fa1e 	bne	r19,zero,c0087d0 <___vfiprintf_internal_r+0x1500>
 c007be8:	8c400414 	ori	r17,r17,16
 c007bec:	8880080c 	andi	r2,r17,32
 c007bf0:	103f661e 	bne	r2,zero,c00798c <__alt_data_end+0xfc00798c>
 c007bf4:	8880040c 	andi	r2,r17,16
 c007bf8:	10020626 	beq	r2,zero,c008414 <___vfiprintf_internal_r+0x1144>
 c007bfc:	d9402217 	ldw	r5,136(sp)
 c007c00:	d8001d85 	stb	zero,118(sp)
 c007c04:	0029883a 	mov	r20,zero
 c007c08:	28800104 	addi	r2,r5,4
 c007c0c:	2cc00017 	ldw	r19,0(r5)
 c007c10:	80020816 	blt	r16,zero,c008434 <___vfiprintf_internal_r+0x1164>
 c007c14:	00ffdfc4 	movi	r3,-129
 c007c18:	d8802215 	stw	r2,136(sp)
 c007c1c:	88e2703a 	and	r17,r17,r3
 c007c20:	983f651e 	bne	r19,zero,c0079b8 <__alt_data_end+0xfc0079b8>
 c007c24:	002b883a 	mov	r21,zero
 c007c28:	8002cf26 	beq	r16,zero,c008768 <___vfiprintf_internal_r+0x1498>
 c007c2c:	0027883a 	mov	r19,zero
 c007c30:	0029883a 	mov	r20,zero
 c007c34:	003f6106 	br	c0079bc <__alt_data_end+0xfc0079bc>
 c007c38:	9cc03fcc 	andi	r19,r19,255
 c007c3c:	b811883a 	mov	r8,r23
 c007c40:	9802e01e 	bne	r19,zero,c0087c4 <___vfiprintf_internal_r+0x14f4>
 c007c44:	8c400414 	ori	r17,r17,16
 c007c48:	8880080c 	andi	r2,r17,32
 c007c4c:	1000641e 	bne	r2,zero,c007de0 <___vfiprintf_internal_r+0xb10>
 c007c50:	8880040c 	andi	r2,r17,16
 c007c54:	1001c81e 	bne	r2,zero,c008378 <___vfiprintf_internal_r+0x10a8>
 c007c58:	8880100c 	andi	r2,r17,64
 c007c5c:	d8001d85 	stb	zero,118(sp)
 c007c60:	1002281e 	bne	r2,zero,c008504 <___vfiprintf_internal_r+0x1234>
 c007c64:	d9002217 	ldw	r4,136(sp)
 c007c68:	0029883a 	mov	r20,zero
 c007c6c:	20800104 	addi	r2,r4,4
 c007c70:	24c00017 	ldw	r19,0(r4)
 c007c74:	8001c60e 	bge	r16,zero,c008390 <___vfiprintf_internal_r+0x10c0>
 c007c78:	d8802215 	stw	r2,136(sp)
 c007c7c:	002b883a 	mov	r21,zero
 c007c80:	9d04b03a 	or	r2,r19,r20
 c007c84:	103f911e 	bne	r2,zero,c007acc <__alt_data_end+0xfc007acc>
 c007c88:	00800044 	movi	r2,1
 c007c8c:	10803fcc 	andi	r2,r2,255
 c007c90:	00c00044 	movi	r3,1
 c007c94:	10c05f26 	beq	r2,r3,c007e14 <___vfiprintf_internal_r+0xb44>
 c007c98:	00c00084 	movi	r3,2
 c007c9c:	10ffe31e 	bne	r2,r3,c007c2c <__alt_data_end+0xfc007c2c>
 c007ca0:	0027883a 	mov	r19,zero
 c007ca4:	0029883a 	mov	r20,zero
 c007ca8:	00015106 	br	c0081f0 <___vfiprintf_internal_r+0xf20>
 c007cac:	9cc03fcc 	andi	r19,r19,255
 c007cb0:	b811883a 	mov	r8,r23
 c007cb4:	9802c01e 	bne	r19,zero,c0087b8 <___vfiprintf_internal_r+0x14e8>
 c007cb8:	01430074 	movhi	r5,3073
 c007cbc:	297eed04 	addi	r5,r5,-1100
 c007cc0:	d9402615 	stw	r5,152(sp)
 c007cc4:	8880080c 	andi	r2,r17,32
 c007cc8:	103f541e 	bne	r2,zero,c007a1c <__alt_data_end+0xfc007a1c>
 c007ccc:	8880040c 	andi	r2,r17,16
 c007cd0:	1001f226 	beq	r2,zero,c00849c <___vfiprintf_internal_r+0x11cc>
 c007cd4:	d9402217 	ldw	r5,136(sp)
 c007cd8:	0029883a 	mov	r20,zero
 c007cdc:	2cc00017 	ldw	r19,0(r5)
 c007ce0:	29400104 	addi	r5,r5,4
 c007ce4:	d9402215 	stw	r5,136(sp)
 c007ce8:	003f5106 	br	c007a30 <__alt_data_end+0xfc007a30>
 c007cec:	d8c02217 	ldw	r3,136(sp)
 c007cf0:	b811883a 	mov	r8,r23
 c007cf4:	d8001d85 	stb	zero,118(sp)
 c007cf8:	1dc00017 	ldw	r23,0(r3)
 c007cfc:	1f000104 	addi	fp,r3,4
 c007d00:	b8025926 	beq	r23,zero,c008668 <___vfiprintf_internal_r+0x1398>
 c007d04:	80023316 	blt	r16,zero,c0085d4 <___vfiprintf_internal_r+0x1304>
 c007d08:	800d883a 	mov	r6,r16
 c007d0c:	000b883a 	mov	r5,zero
 c007d10:	b809883a 	mov	r4,r23
 c007d14:	da002a15 	stw	r8,168(sp)
 c007d18:	c005a380 	call	c005a38 <memchr>
 c007d1c:	da002a17 	ldw	r8,168(sp)
 c007d20:	10026826 	beq	r2,zero,c0086c4 <___vfiprintf_internal_r+0x13f4>
 c007d24:	15e9c83a 	sub	r20,r2,r23
 c007d28:	dd401d83 	ldbu	r21,118(sp)
 c007d2c:	df002215 	stw	fp,136(sp)
 c007d30:	0021883a 	mov	r16,zero
 c007d34:	003e6906 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c007d38:	9cc03fcc 	andi	r19,r19,255
 c007d3c:	b811883a 	mov	r8,r23
 c007d40:	983fc126 	beq	r19,zero,c007c48 <__alt_data_end+0xfc007c48>
 c007d44:	d8c02303 	ldbu	r3,140(sp)
 c007d48:	d8c01d85 	stb	r3,118(sp)
 c007d4c:	003fbe06 	br	c007c48 <__alt_data_end+0xfc007c48>
 c007d50:	d9002217 	ldw	r4,136(sp)
 c007d54:	d9402217 	ldw	r5,136(sp)
 c007d58:	21000017 	ldw	r4,0(r4)
 c007d5c:	28800104 	addi	r2,r5,4
 c007d60:	d9002515 	stw	r4,148(sp)
 c007d64:	203e3d16 	blt	r4,zero,c00765c <__alt_data_end+0xfc00765c>
 c007d68:	d8802215 	stw	r2,136(sp)
 c007d6c:	b0c00007 	ldb	r3,0(r22)
 c007d70:	003db406 	br	c007444 <__alt_data_end+0xfc007444>
 c007d74:	00c00ac4 	movi	r3,43
 c007d78:	d8c02305 	stb	r3,140(sp)
 c007d7c:	04c00044 	movi	r19,1
 c007d80:	b0c00007 	ldb	r3,0(r22)
 c007d84:	003daf06 	br	c007444 <__alt_data_end+0xfc007444>
 c007d88:	b0c00007 	ldb	r3,0(r22)
 c007d8c:	01000a84 	movi	r4,42
 c007d90:	b4000044 	addi	r16,r22,1
 c007d94:	19025e26 	beq	r3,r4,c008710 <___vfiprintf_internal_r+0x1440>
 c007d98:	1f3ff404 	addi	fp,r3,-48
 c007d9c:	0009883a 	mov	r4,zero
 c007da0:	af025236 	bltu	r21,fp,c0086ec <___vfiprintf_internal_r+0x141c>
 c007da4:	01400284 	movi	r5,10
 c007da8:	c0005340 	call	c000534 <__mulsi3>
 c007dac:	80c00007 	ldb	r3,0(r16)
 c007db0:	1709883a 	add	r4,r2,fp
 c007db4:	85800044 	addi	r22,r16,1
 c007db8:	1f3ff404 	addi	fp,r3,-48
 c007dbc:	b021883a 	mov	r16,r22
 c007dc0:	af3ff82e 	bgeu	r21,fp,c007da4 <__alt_data_end+0xfc007da4>
 c007dc4:	2021883a 	mov	r16,r4
 c007dc8:	203d9f0e 	bge	r4,zero,c007448 <__alt_data_end+0xfc007448>
 c007dcc:	043fffc4 	movi	r16,-1
 c007dd0:	003d9d06 	br	c007448 <__alt_data_end+0xfc007448>
 c007dd4:	8c401014 	ori	r17,r17,64
 c007dd8:	b0c00007 	ldb	r3,0(r22)
 c007ddc:	003d9906 	br	c007444 <__alt_data_end+0xfc007444>
 c007de0:	d9002217 	ldw	r4,136(sp)
 c007de4:	d8001d85 	stb	zero,118(sp)
 c007de8:	20c00204 	addi	r3,r4,8
 c007dec:	24c00017 	ldw	r19,0(r4)
 c007df0:	25000117 	ldw	r20,4(r4)
 c007df4:	8001e716 	blt	r16,zero,c008594 <___vfiprintf_internal_r+0x12c4>
 c007df8:	013fdfc4 	movi	r4,-129
 c007dfc:	9d04b03a 	or	r2,r19,r20
 c007e00:	d8c02215 	stw	r3,136(sp)
 c007e04:	8922703a 	and	r17,r17,r4
 c007e08:	002b883a 	mov	r21,zero
 c007e0c:	103f2f1e 	bne	r2,zero,c007acc <__alt_data_end+0xfc007acc>
 c007e10:	803e2f26 	beq	r16,zero,c0076d0 <__alt_data_end+0xfc0076d0>
 c007e14:	0027883a 	mov	r19,zero
 c007e18:	9cc00c04 	addi	r19,r19,48
 c007e1c:	dcc019c5 	stb	r19,103(sp)
 c007e20:	dd002817 	ldw	r20,160(sp)
 c007e24:	ddc019c4 	addi	r23,sp,103
 c007e28:	003e2c06 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c007e2c:	9cc03fcc 	andi	r19,r19,255
 c007e30:	b811883a 	mov	r8,r23
 c007e34:	9802571e 	bne	r19,zero,c008794 <___vfiprintf_internal_r+0x14c4>
 c007e38:	18005726 	beq	r3,zero,c007f98 <___vfiprintf_internal_r+0xcc8>
 c007e3c:	04c00044 	movi	r19,1
 c007e40:	d8c01005 	stb	r3,64(sp)
 c007e44:	d8001d85 	stb	zero,118(sp)
 c007e48:	9829883a 	mov	r20,r19
 c007e4c:	ddc01004 	addi	r23,sp,64
 c007e50:	003f0a06 	br	c007a7c <__alt_data_end+0xfc007a7c>
 c007e54:	d9402017 	ldw	r5,128(sp)
 c007e58:	d9002117 	ldw	r4,132(sp)
 c007e5c:	d9801a04 	addi	r6,sp,104
 c007e60:	da802a15 	stw	r10,168(sp)
 c007e64:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c007e68:	da802a17 	ldw	r10,168(sp)
 c007e6c:	1000501e 	bne	r2,zero,c007fb0 <___vfiprintf_internal_r+0xce0>
 c007e70:	d9801b17 	ldw	r6,108(sp)
 c007e74:	d8801c17 	ldw	r2,112(sp)
 c007e78:	d811883a 	mov	r8,sp
 c007e7c:	31000044 	addi	r4,r6,1
 c007e80:	003e3606 	br	c00775c <__alt_data_end+0xfc00775c>
 c007e84:	d9001b17 	ldw	r4,108(sp)
 c007e88:	d8801c17 	ldw	r2,112(sp)
 c007e8c:	21400044 	addi	r5,r4,1
 c007e90:	d9801d87 	ldb	r6,118(sp)
 c007e94:	303e5226 	beq	r6,zero,c0077e0 <__alt_data_end+0xfc0077e0>
 c007e98:	01800044 	movi	r6,1
 c007e9c:	d9001d84 	addi	r4,sp,118
 c007ea0:	1185883a 	add	r2,r2,r6
 c007ea4:	41000015 	stw	r4,0(r8)
 c007ea8:	41800115 	stw	r6,4(r8)
 c007eac:	d8801c15 	stw	r2,112(sp)
 c007eb0:	d9401b15 	stw	r5,108(sp)
 c007eb4:	010001c4 	movi	r4,7
 c007eb8:	2140b00e 	bge	r4,r5,c00817c <___vfiprintf_internal_r+0xeac>
 c007ebc:	1000f61e 	bne	r2,zero,c008298 <___vfiprintf_internal_r+0xfc8>
 c007ec0:	3800b31e 	bne	r7,zero,c008190 <___vfiprintf_internal_r+0xec0>
 c007ec4:	0009883a 	mov	r4,zero
 c007ec8:	300b883a 	mov	r5,r6
 c007ecc:	d811883a 	mov	r8,sp
 c007ed0:	01802004 	movi	r6,128
 c007ed4:	19be5226 	beq	r3,r6,c007820 <__alt_data_end+0xfc007820>
 c007ed8:	8521c83a 	sub	r16,r16,r20
 c007edc:	043e790e 	bge	zero,r16,c0078c4 <__alt_data_end+0xfc0078c4>
 c007ee0:	05400404 	movi	r21,16
 c007ee4:	ac01b00e 	bge	r21,r16,c0085a8 <___vfiprintf_internal_r+0x12d8>
 c007ee8:	01430074 	movhi	r5,3073
 c007eec:	297f5304 	addi	r5,r5,-692
 c007ef0:	d9402315 	stw	r5,140(sp)
 c007ef4:	070001c4 	movi	fp,7
 c007ef8:	00000506 	br	c007f10 <___vfiprintf_internal_r+0xc40>
 c007efc:	21400084 	addi	r5,r4,2
 c007f00:	42000204 	addi	r8,r8,8
 c007f04:	1809883a 	mov	r4,r3
 c007f08:	843ffc04 	addi	r16,r16,-16
 c007f0c:	ac000d0e 	bge	r21,r16,c007f44 <___vfiprintf_internal_r+0xc74>
 c007f10:	10800404 	addi	r2,r2,16
 c007f14:	20c00044 	addi	r3,r4,1
 c007f18:	44800015 	stw	r18,0(r8)
 c007f1c:	45400115 	stw	r21,4(r8)
 c007f20:	d8801c15 	stw	r2,112(sp)
 c007f24:	d8c01b15 	stw	r3,108(sp)
 c007f28:	e0fff40e 	bge	fp,r3,c007efc <__alt_data_end+0xfc007efc>
 c007f2c:	1000101e 	bne	r2,zero,c007f70 <___vfiprintf_internal_r+0xca0>
 c007f30:	843ffc04 	addi	r16,r16,-16
 c007f34:	01400044 	movi	r5,1
 c007f38:	0009883a 	mov	r4,zero
 c007f3c:	d811883a 	mov	r8,sp
 c007f40:	ac3ff316 	blt	r21,r16,c007f10 <__alt_data_end+0xfc007f10>
 c007f44:	d8c02317 	ldw	r3,140(sp)
 c007f48:	1405883a 	add	r2,r2,r16
 c007f4c:	44000115 	stw	r16,4(r8)
 c007f50:	40c00015 	stw	r3,0(r8)
 c007f54:	d8801c15 	stw	r2,112(sp)
 c007f58:	d9401b15 	stw	r5,108(sp)
 c007f5c:	00c001c4 	movi	r3,7
 c007f60:	19401916 	blt	r3,r5,c007fc8 <___vfiprintf_internal_r+0xcf8>
 c007f64:	42000204 	addi	r8,r8,8
 c007f68:	29400044 	addi	r5,r5,1
 c007f6c:	003e5506 	br	c0078c4 <__alt_data_end+0xfc0078c4>
 c007f70:	d9402017 	ldw	r5,128(sp)
 c007f74:	d9002117 	ldw	r4,132(sp)
 c007f78:	d9801a04 	addi	r6,sp,104
 c007f7c:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c007f80:	10000b1e 	bne	r2,zero,c007fb0 <___vfiprintf_internal_r+0xce0>
 c007f84:	d9001b17 	ldw	r4,108(sp)
 c007f88:	d8801c17 	ldw	r2,112(sp)
 c007f8c:	d811883a 	mov	r8,sp
 c007f90:	21400044 	addi	r5,r4,1
 c007f94:	003fdc06 	br	c007f08 <__alt_data_end+0xfc007f08>
 c007f98:	d8801c17 	ldw	r2,112(sp)
 c007f9c:	10000426 	beq	r2,zero,c007fb0 <___vfiprintf_internal_r+0xce0>
 c007fa0:	d9402017 	ldw	r5,128(sp)
 c007fa4:	d9002117 	ldw	r4,132(sp)
 c007fa8:	d9801a04 	addi	r6,sp,104
 c007fac:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c007fb0:	d9402017 	ldw	r5,128(sp)
 c007fb4:	2880030b 	ldhu	r2,12(r5)
 c007fb8:	1080100c 	andi	r2,r2,64
 c007fbc:	10014d1e 	bne	r2,zero,c0084f4 <___vfiprintf_internal_r+0x1224>
 c007fc0:	d8802417 	ldw	r2,144(sp)
 c007fc4:	003d9706 	br	c007624 <__alt_data_end+0xfc007624>
 c007fc8:	1000d21e 	bne	r2,zero,c008314 <___vfiprintf_internal_r+0x1044>
 c007fcc:	00c00044 	movi	r3,1
 c007fd0:	a005883a 	mov	r2,r20
 c007fd4:	ddc00015 	stw	r23,0(sp)
 c007fd8:	dd000115 	stw	r20,4(sp)
 c007fdc:	dd001c15 	stw	r20,112(sp)
 c007fe0:	d8c01b15 	stw	r3,108(sp)
 c007fe4:	d811883a 	mov	r8,sp
 c007fe8:	42000204 	addi	r8,r8,8
 c007fec:	8c40010c 	andi	r17,r17,4
 c007ff0:	88004026 	beq	r17,zero,c0080f4 <___vfiprintf_internal_r+0xe24>
 c007ff4:	d9002517 	ldw	r4,148(sp)
 c007ff8:	24e3c83a 	sub	r17,r4,r19
 c007ffc:	04403d0e 	bge	zero,r17,c0080f4 <___vfiprintf_internal_r+0xe24>
 c008000:	04000404 	movi	r16,16
 c008004:	8441a90e 	bge	r16,r17,c0086ac <___vfiprintf_internal_r+0x13dc>
 c008008:	00c30074 	movhi	r3,3073
 c00800c:	18ff5704 	addi	r3,r3,-676
 c008010:	d9001b17 	ldw	r4,108(sp)
 c008014:	d8c02315 	stw	r3,140(sp)
 c008018:	050001c4 	movi	r20,7
 c00801c:	dd402117 	ldw	r21,132(sp)
 c008020:	ddc02017 	ldw	r23,128(sp)
 c008024:	00000506 	br	c00803c <___vfiprintf_internal_r+0xd6c>
 c008028:	21400084 	addi	r5,r4,2
 c00802c:	42000204 	addi	r8,r8,8
 c008030:	1809883a 	mov	r4,r3
 c008034:	8c7ffc04 	addi	r17,r17,-16
 c008038:	84400f0e 	bge	r16,r17,c008078 <___vfiprintf_internal_r+0xda8>
 c00803c:	01430074 	movhi	r5,3073
 c008040:	10800404 	addi	r2,r2,16
 c008044:	20c00044 	addi	r3,r4,1
 c008048:	297f5704 	addi	r5,r5,-676
 c00804c:	41400015 	stw	r5,0(r8)
 c008050:	44000115 	stw	r16,4(r8)
 c008054:	d8801c15 	stw	r2,112(sp)
 c008058:	d8c01b15 	stw	r3,108(sp)
 c00805c:	a0fff20e 	bge	r20,r3,c008028 <__alt_data_end+0xfc008028>
 c008060:	1000141e 	bne	r2,zero,c0080b4 <___vfiprintf_internal_r+0xde4>
 c008064:	8c7ffc04 	addi	r17,r17,-16
 c008068:	01400044 	movi	r5,1
 c00806c:	0009883a 	mov	r4,zero
 c008070:	d811883a 	mov	r8,sp
 c008074:	847ff116 	blt	r16,r17,c00803c <__alt_data_end+0xfc00803c>
 c008078:	d8c02317 	ldw	r3,140(sp)
 c00807c:	1445883a 	add	r2,r2,r17
 c008080:	44400115 	stw	r17,4(r8)
 c008084:	40c00015 	stw	r3,0(r8)
 c008088:	d8801c15 	stw	r2,112(sp)
 c00808c:	d9401b15 	stw	r5,108(sp)
 c008090:	00c001c4 	movi	r3,7
 c008094:	1940170e 	bge	r3,r5,c0080f4 <___vfiprintf_internal_r+0xe24>
 c008098:	1000101e 	bne	r2,zero,c0080dc <___vfiprintf_internal_r+0xe0c>
 c00809c:	d8802517 	ldw	r2,148(sp)
 c0080a0:	14c11616 	blt	r2,r19,c0084fc <___vfiprintf_internal_r+0x122c>
 c0080a4:	d9002417 	ldw	r4,144(sp)
 c0080a8:	2089883a 	add	r4,r4,r2
 c0080ac:	d9002415 	stw	r4,144(sp)
 c0080b0:	003e1806 	br	c007914 <__alt_data_end+0xfc007914>
 c0080b4:	d9801a04 	addi	r6,sp,104
 c0080b8:	b80b883a 	mov	r5,r23
 c0080bc:	a809883a 	mov	r4,r21
 c0080c0:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c0080c4:	103fba1e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c0080c8:	d9001b17 	ldw	r4,108(sp)
 c0080cc:	d8801c17 	ldw	r2,112(sp)
 c0080d0:	d811883a 	mov	r8,sp
 c0080d4:	21400044 	addi	r5,r4,1
 c0080d8:	003fd606 	br	c008034 <__alt_data_end+0xfc008034>
 c0080dc:	d9402017 	ldw	r5,128(sp)
 c0080e0:	d9002117 	ldw	r4,132(sp)
 c0080e4:	d9801a04 	addi	r6,sp,104
 c0080e8:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c0080ec:	103fb01e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c0080f0:	d8801c17 	ldw	r2,112(sp)
 c0080f4:	d8c02517 	ldw	r3,148(sp)
 c0080f8:	1cc0010e 	bge	r3,r19,c008100 <___vfiprintf_internal_r+0xe30>
 c0080fc:	9807883a 	mov	r3,r19
 c008100:	d9002417 	ldw	r4,144(sp)
 c008104:	20c9883a 	add	r4,r4,r3
 c008108:	d9002415 	stw	r4,144(sp)
 c00810c:	103e0126 	beq	r2,zero,c007914 <__alt_data_end+0xfc007914>
 c008110:	d9402017 	ldw	r5,128(sp)
 c008114:	d9002117 	ldw	r4,132(sp)
 c008118:	d9801a04 	addi	r6,sp,104
 c00811c:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c008120:	103dfc26 	beq	r2,zero,c007914 <__alt_data_end+0xfc007914>
 c008124:	003fa206 	br	c007fb0 <__alt_data_end+0xfc007fb0>
 c008128:	d9402017 	ldw	r5,128(sp)
 c00812c:	d9002117 	ldw	r4,132(sp)
 c008130:	d9801a04 	addi	r6,sp,104
 c008134:	d9c02b15 	stw	r7,172(sp)
 c008138:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c00813c:	d9c02b17 	ldw	r7,172(sp)
 c008140:	103f9b1e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c008144:	d9001b17 	ldw	r4,108(sp)
 c008148:	d8801c17 	ldw	r2,112(sp)
 c00814c:	d811883a 	mov	r8,sp
 c008150:	21800044 	addi	r6,r4,1
 c008154:	003dbf06 	br	c007854 <__alt_data_end+0xfc007854>
 c008158:	1000d81e 	bne	r2,zero,c0084bc <___vfiprintf_internal_r+0x11ec>
 c00815c:	d9001d87 	ldb	r4,118(sp)
 c008160:	20000a26 	beq	r4,zero,c00818c <___vfiprintf_internal_r+0xebc>
 c008164:	00800044 	movi	r2,1
 c008168:	d9001d84 	addi	r4,sp,118
 c00816c:	100b883a 	mov	r5,r2
 c008170:	d9000015 	stw	r4,0(sp)
 c008174:	d8800115 	stw	r2,4(sp)
 c008178:	d811883a 	mov	r8,sp
 c00817c:	2809883a 	mov	r4,r5
 c008180:	42000204 	addi	r8,r8,8
 c008184:	29400044 	addi	r5,r5,1
 c008188:	003d9506 	br	c0077e0 <__alt_data_end+0xfc0077e0>
 c00818c:	3800fd26 	beq	r7,zero,c008584 <___vfiprintf_internal_r+0x12b4>
 c008190:	00800084 	movi	r2,2
 c008194:	d9001d04 	addi	r4,sp,116
 c008198:	d9000015 	stw	r4,0(sp)
 c00819c:	d8800115 	stw	r2,4(sp)
 c0081a0:	01400044 	movi	r5,1
 c0081a4:	d811883a 	mov	r8,sp
 c0081a8:	2809883a 	mov	r4,r5
 c0081ac:	42000204 	addi	r8,r8,8
 c0081b0:	29400044 	addi	r5,r5,1
 c0081b4:	003f4606 	br	c007ed0 <__alt_data_end+0xfc007ed0>
 c0081b8:	d8802517 	ldw	r2,148(sp)
 c0081bc:	14c0010e 	bge	r2,r19,c0081c4 <___vfiprintf_internal_r+0xef4>
 c0081c0:	9805883a 	mov	r2,r19
 c0081c4:	d9402417 	ldw	r5,144(sp)
 c0081c8:	288b883a 	add	r5,r5,r2
 c0081cc:	d9402415 	stw	r5,144(sp)
 c0081d0:	003dd006 	br	c007914 <__alt_data_end+0xfc007914>
 c0081d4:	d8001d85 	stb	zero,118(sp)
 c0081d8:	80005d16 	blt	r16,zero,c008350 <___vfiprintf_internal_r+0x1080>
 c0081dc:	00ffdfc4 	movi	r3,-129
 c0081e0:	9d04b03a 	or	r2,r19,r20
 c0081e4:	88e2703a 	and	r17,r17,r3
 c0081e8:	103d3726 	beq	r2,zero,c0076c8 <__alt_data_end+0xfc0076c8>
 c0081ec:	002b883a 	mov	r21,zero
 c0081f0:	d9002617 	ldw	r4,152(sp)
 c0081f4:	ddc01a04 	addi	r23,sp,104
 c0081f8:	988003cc 	andi	r2,r19,15
 c0081fc:	a006973a 	slli	r3,r20,28
 c008200:	2085883a 	add	r2,r4,r2
 c008204:	9826d13a 	srli	r19,r19,4
 c008208:	10800003 	ldbu	r2,0(r2)
 c00820c:	a028d13a 	srli	r20,r20,4
 c008210:	bdffffc4 	addi	r23,r23,-1
 c008214:	1ce6b03a 	or	r19,r3,r19
 c008218:	b8800005 	stb	r2,0(r23)
 c00821c:	9d04b03a 	or	r2,r19,r20
 c008220:	103ff51e 	bne	r2,zero,c0081f8 <__alt_data_end+0xfc0081f8>
 c008224:	d8801e17 	ldw	r2,120(sp)
 c008228:	15e9c83a 	sub	r20,r2,r23
 c00822c:	003d2b06 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c008230:	d9402017 	ldw	r5,128(sp)
 c008234:	d9002117 	ldw	r4,132(sp)
 c008238:	d9801a04 	addi	r6,sp,104
 c00823c:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c008240:	103f5b1e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c008244:	d8801c17 	ldw	r2,112(sp)
 c008248:	d811883a 	mov	r8,sp
 c00824c:	003f6706 	br	c007fec <__alt_data_end+0xfc007fec>
 c008250:	d9402017 	ldw	r5,128(sp)
 c008254:	d9002117 	ldw	r4,132(sp)
 c008258:	d9801a04 	addi	r6,sp,104
 c00825c:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c008260:	103f531e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c008264:	d811883a 	mov	r8,sp
 c008268:	003cd906 	br	c0075d0 <__alt_data_end+0xfc0075d0>
 c00826c:	10803fcc 	andi	r2,r2,255
 c008270:	1080201c 	xori	r2,r2,128
 c008274:	10bfe004 	addi	r2,r2,-128
 c008278:	00c00c04 	movi	r3,48
 c00827c:	10ffe926 	beq	r2,r3,c008224 <__alt_data_end+0xfc008224>
 c008280:	b8ffffc5 	stb	r3,-1(r23)
 c008284:	d8c01e17 	ldw	r3,120(sp)
 c008288:	b8bfffc4 	addi	r2,r23,-1
 c00828c:	102f883a 	mov	r23,r2
 c008290:	18a9c83a 	sub	r20,r3,r2
 c008294:	003d1106 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c008298:	d9402017 	ldw	r5,128(sp)
 c00829c:	d9002117 	ldw	r4,132(sp)
 c0082a0:	d9801a04 	addi	r6,sp,104
 c0082a4:	d8c02a15 	stw	r3,168(sp)
 c0082a8:	d9c02b15 	stw	r7,172(sp)
 c0082ac:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c0082b0:	d8c02a17 	ldw	r3,168(sp)
 c0082b4:	d9c02b17 	ldw	r7,172(sp)
 c0082b8:	103f3d1e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c0082bc:	d9001b17 	ldw	r4,108(sp)
 c0082c0:	d8801c17 	ldw	r2,112(sp)
 c0082c4:	d811883a 	mov	r8,sp
 c0082c8:	21400044 	addi	r5,r4,1
 c0082cc:	003d4406 	br	c0077e0 <__alt_data_end+0xfc0077e0>
 c0082d0:	d9402017 	ldw	r5,128(sp)
 c0082d4:	d9002117 	ldw	r4,132(sp)
 c0082d8:	d9801a04 	addi	r6,sp,104
 c0082dc:	d8c02a15 	stw	r3,168(sp)
 c0082e0:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c0082e4:	d8c02a17 	ldw	r3,168(sp)
 c0082e8:	103f311e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c0082ec:	d9001b17 	ldw	r4,108(sp)
 c0082f0:	d8801c17 	ldw	r2,112(sp)
 c0082f4:	d811883a 	mov	r8,sp
 c0082f8:	21400044 	addi	r5,r4,1
 c0082fc:	003ef406 	br	c007ed0 <__alt_data_end+0xfc007ed0>
 c008300:	1000bd1e 	bne	r2,zero,c0085f8 <___vfiprintf_internal_r+0x1328>
 c008304:	01400044 	movi	r5,1
 c008308:	0009883a 	mov	r4,zero
 c00830c:	d811883a 	mov	r8,sp
 c008310:	003ef106 	br	c007ed8 <__alt_data_end+0xfc007ed8>
 c008314:	d9402017 	ldw	r5,128(sp)
 c008318:	d9002117 	ldw	r4,132(sp)
 c00831c:	d9801a04 	addi	r6,sp,104
 c008320:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c008324:	103f221e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c008328:	d9401b17 	ldw	r5,108(sp)
 c00832c:	d8801c17 	ldw	r2,112(sp)
 c008330:	d811883a 	mov	r8,sp
 c008334:	29400044 	addi	r5,r5,1
 c008338:	003d6206 	br	c0078c4 <__alt_data_end+0xfc0078c4>
 c00833c:	01430074 	movhi	r5,3073
 c008340:	297ef204 	addi	r5,r5,-1080
 c008344:	d9402615 	stw	r5,152(sp)
 c008348:	d8c02215 	stw	r3,136(sp)
 c00834c:	1023883a 	mov	r17,r2
 c008350:	9d04b03a 	or	r2,r19,r20
 c008354:	103fa51e 	bne	r2,zero,c0081ec <__alt_data_end+0xfc0081ec>
 c008358:	002b883a 	mov	r21,zero
 c00835c:	00800084 	movi	r2,2
 c008360:	003e4a06 	br	c007c8c <__alt_data_end+0xfc007c8c>
 c008364:	01430074 	movhi	r5,3073
 c008368:	297ef204 	addi	r5,r5,-1080
 c00836c:	002b883a 	mov	r21,zero
 c008370:	d9402615 	stw	r5,152(sp)
 c008374:	003f9e06 	br	c0081f0 <__alt_data_end+0xfc0081f0>
 c008378:	d9402217 	ldw	r5,136(sp)
 c00837c:	d8001d85 	stb	zero,118(sp)
 c008380:	0029883a 	mov	r20,zero
 c008384:	28800104 	addi	r2,r5,4
 c008388:	2cc00017 	ldw	r19,0(r5)
 c00838c:	803e3a16 	blt	r16,zero,c007c78 <__alt_data_end+0xfc007c78>
 c008390:	00ffdfc4 	movi	r3,-129
 c008394:	d8802215 	stw	r2,136(sp)
 c008398:	88e2703a 	and	r17,r17,r3
 c00839c:	002b883a 	mov	r21,zero
 c0083a0:	983e9b26 	beq	r19,zero,c007e10 <__alt_data_end+0xfc007e10>
 c0083a4:	00800244 	movi	r2,9
 c0083a8:	14fdc936 	bltu	r2,r19,c007ad0 <__alt_data_end+0xfc007ad0>
 c0083ac:	003e9a06 	br	c007e18 <__alt_data_end+0xfc007e18>
 c0083b0:	00800c04 	movi	r2,48
 c0083b4:	d8c01d45 	stb	r3,117(sp)
 c0083b8:	d8801d05 	stb	r2,116(sp)
 c0083bc:	d8001d85 	stb	zero,118(sp)
 c0083c0:	88c00094 	ori	r3,r17,2
 c0083c4:	80009c16 	blt	r16,zero,c008638 <___vfiprintf_internal_r+0x1368>
 c0083c8:	00bfdfc4 	movi	r2,-129
 c0083cc:	88a2703a 	and	r17,r17,r2
 c0083d0:	8c400094 	ori	r17,r17,2
 c0083d4:	002b883a 	mov	r21,zero
 c0083d8:	003f8506 	br	c0081f0 <__alt_data_end+0xfc0081f0>
 c0083dc:	b029883a 	mov	r20,r22
 c0083e0:	003c0b06 	br	c007410 <__alt_data_end+0xfc007410>
 c0083e4:	04e7c83a 	sub	r19,zero,r19
 c0083e8:	05400b44 	movi	r21,45
 c0083ec:	9804c03a 	cmpne	r2,r19,zero
 c0083f0:	0529c83a 	sub	r20,zero,r20
 c0083f4:	dd401d85 	stb	r21,118(sp)
 c0083f8:	a0a9c83a 	sub	r20,r20,r2
 c0083fc:	80009716 	blt	r16,zero,c00865c <___vfiprintf_internal_r+0x138c>
 c008400:	00bfdfc4 	movi	r2,-129
 c008404:	88a2703a 	and	r17,r17,r2
 c008408:	003db006 	br	c007acc <__alt_data_end+0xfc007acc>
 c00840c:	b0c00007 	ldb	r3,0(r22)
 c008410:	003c0c06 	br	c007444 <__alt_data_end+0xfc007444>
 c008414:	8880100c 	andi	r2,r17,64
 c008418:	d8001d85 	stb	zero,118(sp)
 c00841c:	1000461e 	bne	r2,zero,c008538 <___vfiprintf_internal_r+0x1268>
 c008420:	d9002217 	ldw	r4,136(sp)
 c008424:	0029883a 	mov	r20,zero
 c008428:	20800104 	addi	r2,r4,4
 c00842c:	24c00017 	ldw	r19,0(r4)
 c008430:	803df80e 	bge	r16,zero,c007c14 <__alt_data_end+0xfc007c14>
 c008434:	9d06b03a 	or	r3,r19,r20
 c008438:	d8802215 	stw	r2,136(sp)
 c00843c:	183d5e1e 	bne	r3,zero,c0079b8 <__alt_data_end+0xfc0079b8>
 c008440:	002b883a 	mov	r21,zero
 c008444:	0005883a 	mov	r2,zero
 c008448:	003e1006 	br	c007c8c <__alt_data_end+0xfc007c8c>
 c00844c:	8880040c 	andi	r2,r17,16
 c008450:	1000321e 	bne	r2,zero,c00851c <___vfiprintf_internal_r+0x124c>
 c008454:	8c40100c 	andi	r17,r17,64
 c008458:	88008d26 	beq	r17,zero,c008690 <___vfiprintf_internal_r+0x13c0>
 c00845c:	d9402217 	ldw	r5,136(sp)
 c008460:	d8c02417 	ldw	r3,144(sp)
 c008464:	28800017 	ldw	r2,0(r5)
 c008468:	29400104 	addi	r5,r5,4
 c00846c:	d9402215 	stw	r5,136(sp)
 c008470:	10c0000d 	sth	r3,0(r2)
 c008474:	003bca06 	br	c0073a0 <__alt_data_end+0xfc0073a0>
 c008478:	8880100c 	andi	r2,r17,64
 c00847c:	10003a26 	beq	r2,zero,c008568 <___vfiprintf_internal_r+0x1298>
 c008480:	d8802217 	ldw	r2,136(sp)
 c008484:	14c0000f 	ldh	r19,0(r2)
 c008488:	10800104 	addi	r2,r2,4
 c00848c:	d8802215 	stw	r2,136(sp)
 c008490:	9829d7fa 	srai	r20,r19,31
 c008494:	a005883a 	mov	r2,r20
 c008498:	003d8506 	br	c007ab0 <__alt_data_end+0xfc007ab0>
 c00849c:	8880100c 	andi	r2,r17,64
 c0084a0:	10002b26 	beq	r2,zero,c008550 <___vfiprintf_internal_r+0x1280>
 c0084a4:	d8802217 	ldw	r2,136(sp)
 c0084a8:	0029883a 	mov	r20,zero
 c0084ac:	14c0000b 	ldhu	r19,0(r2)
 c0084b0:	10800104 	addi	r2,r2,4
 c0084b4:	d8802215 	stw	r2,136(sp)
 c0084b8:	003d5d06 	br	c007a30 <__alt_data_end+0xfc007a30>
 c0084bc:	d9402017 	ldw	r5,128(sp)
 c0084c0:	d9002117 	ldw	r4,132(sp)
 c0084c4:	d9801a04 	addi	r6,sp,104
 c0084c8:	d8c02a15 	stw	r3,168(sp)
 c0084cc:	d9c02b15 	stw	r7,172(sp)
 c0084d0:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c0084d4:	d8c02a17 	ldw	r3,168(sp)
 c0084d8:	d9c02b17 	ldw	r7,172(sp)
 c0084dc:	103eb41e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c0084e0:	d9001b17 	ldw	r4,108(sp)
 c0084e4:	d8801c17 	ldw	r2,112(sp)
 c0084e8:	d811883a 	mov	r8,sp
 c0084ec:	21400044 	addi	r5,r4,1
 c0084f0:	003e6706 	br	c007e90 <__alt_data_end+0xfc007e90>
 c0084f4:	00bfffc4 	movi	r2,-1
 c0084f8:	003c4a06 	br	c007624 <__alt_data_end+0xfc007624>
 c0084fc:	9805883a 	mov	r2,r19
 c008500:	003ee806 	br	c0080a4 <__alt_data_end+0xfc0080a4>
 c008504:	d8c02217 	ldw	r3,136(sp)
 c008508:	0029883a 	mov	r20,zero
 c00850c:	18800104 	addi	r2,r3,4
 c008510:	1cc0000b 	ldhu	r19,0(r3)
 c008514:	803f9e0e 	bge	r16,zero,c008390 <__alt_data_end+0xfc008390>
 c008518:	003dd706 	br	c007c78 <__alt_data_end+0xfc007c78>
 c00851c:	d8c02217 	ldw	r3,136(sp)
 c008520:	d9002417 	ldw	r4,144(sp)
 c008524:	18800017 	ldw	r2,0(r3)
 c008528:	18c00104 	addi	r3,r3,4
 c00852c:	d8c02215 	stw	r3,136(sp)
 c008530:	11000015 	stw	r4,0(r2)
 c008534:	003b9a06 	br	c0073a0 <__alt_data_end+0xfc0073a0>
 c008538:	d8c02217 	ldw	r3,136(sp)
 c00853c:	0029883a 	mov	r20,zero
 c008540:	18800104 	addi	r2,r3,4
 c008544:	1cc0000b 	ldhu	r19,0(r3)
 c008548:	803db20e 	bge	r16,zero,c007c14 <__alt_data_end+0xfc007c14>
 c00854c:	003fb906 	br	c008434 <__alt_data_end+0xfc008434>
 c008550:	d9002217 	ldw	r4,136(sp)
 c008554:	0029883a 	mov	r20,zero
 c008558:	24c00017 	ldw	r19,0(r4)
 c00855c:	21000104 	addi	r4,r4,4
 c008560:	d9002215 	stw	r4,136(sp)
 c008564:	003d3206 	br	c007a30 <__alt_data_end+0xfc007a30>
 c008568:	d8c02217 	ldw	r3,136(sp)
 c00856c:	1cc00017 	ldw	r19,0(r3)
 c008570:	18c00104 	addi	r3,r3,4
 c008574:	d8c02215 	stw	r3,136(sp)
 c008578:	9829d7fa 	srai	r20,r19,31
 c00857c:	a005883a 	mov	r2,r20
 c008580:	003d4b06 	br	c007ab0 <__alt_data_end+0xfc007ab0>
 c008584:	0009883a 	mov	r4,zero
 c008588:	01400044 	movi	r5,1
 c00858c:	d811883a 	mov	r8,sp
 c008590:	003e4f06 	br	c007ed0 <__alt_data_end+0xfc007ed0>
 c008594:	d8c02215 	stw	r3,136(sp)
 c008598:	002b883a 	mov	r21,zero
 c00859c:	003db806 	br	c007c80 <__alt_data_end+0xfc007c80>
 c0085a0:	d811883a 	mov	r8,sp
 c0085a4:	003e9606 	br	c008000 <__alt_data_end+0xfc008000>
 c0085a8:	01030074 	movhi	r4,3073
 c0085ac:	213f5304 	addi	r4,r4,-692
 c0085b0:	d9002315 	stw	r4,140(sp)
 c0085b4:	003e6306 	br	c007f44 <__alt_data_end+0xfc007f44>
 c0085b8:	b0c00043 	ldbu	r3,1(r22)
 c0085bc:	8c400814 	ori	r17,r17,32
 c0085c0:	b5800044 	addi	r22,r22,1
 c0085c4:	18c03fcc 	andi	r3,r3,255
 c0085c8:	18c0201c 	xori	r3,r3,128
 c0085cc:	18ffe004 	addi	r3,r3,-128
 c0085d0:	003b9c06 	br	c007444 <__alt_data_end+0xfc007444>
 c0085d4:	b809883a 	mov	r4,r23
 c0085d8:	da002a15 	stw	r8,168(sp)
 c0085dc:	c0071240 	call	c007124 <strlen>
 c0085e0:	1029883a 	mov	r20,r2
 c0085e4:	dd401d83 	ldbu	r21,118(sp)
 c0085e8:	df002215 	stw	fp,136(sp)
 c0085ec:	0021883a 	mov	r16,zero
 c0085f0:	da002a17 	ldw	r8,168(sp)
 c0085f4:	003c3906 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c0085f8:	d9402017 	ldw	r5,128(sp)
 c0085fc:	d9002117 	ldw	r4,132(sp)
 c008600:	d9801a04 	addi	r6,sp,104
 c008604:	c0071bc0 	call	c0071bc <__sprint_r.part.0>
 c008608:	103e691e 	bne	r2,zero,c007fb0 <__alt_data_end+0xfc007fb0>
 c00860c:	d9001b17 	ldw	r4,108(sp)
 c008610:	d8801c17 	ldw	r2,112(sp)
 c008614:	d811883a 	mov	r8,sp
 c008618:	21400044 	addi	r5,r4,1
 c00861c:	003e2e06 	br	c007ed8 <__alt_data_end+0xfc007ed8>
 c008620:	01030074 	movhi	r4,3073
 c008624:	213f5704 	addi	r4,r4,-676
 c008628:	d9002315 	stw	r4,140(sp)
 c00862c:	d9001b17 	ldw	r4,108(sp)
 c008630:	21000044 	addi	r4,r4,1
 c008634:	003c5e06 	br	c0077b0 <__alt_data_end+0xfc0077b0>
 c008638:	002b883a 	mov	r21,zero
 c00863c:	00800084 	movi	r2,2
 c008640:	10803fcc 	andi	r2,r2,255
 c008644:	01000044 	movi	r4,1
 c008648:	11002b26 	beq	r2,r4,c0086f8 <___vfiprintf_internal_r+0x1428>
 c00864c:	01000084 	movi	r4,2
 c008650:	11002b1e 	bne	r2,r4,c008700 <___vfiprintf_internal_r+0x1430>
 c008654:	1823883a 	mov	r17,r3
 c008658:	003ee506 	br	c0081f0 <__alt_data_end+0xfc0081f0>
 c00865c:	8807883a 	mov	r3,r17
 c008660:	00800044 	movi	r2,1
 c008664:	003ff606 	br	c008640 <__alt_data_end+0xfc008640>
 c008668:	00800184 	movi	r2,6
 c00866c:	1400012e 	bgeu	r2,r16,c008674 <___vfiprintf_internal_r+0x13a4>
 c008670:	1021883a 	mov	r16,r2
 c008674:	8029883a 	mov	r20,r16
 c008678:	8027883a 	mov	r19,r16
 c00867c:	80002216 	blt	r16,zero,c008708 <___vfiprintf_internal_r+0x1438>
 c008680:	05c30074 	movhi	r23,3073
 c008684:	df002215 	stw	fp,136(sp)
 c008688:	bdfef704 	addi	r23,r23,-1060
 c00868c:	003cfb06 	br	c007a7c <__alt_data_end+0xfc007a7c>
 c008690:	d9002217 	ldw	r4,136(sp)
 c008694:	d9402417 	ldw	r5,144(sp)
 c008698:	20800017 	ldw	r2,0(r4)
 c00869c:	21000104 	addi	r4,r4,4
 c0086a0:	d9002215 	stw	r4,136(sp)
 c0086a4:	11400015 	stw	r5,0(r2)
 c0086a8:	003b3d06 	br	c0073a0 <__alt_data_end+0xfc0073a0>
 c0086ac:	01430074 	movhi	r5,3073
 c0086b0:	297f5704 	addi	r5,r5,-676
 c0086b4:	d9402315 	stw	r5,140(sp)
 c0086b8:	d9401b17 	ldw	r5,108(sp)
 c0086bc:	29400044 	addi	r5,r5,1
 c0086c0:	003e6d06 	br	c008078 <__alt_data_end+0xfc008078>
 c0086c4:	8029883a 	mov	r20,r16
 c0086c8:	dd401d83 	ldbu	r21,118(sp)
 c0086cc:	df002215 	stw	fp,136(sp)
 c0086d0:	0021883a 	mov	r16,zero
 c0086d4:	003c0106 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c0086d8:	00c30074 	movhi	r3,3073
 c0086dc:	18ff5304 	addi	r3,r3,-692
 c0086e0:	d8c02315 	stw	r3,140(sp)
 c0086e4:	280d883a 	mov	r6,r5
 c0086e8:	003c6906 	br	c007890 <__alt_data_end+0xfc007890>
 c0086ec:	802d883a 	mov	r22,r16
 c0086f0:	0021883a 	mov	r16,zero
 c0086f4:	003b5406 	br	c007448 <__alt_data_end+0xfc007448>
 c0086f8:	1823883a 	mov	r17,r3
 c0086fc:	003cf306 	br	c007acc <__alt_data_end+0xfc007acc>
 c008700:	1823883a 	mov	r17,r3
 c008704:	003cad06 	br	c0079bc <__alt_data_end+0xfc0079bc>
 c008708:	0027883a 	mov	r19,zero
 c00870c:	003fdc06 	br	c008680 <__alt_data_end+0xfc008680>
 c008710:	d9402217 	ldw	r5,136(sp)
 c008714:	8005883a 	mov	r2,r16
 c008718:	b0c00043 	ldbu	r3,1(r22)
 c00871c:	2c000017 	ldw	r16,0(r5)
 c008720:	29000104 	addi	r4,r5,4
 c008724:	d9002215 	stw	r4,136(sp)
 c008728:	102d883a 	mov	r22,r2
 c00872c:	803fa50e 	bge	r16,zero,c0085c4 <__alt_data_end+0xfc0085c4>
 c008730:	18c03fcc 	andi	r3,r3,255
 c008734:	18c0201c 	xori	r3,r3,128
 c008738:	043fffc4 	movi	r16,-1
 c00873c:	18ffe004 	addi	r3,r3,-128
 c008740:	003b4006 	br	c007444 <__alt_data_end+0xfc007444>
 c008744:	d9402303 	ldbu	r5,140(sp)
 c008748:	d9401d85 	stb	r5,118(sp)
 c00874c:	003cae06 	br	c007a08 <__alt_data_end+0xfc007a08>
 c008750:	d8c02303 	ldbu	r3,140(sp)
 c008754:	d8c01d85 	stb	r3,118(sp)
 c008758:	003d1406 	br	c007bac <__alt_data_end+0xfc007bac>
 c00875c:	d8c02303 	ldbu	r3,140(sp)
 c008760:	d8c01d85 	stb	r3,118(sp)
 c008764:	003cca06 	br	c007a90 <__alt_data_end+0xfc007a90>
 c008768:	8880004c 	andi	r2,r17,1
 c00876c:	002b883a 	mov	r21,zero
 c008770:	10000526 	beq	r2,zero,c008788 <___vfiprintf_internal_r+0x14b8>
 c008774:	00800c04 	movi	r2,48
 c008778:	d88019c5 	stb	r2,103(sp)
 c00877c:	dd002817 	ldw	r20,160(sp)
 c008780:	ddc019c4 	addi	r23,sp,103
 c008784:	003bd506 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c008788:	0029883a 	mov	r20,zero
 c00878c:	ddc01a04 	addi	r23,sp,104
 c008790:	003bd206 	br	c0076dc <__alt_data_end+0xfc0076dc>
 c008794:	d9002303 	ldbu	r4,140(sp)
 c008798:	d9001d85 	stb	r4,118(sp)
 c00879c:	003da606 	br	c007e38 <__alt_data_end+0xfc007e38>
 c0087a0:	d8c02303 	ldbu	r3,140(sp)
 c0087a4:	d8c01d85 	stb	r3,118(sp)
 c0087a8:	003c7606 	br	c007984 <__alt_data_end+0xfc007984>
 c0087ac:	d8c02303 	ldbu	r3,140(sp)
 c0087b0:	d8c01d85 	stb	r3,118(sp)
 c0087b4:	003c6506 	br	c00794c <__alt_data_end+0xfc00794c>
 c0087b8:	d9002303 	ldbu	r4,140(sp)
 c0087bc:	d9001d85 	stb	r4,118(sp)
 c0087c0:	003d3d06 	br	c007cb8 <__alt_data_end+0xfc007cb8>
 c0087c4:	d8c02303 	ldbu	r3,140(sp)
 c0087c8:	d8c01d85 	stb	r3,118(sp)
 c0087cc:	003d1d06 	br	c007c44 <__alt_data_end+0xfc007c44>
 c0087d0:	d8c02303 	ldbu	r3,140(sp)
 c0087d4:	d8c01d85 	stb	r3,118(sp)
 c0087d8:	003d0306 	br	c007be8 <__alt_data_end+0xfc007be8>

0c0087dc <__vfiprintf_internal>:
 c0087dc:	00830074 	movhi	r2,3073
 c0087e0:	10865604 	addi	r2,r2,6488
 c0087e4:	300f883a 	mov	r7,r6
 c0087e8:	280d883a 	mov	r6,r5
 c0087ec:	200b883a 	mov	r5,r4
 c0087f0:	11000017 	ldw	r4,0(r2)
 c0087f4:	c0072d01 	jmpi	c0072d0 <___vfiprintf_internal_r>

0c0087f8 <__sbprintf>:
 c0087f8:	2880030b 	ldhu	r2,12(r5)
 c0087fc:	2ac01917 	ldw	r11,100(r5)
 c008800:	2a80038b 	ldhu	r10,14(r5)
 c008804:	2a400717 	ldw	r9,28(r5)
 c008808:	2a000917 	ldw	r8,36(r5)
 c00880c:	defee204 	addi	sp,sp,-1144
 c008810:	00c10004 	movi	r3,1024
 c008814:	dc011a15 	stw	r16,1128(sp)
 c008818:	10bfff4c 	andi	r2,r2,65533
 c00881c:	2821883a 	mov	r16,r5
 c008820:	d8cb883a 	add	r5,sp,r3
 c008824:	dc811c15 	stw	r18,1136(sp)
 c008828:	dc411b15 	stw	r17,1132(sp)
 c00882c:	dfc11d15 	stw	ra,1140(sp)
 c008830:	2025883a 	mov	r18,r4
 c008834:	d881030d 	sth	r2,1036(sp)
 c008838:	dac11915 	stw	r11,1124(sp)
 c00883c:	da81038d 	sth	r10,1038(sp)
 c008840:	da410715 	stw	r9,1052(sp)
 c008844:	da010915 	stw	r8,1060(sp)
 c008848:	dec10015 	stw	sp,1024(sp)
 c00884c:	dec10415 	stw	sp,1040(sp)
 c008850:	d8c10215 	stw	r3,1032(sp)
 c008854:	d8c10515 	stw	r3,1044(sp)
 c008858:	d8010615 	stw	zero,1048(sp)
 c00885c:	c0072d00 	call	c0072d0 <___vfiprintf_internal_r>
 c008860:	1023883a 	mov	r17,r2
 c008864:	10000416 	blt	r2,zero,c008878 <__sbprintf+0x80>
 c008868:	d9410004 	addi	r5,sp,1024
 c00886c:	9009883a 	mov	r4,r18
 c008870:	c00459c0 	call	c00459c <_fflush_r>
 c008874:	10000d1e 	bne	r2,zero,c0088ac <__sbprintf+0xb4>
 c008878:	d881030b 	ldhu	r2,1036(sp)
 c00887c:	1080100c 	andi	r2,r2,64
 c008880:	10000326 	beq	r2,zero,c008890 <__sbprintf+0x98>
 c008884:	8080030b 	ldhu	r2,12(r16)
 c008888:	10801014 	ori	r2,r2,64
 c00888c:	8080030d 	sth	r2,12(r16)
 c008890:	8805883a 	mov	r2,r17
 c008894:	dfc11d17 	ldw	ra,1140(sp)
 c008898:	dc811c17 	ldw	r18,1136(sp)
 c00889c:	dc411b17 	ldw	r17,1132(sp)
 c0088a0:	dc011a17 	ldw	r16,1128(sp)
 c0088a4:	dec11e04 	addi	sp,sp,1144
 c0088a8:	f800283a 	ret
 c0088ac:	047fffc4 	movi	r17,-1
 c0088b0:	003ff106 	br	c008878 <__alt_data_end+0xfc008878>

0c0088b4 <_write_r>:
 c0088b4:	defffd04 	addi	sp,sp,-12
 c0088b8:	2805883a 	mov	r2,r5
 c0088bc:	dc000015 	stw	r16,0(sp)
 c0088c0:	04030074 	movhi	r16,3073
 c0088c4:	dc400115 	stw	r17,4(sp)
 c0088c8:	300b883a 	mov	r5,r6
 c0088cc:	840d2804 	addi	r16,r16,13472
 c0088d0:	2023883a 	mov	r17,r4
 c0088d4:	380d883a 	mov	r6,r7
 c0088d8:	1009883a 	mov	r4,r2
 c0088dc:	dfc00215 	stw	ra,8(sp)
 c0088e0:	80000015 	stw	zero,0(r16)
 c0088e4:	c00dc340 	call	c00dc34 <write>
 c0088e8:	00ffffc4 	movi	r3,-1
 c0088ec:	10c00526 	beq	r2,r3,c008904 <_write_r+0x50>
 c0088f0:	dfc00217 	ldw	ra,8(sp)
 c0088f4:	dc400117 	ldw	r17,4(sp)
 c0088f8:	dc000017 	ldw	r16,0(sp)
 c0088fc:	dec00304 	addi	sp,sp,12
 c008900:	f800283a 	ret
 c008904:	80c00017 	ldw	r3,0(r16)
 c008908:	183ff926 	beq	r3,zero,c0088f0 <__alt_data_end+0xfc0088f0>
 c00890c:	88c00015 	stw	r3,0(r17)
 c008910:	003ff706 	br	c0088f0 <__alt_data_end+0xfc0088f0>

0c008914 <_close_r>:
 c008914:	defffd04 	addi	sp,sp,-12
 c008918:	dc000015 	stw	r16,0(sp)
 c00891c:	04030074 	movhi	r16,3073
 c008920:	dc400115 	stw	r17,4(sp)
 c008924:	840d2804 	addi	r16,r16,13472
 c008928:	2023883a 	mov	r17,r4
 c00892c:	2809883a 	mov	r4,r5
 c008930:	dfc00215 	stw	ra,8(sp)
 c008934:	80000015 	stw	zero,0(r16)
 c008938:	c00d3dc0 	call	c00d3dc <close>
 c00893c:	00ffffc4 	movi	r3,-1
 c008940:	10c00526 	beq	r2,r3,c008958 <_close_r+0x44>
 c008944:	dfc00217 	ldw	ra,8(sp)
 c008948:	dc400117 	ldw	r17,4(sp)
 c00894c:	dc000017 	ldw	r16,0(sp)
 c008950:	dec00304 	addi	sp,sp,12
 c008954:	f800283a 	ret
 c008958:	80c00017 	ldw	r3,0(r16)
 c00895c:	183ff926 	beq	r3,zero,c008944 <__alt_data_end+0xfc008944>
 c008960:	88c00015 	stw	r3,0(r17)
 c008964:	003ff706 	br	c008944 <__alt_data_end+0xfc008944>

0c008968 <_calloc_r>:
 c008968:	defffe04 	addi	sp,sp,-8
 c00896c:	2805883a 	mov	r2,r5
 c008970:	dc000015 	stw	r16,0(sp)
 c008974:	300b883a 	mov	r5,r6
 c008978:	2021883a 	mov	r16,r4
 c00897c:	1009883a 	mov	r4,r2
 c008980:	dfc00115 	stw	ra,4(sp)
 c008984:	c0005340 	call	c000534 <__mulsi3>
 c008988:	100b883a 	mov	r5,r2
 c00898c:	8009883a 	mov	r4,r16
 c008990:	c00522c0 	call	c00522c <_malloc_r>
 c008994:	10002926 	beq	r2,zero,c008a3c <_calloc_r+0xd4>
 c008998:	11bfff17 	ldw	r6,-4(r2)
 c00899c:	1021883a 	mov	r16,r2
 c0089a0:	00bfff04 	movi	r2,-4
 c0089a4:	308c703a 	and	r6,r6,r2
 c0089a8:	00c00904 	movi	r3,36
 c0089ac:	308d883a 	add	r6,r6,r2
 c0089b0:	19801636 	bltu	r3,r6,c008a0c <_calloc_r+0xa4>
 c0089b4:	008004c4 	movi	r2,19
 c0089b8:	11800b2e 	bgeu	r2,r6,c0089e8 <_calloc_r+0x80>
 c0089bc:	80000015 	stw	zero,0(r16)
 c0089c0:	80000115 	stw	zero,4(r16)
 c0089c4:	008006c4 	movi	r2,27
 c0089c8:	11801a2e 	bgeu	r2,r6,c008a34 <_calloc_r+0xcc>
 c0089cc:	80000215 	stw	zero,8(r16)
 c0089d0:	80000315 	stw	zero,12(r16)
 c0089d4:	30c0151e 	bne	r6,r3,c008a2c <_calloc_r+0xc4>
 c0089d8:	80000415 	stw	zero,16(r16)
 c0089dc:	80800604 	addi	r2,r16,24
 c0089e0:	80000515 	stw	zero,20(r16)
 c0089e4:	00000106 	br	c0089ec <_calloc_r+0x84>
 c0089e8:	8005883a 	mov	r2,r16
 c0089ec:	10000015 	stw	zero,0(r2)
 c0089f0:	10000115 	stw	zero,4(r2)
 c0089f4:	10000215 	stw	zero,8(r2)
 c0089f8:	8005883a 	mov	r2,r16
 c0089fc:	dfc00117 	ldw	ra,4(sp)
 c008a00:	dc000017 	ldw	r16,0(sp)
 c008a04:	dec00204 	addi	sp,sp,8
 c008a08:	f800283a 	ret
 c008a0c:	000b883a 	mov	r5,zero
 c008a10:	8009883a 	mov	r4,r16
 c008a14:	c005c640 	call	c005c64 <memset>
 c008a18:	8005883a 	mov	r2,r16
 c008a1c:	dfc00117 	ldw	ra,4(sp)
 c008a20:	dc000017 	ldw	r16,0(sp)
 c008a24:	dec00204 	addi	sp,sp,8
 c008a28:	f800283a 	ret
 c008a2c:	80800404 	addi	r2,r16,16
 c008a30:	003fee06 	br	c0089ec <__alt_data_end+0xfc0089ec>
 c008a34:	80800204 	addi	r2,r16,8
 c008a38:	003fec06 	br	c0089ec <__alt_data_end+0xfc0089ec>
 c008a3c:	0005883a 	mov	r2,zero
 c008a40:	003fee06 	br	c0089fc <__alt_data_end+0xfc0089fc>

0c008a44 <_fclose_r>:
 c008a44:	28003926 	beq	r5,zero,c008b2c <_fclose_r+0xe8>
 c008a48:	defffc04 	addi	sp,sp,-16
 c008a4c:	dc400115 	stw	r17,4(sp)
 c008a50:	dc000015 	stw	r16,0(sp)
 c008a54:	dfc00315 	stw	ra,12(sp)
 c008a58:	dc800215 	stw	r18,8(sp)
 c008a5c:	2023883a 	mov	r17,r4
 c008a60:	2821883a 	mov	r16,r5
 c008a64:	20000226 	beq	r4,zero,c008a70 <_fclose_r+0x2c>
 c008a68:	20800e17 	ldw	r2,56(r4)
 c008a6c:	10002726 	beq	r2,zero,c008b0c <_fclose_r+0xc8>
 c008a70:	8080030f 	ldh	r2,12(r16)
 c008a74:	1000071e 	bne	r2,zero,c008a94 <_fclose_r+0x50>
 c008a78:	0005883a 	mov	r2,zero
 c008a7c:	dfc00317 	ldw	ra,12(sp)
 c008a80:	dc800217 	ldw	r18,8(sp)
 c008a84:	dc400117 	ldw	r17,4(sp)
 c008a88:	dc000017 	ldw	r16,0(sp)
 c008a8c:	dec00404 	addi	sp,sp,16
 c008a90:	f800283a 	ret
 c008a94:	800b883a 	mov	r5,r16
 c008a98:	8809883a 	mov	r4,r17
 c008a9c:	c0043800 	call	c004380 <__sflush_r>
 c008aa0:	1025883a 	mov	r18,r2
 c008aa4:	80800b17 	ldw	r2,44(r16)
 c008aa8:	10000426 	beq	r2,zero,c008abc <_fclose_r+0x78>
 c008aac:	81400717 	ldw	r5,28(r16)
 c008ab0:	8809883a 	mov	r4,r17
 c008ab4:	103ee83a 	callr	r2
 c008ab8:	10001616 	blt	r2,zero,c008b14 <_fclose_r+0xd0>
 c008abc:	8080030b 	ldhu	r2,12(r16)
 c008ac0:	1080200c 	andi	r2,r2,128
 c008ac4:	1000151e 	bne	r2,zero,c008b1c <_fclose_r+0xd8>
 c008ac8:	81400c17 	ldw	r5,48(r16)
 c008acc:	28000526 	beq	r5,zero,c008ae4 <_fclose_r+0xa0>
 c008ad0:	80801004 	addi	r2,r16,64
 c008ad4:	28800226 	beq	r5,r2,c008ae0 <_fclose_r+0x9c>
 c008ad8:	8809883a 	mov	r4,r17
 c008adc:	c004afc0 	call	c004afc <_free_r>
 c008ae0:	80000c15 	stw	zero,48(r16)
 c008ae4:	81401117 	ldw	r5,68(r16)
 c008ae8:	28000326 	beq	r5,zero,c008af8 <_fclose_r+0xb4>
 c008aec:	8809883a 	mov	r4,r17
 c008af0:	c004afc0 	call	c004afc <_free_r>
 c008af4:	80001115 	stw	zero,68(r16)
 c008af8:	c0049980 	call	c004998 <__sfp_lock_acquire>
 c008afc:	8000030d 	sth	zero,12(r16)
 c008b00:	c00499c0 	call	c00499c <__sfp_lock_release>
 c008b04:	9005883a 	mov	r2,r18
 c008b08:	003fdc06 	br	c008a7c <__alt_data_end+0xfc008a7c>
 c008b0c:	c0049880 	call	c004988 <__sinit>
 c008b10:	003fd706 	br	c008a70 <__alt_data_end+0xfc008a70>
 c008b14:	04bfffc4 	movi	r18,-1
 c008b18:	003fe806 	br	c008abc <__alt_data_end+0xfc008abc>
 c008b1c:	81400417 	ldw	r5,16(r16)
 c008b20:	8809883a 	mov	r4,r17
 c008b24:	c004afc0 	call	c004afc <_free_r>
 c008b28:	003fe706 	br	c008ac8 <__alt_data_end+0xfc008ac8>
 c008b2c:	0005883a 	mov	r2,zero
 c008b30:	f800283a 	ret

0c008b34 <fclose>:
 c008b34:	00830074 	movhi	r2,3073
 c008b38:	10865604 	addi	r2,r2,6488
 c008b3c:	200b883a 	mov	r5,r4
 c008b40:	11000017 	ldw	r4,0(r2)
 c008b44:	c008a441 	jmpi	c008a44 <_fclose_r>

0c008b48 <__fputwc>:
 c008b48:	defff804 	addi	sp,sp,-32
 c008b4c:	dcc00415 	stw	r19,16(sp)
 c008b50:	dc800315 	stw	r18,12(sp)
 c008b54:	dc000115 	stw	r16,4(sp)
 c008b58:	dfc00715 	stw	ra,28(sp)
 c008b5c:	dd400615 	stw	r21,24(sp)
 c008b60:	dd000515 	stw	r20,20(sp)
 c008b64:	dc400215 	stw	r17,8(sp)
 c008b68:	2027883a 	mov	r19,r4
 c008b6c:	2825883a 	mov	r18,r5
 c008b70:	3021883a 	mov	r16,r6
 c008b74:	c00501c0 	call	c00501c <__locale_mb_cur_max>
 c008b78:	00c00044 	movi	r3,1
 c008b7c:	10c03e26 	beq	r2,r3,c008c78 <__fputwc+0x130>
 c008b80:	81c01704 	addi	r7,r16,92
 c008b84:	900d883a 	mov	r6,r18
 c008b88:	d80b883a 	mov	r5,sp
 c008b8c:	9809883a 	mov	r4,r19
 c008b90:	c009ba00 	call	c009ba0 <_wcrtomb_r>
 c008b94:	1029883a 	mov	r20,r2
 c008b98:	00bfffc4 	movi	r2,-1
 c008b9c:	a0802026 	beq	r20,r2,c008c20 <__fputwc+0xd8>
 c008ba0:	d9400003 	ldbu	r5,0(sp)
 c008ba4:	a0001c26 	beq	r20,zero,c008c18 <__fputwc+0xd0>
 c008ba8:	0023883a 	mov	r17,zero
 c008bac:	05400284 	movi	r21,10
 c008bb0:	00000906 	br	c008bd8 <__fputwc+0x90>
 c008bb4:	80800017 	ldw	r2,0(r16)
 c008bb8:	11400005 	stb	r5,0(r2)
 c008bbc:	80c00017 	ldw	r3,0(r16)
 c008bc0:	18c00044 	addi	r3,r3,1
 c008bc4:	80c00015 	stw	r3,0(r16)
 c008bc8:	8c400044 	addi	r17,r17,1
 c008bcc:	dc45883a 	add	r2,sp,r17
 c008bd0:	8d00112e 	bgeu	r17,r20,c008c18 <__fputwc+0xd0>
 c008bd4:	11400003 	ldbu	r5,0(r2)
 c008bd8:	80c00217 	ldw	r3,8(r16)
 c008bdc:	18ffffc4 	addi	r3,r3,-1
 c008be0:	80c00215 	stw	r3,8(r16)
 c008be4:	183ff30e 	bge	r3,zero,c008bb4 <__alt_data_end+0xfc008bb4>
 c008be8:	80800617 	ldw	r2,24(r16)
 c008bec:	18801916 	blt	r3,r2,c008c54 <__fputwc+0x10c>
 c008bf0:	80800017 	ldw	r2,0(r16)
 c008bf4:	11400005 	stb	r5,0(r2)
 c008bf8:	80800017 	ldw	r2,0(r16)
 c008bfc:	10c00003 	ldbu	r3,0(r2)
 c008c00:	10800044 	addi	r2,r2,1
 c008c04:	1d402326 	beq	r3,r21,c008c94 <__fputwc+0x14c>
 c008c08:	80800015 	stw	r2,0(r16)
 c008c0c:	8c400044 	addi	r17,r17,1
 c008c10:	dc45883a 	add	r2,sp,r17
 c008c14:	8d3fef36 	bltu	r17,r20,c008bd4 <__alt_data_end+0xfc008bd4>
 c008c18:	9005883a 	mov	r2,r18
 c008c1c:	00000406 	br	c008c30 <__fputwc+0xe8>
 c008c20:	80c0030b 	ldhu	r3,12(r16)
 c008c24:	a005883a 	mov	r2,r20
 c008c28:	18c01014 	ori	r3,r3,64
 c008c2c:	80c0030d 	sth	r3,12(r16)
 c008c30:	dfc00717 	ldw	ra,28(sp)
 c008c34:	dd400617 	ldw	r21,24(sp)
 c008c38:	dd000517 	ldw	r20,20(sp)
 c008c3c:	dcc00417 	ldw	r19,16(sp)
 c008c40:	dc800317 	ldw	r18,12(sp)
 c008c44:	dc400217 	ldw	r17,8(sp)
 c008c48:	dc000117 	ldw	r16,4(sp)
 c008c4c:	dec00804 	addi	sp,sp,32
 c008c50:	f800283a 	ret
 c008c54:	800d883a 	mov	r6,r16
 c008c58:	29403fcc 	andi	r5,r5,255
 c008c5c:	9809883a 	mov	r4,r19
 c008c60:	c009a480 	call	c009a48 <__swbuf_r>
 c008c64:	10bfffe0 	cmpeqi	r2,r2,-1
 c008c68:	10803fcc 	andi	r2,r2,255
 c008c6c:	103fd626 	beq	r2,zero,c008bc8 <__alt_data_end+0xfc008bc8>
 c008c70:	00bfffc4 	movi	r2,-1
 c008c74:	003fee06 	br	c008c30 <__alt_data_end+0xfc008c30>
 c008c78:	90ffffc4 	addi	r3,r18,-1
 c008c7c:	01003f84 	movi	r4,254
 c008c80:	20ffbf36 	bltu	r4,r3,c008b80 <__alt_data_end+0xfc008b80>
 c008c84:	900b883a 	mov	r5,r18
 c008c88:	dc800005 	stb	r18,0(sp)
 c008c8c:	1029883a 	mov	r20,r2
 c008c90:	003fc506 	br	c008ba8 <__alt_data_end+0xfc008ba8>
 c008c94:	800d883a 	mov	r6,r16
 c008c98:	a80b883a 	mov	r5,r21
 c008c9c:	9809883a 	mov	r4,r19
 c008ca0:	c009a480 	call	c009a48 <__swbuf_r>
 c008ca4:	10bfffe0 	cmpeqi	r2,r2,-1
 c008ca8:	003fef06 	br	c008c68 <__alt_data_end+0xfc008c68>

0c008cac <_fputwc_r>:
 c008cac:	3080030b 	ldhu	r2,12(r6)
 c008cb0:	10c8000c 	andi	r3,r2,8192
 c008cb4:	1800051e 	bne	r3,zero,c008ccc <_fputwc_r+0x20>
 c008cb8:	30c01917 	ldw	r3,100(r6)
 c008cbc:	10880014 	ori	r2,r2,8192
 c008cc0:	3080030d 	sth	r2,12(r6)
 c008cc4:	18880014 	ori	r2,r3,8192
 c008cc8:	30801915 	stw	r2,100(r6)
 c008ccc:	c008b481 	jmpi	c008b48 <__fputwc>

0c008cd0 <fputwc>:
 c008cd0:	00830074 	movhi	r2,3073
 c008cd4:	defffc04 	addi	sp,sp,-16
 c008cd8:	10865604 	addi	r2,r2,6488
 c008cdc:	dc000115 	stw	r16,4(sp)
 c008ce0:	14000017 	ldw	r16,0(r2)
 c008ce4:	dc400215 	stw	r17,8(sp)
 c008ce8:	dfc00315 	stw	ra,12(sp)
 c008cec:	2023883a 	mov	r17,r4
 c008cf0:	80000226 	beq	r16,zero,c008cfc <fputwc+0x2c>
 c008cf4:	80800e17 	ldw	r2,56(r16)
 c008cf8:	10001026 	beq	r2,zero,c008d3c <fputwc+0x6c>
 c008cfc:	2880030b 	ldhu	r2,12(r5)
 c008d00:	10c8000c 	andi	r3,r2,8192
 c008d04:	1800051e 	bne	r3,zero,c008d1c <fputwc+0x4c>
 c008d08:	28c01917 	ldw	r3,100(r5)
 c008d0c:	10880014 	ori	r2,r2,8192
 c008d10:	2880030d 	sth	r2,12(r5)
 c008d14:	18880014 	ori	r2,r3,8192
 c008d18:	28801915 	stw	r2,100(r5)
 c008d1c:	280d883a 	mov	r6,r5
 c008d20:	8009883a 	mov	r4,r16
 c008d24:	880b883a 	mov	r5,r17
 c008d28:	dfc00317 	ldw	ra,12(sp)
 c008d2c:	dc400217 	ldw	r17,8(sp)
 c008d30:	dc000117 	ldw	r16,4(sp)
 c008d34:	dec00404 	addi	sp,sp,16
 c008d38:	c008b481 	jmpi	c008b48 <__fputwc>
 c008d3c:	8009883a 	mov	r4,r16
 c008d40:	d9400015 	stw	r5,0(sp)
 c008d44:	c0049880 	call	c004988 <__sinit>
 c008d48:	d9400017 	ldw	r5,0(sp)
 c008d4c:	003feb06 	br	c008cfc <__alt_data_end+0xfc008cfc>

0c008d50 <_fstat_r>:
 c008d50:	defffd04 	addi	sp,sp,-12
 c008d54:	2805883a 	mov	r2,r5
 c008d58:	dc000015 	stw	r16,0(sp)
 c008d5c:	04030074 	movhi	r16,3073
 c008d60:	dc400115 	stw	r17,4(sp)
 c008d64:	840d2804 	addi	r16,r16,13472
 c008d68:	2023883a 	mov	r17,r4
 c008d6c:	300b883a 	mov	r5,r6
 c008d70:	1009883a 	mov	r4,r2
 c008d74:	dfc00215 	stw	ra,8(sp)
 c008d78:	80000015 	stw	zero,0(r16)
 c008d7c:	c00d51c0 	call	c00d51c <fstat>
 c008d80:	00ffffc4 	movi	r3,-1
 c008d84:	10c00526 	beq	r2,r3,c008d9c <_fstat_r+0x4c>
 c008d88:	dfc00217 	ldw	ra,8(sp)
 c008d8c:	dc400117 	ldw	r17,4(sp)
 c008d90:	dc000017 	ldw	r16,0(sp)
 c008d94:	dec00304 	addi	sp,sp,12
 c008d98:	f800283a 	ret
 c008d9c:	80c00017 	ldw	r3,0(r16)
 c008da0:	183ff926 	beq	r3,zero,c008d88 <__alt_data_end+0xfc008d88>
 c008da4:	88c00015 	stw	r3,0(r17)
 c008da8:	003ff706 	br	c008d88 <__alt_data_end+0xfc008d88>

0c008dac <__sfvwrite_r>:
 c008dac:	30800217 	ldw	r2,8(r6)
 c008db0:	10006726 	beq	r2,zero,c008f50 <__sfvwrite_r+0x1a4>
 c008db4:	28c0030b 	ldhu	r3,12(r5)
 c008db8:	defff404 	addi	sp,sp,-48
 c008dbc:	dd400715 	stw	r21,28(sp)
 c008dc0:	dd000615 	stw	r20,24(sp)
 c008dc4:	dc000215 	stw	r16,8(sp)
 c008dc8:	dfc00b15 	stw	ra,44(sp)
 c008dcc:	df000a15 	stw	fp,40(sp)
 c008dd0:	ddc00915 	stw	r23,36(sp)
 c008dd4:	dd800815 	stw	r22,32(sp)
 c008dd8:	dcc00515 	stw	r19,20(sp)
 c008ddc:	dc800415 	stw	r18,16(sp)
 c008de0:	dc400315 	stw	r17,12(sp)
 c008de4:	1880020c 	andi	r2,r3,8
 c008de8:	2821883a 	mov	r16,r5
 c008dec:	202b883a 	mov	r21,r4
 c008df0:	3029883a 	mov	r20,r6
 c008df4:	10002726 	beq	r2,zero,c008e94 <__sfvwrite_r+0xe8>
 c008df8:	28800417 	ldw	r2,16(r5)
 c008dfc:	10002526 	beq	r2,zero,c008e94 <__sfvwrite_r+0xe8>
 c008e00:	1880008c 	andi	r2,r3,2
 c008e04:	a4400017 	ldw	r17,0(r20)
 c008e08:	10002a26 	beq	r2,zero,c008eb4 <__sfvwrite_r+0x108>
 c008e0c:	05a00034 	movhi	r22,32768
 c008e10:	0027883a 	mov	r19,zero
 c008e14:	0025883a 	mov	r18,zero
 c008e18:	b5bf0004 	addi	r22,r22,-1024
 c008e1c:	980d883a 	mov	r6,r19
 c008e20:	a809883a 	mov	r4,r21
 c008e24:	90004626 	beq	r18,zero,c008f40 <__sfvwrite_r+0x194>
 c008e28:	900f883a 	mov	r7,r18
 c008e2c:	b480022e 	bgeu	r22,r18,c008e38 <__sfvwrite_r+0x8c>
 c008e30:	01e00034 	movhi	r7,32768
 c008e34:	39ff0004 	addi	r7,r7,-1024
 c008e38:	80800917 	ldw	r2,36(r16)
 c008e3c:	81400717 	ldw	r5,28(r16)
 c008e40:	103ee83a 	callr	r2
 c008e44:	00805a0e 	bge	zero,r2,c008fb0 <__sfvwrite_r+0x204>
 c008e48:	a0c00217 	ldw	r3,8(r20)
 c008e4c:	98a7883a 	add	r19,r19,r2
 c008e50:	90a5c83a 	sub	r18,r18,r2
 c008e54:	1885c83a 	sub	r2,r3,r2
 c008e58:	a0800215 	stw	r2,8(r20)
 c008e5c:	103fef1e 	bne	r2,zero,c008e1c <__alt_data_end+0xfc008e1c>
 c008e60:	0005883a 	mov	r2,zero
 c008e64:	dfc00b17 	ldw	ra,44(sp)
 c008e68:	df000a17 	ldw	fp,40(sp)
 c008e6c:	ddc00917 	ldw	r23,36(sp)
 c008e70:	dd800817 	ldw	r22,32(sp)
 c008e74:	dd400717 	ldw	r21,28(sp)
 c008e78:	dd000617 	ldw	r20,24(sp)
 c008e7c:	dcc00517 	ldw	r19,20(sp)
 c008e80:	dc800417 	ldw	r18,16(sp)
 c008e84:	dc400317 	ldw	r17,12(sp)
 c008e88:	dc000217 	ldw	r16,8(sp)
 c008e8c:	dec00c04 	addi	sp,sp,48
 c008e90:	f800283a 	ret
 c008e94:	800b883a 	mov	r5,r16
 c008e98:	a809883a 	mov	r4,r21
 c008e9c:	c00297c0 	call	c00297c <__swsetup_r>
 c008ea0:	1000ee1e 	bne	r2,zero,c00925c <__sfvwrite_r+0x4b0>
 c008ea4:	80c0030b 	ldhu	r3,12(r16)
 c008ea8:	a4400017 	ldw	r17,0(r20)
 c008eac:	1880008c 	andi	r2,r3,2
 c008eb0:	103fd61e 	bne	r2,zero,c008e0c <__alt_data_end+0xfc008e0c>
 c008eb4:	1880004c 	andi	r2,r3,1
 c008eb8:	1000421e 	bne	r2,zero,c008fc4 <__sfvwrite_r+0x218>
 c008ebc:	0039883a 	mov	fp,zero
 c008ec0:	0025883a 	mov	r18,zero
 c008ec4:	90001a26 	beq	r18,zero,c008f30 <__sfvwrite_r+0x184>
 c008ec8:	1880800c 	andi	r2,r3,512
 c008ecc:	84c00217 	ldw	r19,8(r16)
 c008ed0:	10002126 	beq	r2,zero,c008f58 <__sfvwrite_r+0x1ac>
 c008ed4:	982f883a 	mov	r23,r19
 c008ed8:	94c09636 	bltu	r18,r19,c009134 <__sfvwrite_r+0x388>
 c008edc:	1881200c 	andi	r2,r3,1152
 c008ee0:	1000a11e 	bne	r2,zero,c009168 <__sfvwrite_r+0x3bc>
 c008ee4:	81000017 	ldw	r4,0(r16)
 c008ee8:	b80d883a 	mov	r6,r23
 c008eec:	e00b883a 	mov	r5,fp
 c008ef0:	c0093280 	call	c009328 <memmove>
 c008ef4:	80c00217 	ldw	r3,8(r16)
 c008ef8:	81000017 	ldw	r4,0(r16)
 c008efc:	9005883a 	mov	r2,r18
 c008f00:	1ce7c83a 	sub	r19,r3,r19
 c008f04:	25cf883a 	add	r7,r4,r23
 c008f08:	84c00215 	stw	r19,8(r16)
 c008f0c:	81c00015 	stw	r7,0(r16)
 c008f10:	a0c00217 	ldw	r3,8(r20)
 c008f14:	e0b9883a 	add	fp,fp,r2
 c008f18:	90a5c83a 	sub	r18,r18,r2
 c008f1c:	18a7c83a 	sub	r19,r3,r2
 c008f20:	a4c00215 	stw	r19,8(r20)
 c008f24:	983fce26 	beq	r19,zero,c008e60 <__alt_data_end+0xfc008e60>
 c008f28:	80c0030b 	ldhu	r3,12(r16)
 c008f2c:	903fe61e 	bne	r18,zero,c008ec8 <__alt_data_end+0xfc008ec8>
 c008f30:	8f000017 	ldw	fp,0(r17)
 c008f34:	8c800117 	ldw	r18,4(r17)
 c008f38:	8c400204 	addi	r17,r17,8
 c008f3c:	003fe106 	br	c008ec4 <__alt_data_end+0xfc008ec4>
 c008f40:	8cc00017 	ldw	r19,0(r17)
 c008f44:	8c800117 	ldw	r18,4(r17)
 c008f48:	8c400204 	addi	r17,r17,8
 c008f4c:	003fb306 	br	c008e1c <__alt_data_end+0xfc008e1c>
 c008f50:	0005883a 	mov	r2,zero
 c008f54:	f800283a 	ret
 c008f58:	81000017 	ldw	r4,0(r16)
 c008f5c:	80800417 	ldw	r2,16(r16)
 c008f60:	11005a36 	bltu	r2,r4,c0090cc <__sfvwrite_r+0x320>
 c008f64:	85c00517 	ldw	r23,20(r16)
 c008f68:	95c05836 	bltu	r18,r23,c0090cc <__sfvwrite_r+0x320>
 c008f6c:	00a00034 	movhi	r2,32768
 c008f70:	10bfffc4 	addi	r2,r2,-1
 c008f74:	9009883a 	mov	r4,r18
 c008f78:	1480012e 	bgeu	r2,r18,c008f80 <__sfvwrite_r+0x1d4>
 c008f7c:	1009883a 	mov	r4,r2
 c008f80:	b80b883a 	mov	r5,r23
 c008f84:	c00a9480 	call	c00a948 <__divsi3>
 c008f88:	b80b883a 	mov	r5,r23
 c008f8c:	1009883a 	mov	r4,r2
 c008f90:	c0005340 	call	c000534 <__mulsi3>
 c008f94:	81400717 	ldw	r5,28(r16)
 c008f98:	80c00917 	ldw	r3,36(r16)
 c008f9c:	100f883a 	mov	r7,r2
 c008fa0:	e00d883a 	mov	r6,fp
 c008fa4:	a809883a 	mov	r4,r21
 c008fa8:	183ee83a 	callr	r3
 c008fac:	00bfd816 	blt	zero,r2,c008f10 <__alt_data_end+0xfc008f10>
 c008fb0:	8080030b 	ldhu	r2,12(r16)
 c008fb4:	10801014 	ori	r2,r2,64
 c008fb8:	8080030d 	sth	r2,12(r16)
 c008fbc:	00bfffc4 	movi	r2,-1
 c008fc0:	003fa806 	br	c008e64 <__alt_data_end+0xfc008e64>
 c008fc4:	0027883a 	mov	r19,zero
 c008fc8:	0011883a 	mov	r8,zero
 c008fcc:	0039883a 	mov	fp,zero
 c008fd0:	0025883a 	mov	r18,zero
 c008fd4:	90001f26 	beq	r18,zero,c009054 <__sfvwrite_r+0x2a8>
 c008fd8:	40005a26 	beq	r8,zero,c009144 <__sfvwrite_r+0x398>
 c008fdc:	982d883a 	mov	r22,r19
 c008fe0:	94c0012e 	bgeu	r18,r19,c008fe8 <__sfvwrite_r+0x23c>
 c008fe4:	902d883a 	mov	r22,r18
 c008fe8:	81000017 	ldw	r4,0(r16)
 c008fec:	80800417 	ldw	r2,16(r16)
 c008ff0:	b02f883a 	mov	r23,r22
 c008ff4:	81c00517 	ldw	r7,20(r16)
 c008ff8:	1100032e 	bgeu	r2,r4,c009008 <__sfvwrite_r+0x25c>
 c008ffc:	80c00217 	ldw	r3,8(r16)
 c009000:	38c7883a 	add	r3,r7,r3
 c009004:	1d801816 	blt	r3,r22,c009068 <__sfvwrite_r+0x2bc>
 c009008:	b1c03e16 	blt	r22,r7,c009104 <__sfvwrite_r+0x358>
 c00900c:	80800917 	ldw	r2,36(r16)
 c009010:	81400717 	ldw	r5,28(r16)
 c009014:	e00d883a 	mov	r6,fp
 c009018:	da000115 	stw	r8,4(sp)
 c00901c:	a809883a 	mov	r4,r21
 c009020:	103ee83a 	callr	r2
 c009024:	102f883a 	mov	r23,r2
 c009028:	da000117 	ldw	r8,4(sp)
 c00902c:	00bfe00e 	bge	zero,r2,c008fb0 <__alt_data_end+0xfc008fb0>
 c009030:	9de7c83a 	sub	r19,r19,r23
 c009034:	98001f26 	beq	r19,zero,c0090b4 <__sfvwrite_r+0x308>
 c009038:	a0800217 	ldw	r2,8(r20)
 c00903c:	e5f9883a 	add	fp,fp,r23
 c009040:	95e5c83a 	sub	r18,r18,r23
 c009044:	15efc83a 	sub	r23,r2,r23
 c009048:	a5c00215 	stw	r23,8(r20)
 c00904c:	b83f8426 	beq	r23,zero,c008e60 <__alt_data_end+0xfc008e60>
 c009050:	903fe11e 	bne	r18,zero,c008fd8 <__alt_data_end+0xfc008fd8>
 c009054:	8f000017 	ldw	fp,0(r17)
 c009058:	8c800117 	ldw	r18,4(r17)
 c00905c:	0011883a 	mov	r8,zero
 c009060:	8c400204 	addi	r17,r17,8
 c009064:	003fdb06 	br	c008fd4 <__alt_data_end+0xfc008fd4>
 c009068:	180d883a 	mov	r6,r3
 c00906c:	e00b883a 	mov	r5,fp
 c009070:	da000115 	stw	r8,4(sp)
 c009074:	d8c00015 	stw	r3,0(sp)
 c009078:	c0093280 	call	c009328 <memmove>
 c00907c:	d8c00017 	ldw	r3,0(sp)
 c009080:	80800017 	ldw	r2,0(r16)
 c009084:	800b883a 	mov	r5,r16
 c009088:	a809883a 	mov	r4,r21
 c00908c:	10c5883a 	add	r2,r2,r3
 c009090:	80800015 	stw	r2,0(r16)
 c009094:	d8c00015 	stw	r3,0(sp)
 c009098:	c00459c0 	call	c00459c <_fflush_r>
 c00909c:	d8c00017 	ldw	r3,0(sp)
 c0090a0:	da000117 	ldw	r8,4(sp)
 c0090a4:	103fc21e 	bne	r2,zero,c008fb0 <__alt_data_end+0xfc008fb0>
 c0090a8:	182f883a 	mov	r23,r3
 c0090ac:	9de7c83a 	sub	r19,r19,r23
 c0090b0:	983fe11e 	bne	r19,zero,c009038 <__alt_data_end+0xfc009038>
 c0090b4:	800b883a 	mov	r5,r16
 c0090b8:	a809883a 	mov	r4,r21
 c0090bc:	c00459c0 	call	c00459c <_fflush_r>
 c0090c0:	103fbb1e 	bne	r2,zero,c008fb0 <__alt_data_end+0xfc008fb0>
 c0090c4:	0011883a 	mov	r8,zero
 c0090c8:	003fdb06 	br	c009038 <__alt_data_end+0xfc009038>
 c0090cc:	94c0012e 	bgeu	r18,r19,c0090d4 <__sfvwrite_r+0x328>
 c0090d0:	9027883a 	mov	r19,r18
 c0090d4:	980d883a 	mov	r6,r19
 c0090d8:	e00b883a 	mov	r5,fp
 c0090dc:	c0093280 	call	c009328 <memmove>
 c0090e0:	80800217 	ldw	r2,8(r16)
 c0090e4:	80c00017 	ldw	r3,0(r16)
 c0090e8:	14c5c83a 	sub	r2,r2,r19
 c0090ec:	1cc7883a 	add	r3,r3,r19
 c0090f0:	80800215 	stw	r2,8(r16)
 c0090f4:	80c00015 	stw	r3,0(r16)
 c0090f8:	10004326 	beq	r2,zero,c009208 <__sfvwrite_r+0x45c>
 c0090fc:	9805883a 	mov	r2,r19
 c009100:	003f8306 	br	c008f10 <__alt_data_end+0xfc008f10>
 c009104:	b00d883a 	mov	r6,r22
 c009108:	e00b883a 	mov	r5,fp
 c00910c:	da000115 	stw	r8,4(sp)
 c009110:	c0093280 	call	c009328 <memmove>
 c009114:	80800217 	ldw	r2,8(r16)
 c009118:	80c00017 	ldw	r3,0(r16)
 c00911c:	da000117 	ldw	r8,4(sp)
 c009120:	1585c83a 	sub	r2,r2,r22
 c009124:	1dad883a 	add	r22,r3,r22
 c009128:	80800215 	stw	r2,8(r16)
 c00912c:	85800015 	stw	r22,0(r16)
 c009130:	003fbf06 	br	c009030 <__alt_data_end+0xfc009030>
 c009134:	81000017 	ldw	r4,0(r16)
 c009138:	9027883a 	mov	r19,r18
 c00913c:	902f883a 	mov	r23,r18
 c009140:	003f6906 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c009144:	900d883a 	mov	r6,r18
 c009148:	01400284 	movi	r5,10
 c00914c:	e009883a 	mov	r4,fp
 c009150:	c005a380 	call	c005a38 <memchr>
 c009154:	10003e26 	beq	r2,zero,c009250 <__sfvwrite_r+0x4a4>
 c009158:	10800044 	addi	r2,r2,1
 c00915c:	1727c83a 	sub	r19,r2,fp
 c009160:	02000044 	movi	r8,1
 c009164:	003f9d06 	br	c008fdc <__alt_data_end+0xfc008fdc>
 c009168:	80800517 	ldw	r2,20(r16)
 c00916c:	81400417 	ldw	r5,16(r16)
 c009170:	81c00017 	ldw	r7,0(r16)
 c009174:	10a7883a 	add	r19,r2,r2
 c009178:	9885883a 	add	r2,r19,r2
 c00917c:	1026d7fa 	srli	r19,r2,31
 c009180:	396dc83a 	sub	r22,r7,r5
 c009184:	b1000044 	addi	r4,r22,1
 c009188:	9885883a 	add	r2,r19,r2
 c00918c:	1027d07a 	srai	r19,r2,1
 c009190:	2485883a 	add	r2,r4,r18
 c009194:	980d883a 	mov	r6,r19
 c009198:	9880022e 	bgeu	r19,r2,c0091a4 <__sfvwrite_r+0x3f8>
 c00919c:	1027883a 	mov	r19,r2
 c0091a0:	100d883a 	mov	r6,r2
 c0091a4:	18c1000c 	andi	r3,r3,1024
 c0091a8:	18001c26 	beq	r3,zero,c00921c <__sfvwrite_r+0x470>
 c0091ac:	300b883a 	mov	r5,r6
 c0091b0:	a809883a 	mov	r4,r21
 c0091b4:	c00522c0 	call	c00522c <_malloc_r>
 c0091b8:	102f883a 	mov	r23,r2
 c0091bc:	10002926 	beq	r2,zero,c009264 <__sfvwrite_r+0x4b8>
 c0091c0:	81400417 	ldw	r5,16(r16)
 c0091c4:	b00d883a 	mov	r6,r22
 c0091c8:	1009883a 	mov	r4,r2
 c0091cc:	c005b1c0 	call	c005b1c <memcpy>
 c0091d0:	8080030b 	ldhu	r2,12(r16)
 c0091d4:	00fedfc4 	movi	r3,-1153
 c0091d8:	10c4703a 	and	r2,r2,r3
 c0091dc:	10802014 	ori	r2,r2,128
 c0091e0:	8080030d 	sth	r2,12(r16)
 c0091e4:	bd89883a 	add	r4,r23,r22
 c0091e8:	9d8fc83a 	sub	r7,r19,r22
 c0091ec:	85c00415 	stw	r23,16(r16)
 c0091f0:	84c00515 	stw	r19,20(r16)
 c0091f4:	81000015 	stw	r4,0(r16)
 c0091f8:	9027883a 	mov	r19,r18
 c0091fc:	81c00215 	stw	r7,8(r16)
 c009200:	902f883a 	mov	r23,r18
 c009204:	003f3806 	br	c008ee8 <__alt_data_end+0xfc008ee8>
 c009208:	800b883a 	mov	r5,r16
 c00920c:	a809883a 	mov	r4,r21
 c009210:	c00459c0 	call	c00459c <_fflush_r>
 c009214:	103fb926 	beq	r2,zero,c0090fc <__alt_data_end+0xfc0090fc>
 c009218:	003f6506 	br	c008fb0 <__alt_data_end+0xfc008fb0>
 c00921c:	a809883a 	mov	r4,r21
 c009220:	c0094e40 	call	c0094e4 <_realloc_r>
 c009224:	102f883a 	mov	r23,r2
 c009228:	103fee1e 	bne	r2,zero,c0091e4 <__alt_data_end+0xfc0091e4>
 c00922c:	81400417 	ldw	r5,16(r16)
 c009230:	a809883a 	mov	r4,r21
 c009234:	c004afc0 	call	c004afc <_free_r>
 c009238:	8080030b 	ldhu	r2,12(r16)
 c00923c:	00ffdfc4 	movi	r3,-129
 c009240:	1884703a 	and	r2,r3,r2
 c009244:	00c00304 	movi	r3,12
 c009248:	a8c00015 	stw	r3,0(r21)
 c00924c:	003f5906 	br	c008fb4 <__alt_data_end+0xfc008fb4>
 c009250:	94c00044 	addi	r19,r18,1
 c009254:	02000044 	movi	r8,1
 c009258:	003f6006 	br	c008fdc <__alt_data_end+0xfc008fdc>
 c00925c:	00bfffc4 	movi	r2,-1
 c009260:	003f0006 	br	c008e64 <__alt_data_end+0xfc008e64>
 c009264:	00800304 	movi	r2,12
 c009268:	a8800015 	stw	r2,0(r21)
 c00926c:	8080030b 	ldhu	r2,12(r16)
 c009270:	003f5006 	br	c008fb4 <__alt_data_end+0xfc008fb4>

0c009274 <_isatty_r>:
 c009274:	defffd04 	addi	sp,sp,-12
 c009278:	dc000015 	stw	r16,0(sp)
 c00927c:	04030074 	movhi	r16,3073
 c009280:	dc400115 	stw	r17,4(sp)
 c009284:	840d2804 	addi	r16,r16,13472
 c009288:	2023883a 	mov	r17,r4
 c00928c:	2809883a 	mov	r4,r5
 c009290:	dfc00215 	stw	ra,8(sp)
 c009294:	80000015 	stw	zero,0(r16)
 c009298:	c00d6100 	call	c00d610 <isatty>
 c00929c:	00ffffc4 	movi	r3,-1
 c0092a0:	10c00526 	beq	r2,r3,c0092b8 <_isatty_r+0x44>
 c0092a4:	dfc00217 	ldw	ra,8(sp)
 c0092a8:	dc400117 	ldw	r17,4(sp)
 c0092ac:	dc000017 	ldw	r16,0(sp)
 c0092b0:	dec00304 	addi	sp,sp,12
 c0092b4:	f800283a 	ret
 c0092b8:	80c00017 	ldw	r3,0(r16)
 c0092bc:	183ff926 	beq	r3,zero,c0092a4 <__alt_data_end+0xfc0092a4>
 c0092c0:	88c00015 	stw	r3,0(r17)
 c0092c4:	003ff706 	br	c0092a4 <__alt_data_end+0xfc0092a4>

0c0092c8 <_lseek_r>:
 c0092c8:	defffd04 	addi	sp,sp,-12
 c0092cc:	2805883a 	mov	r2,r5
 c0092d0:	dc000015 	stw	r16,0(sp)
 c0092d4:	04030074 	movhi	r16,3073
 c0092d8:	dc400115 	stw	r17,4(sp)
 c0092dc:	300b883a 	mov	r5,r6
 c0092e0:	840d2804 	addi	r16,r16,13472
 c0092e4:	2023883a 	mov	r17,r4
 c0092e8:	380d883a 	mov	r6,r7
 c0092ec:	1009883a 	mov	r4,r2
 c0092f0:	dfc00215 	stw	ra,8(sp)
 c0092f4:	80000015 	stw	zero,0(r16)
 c0092f8:	c00d7e40 	call	c00d7e4 <lseek>
 c0092fc:	00ffffc4 	movi	r3,-1
 c009300:	10c00526 	beq	r2,r3,c009318 <_lseek_r+0x50>
 c009304:	dfc00217 	ldw	ra,8(sp)
 c009308:	dc400117 	ldw	r17,4(sp)
 c00930c:	dc000017 	ldw	r16,0(sp)
 c009310:	dec00304 	addi	sp,sp,12
 c009314:	f800283a 	ret
 c009318:	80c00017 	ldw	r3,0(r16)
 c00931c:	183ff926 	beq	r3,zero,c009304 <__alt_data_end+0xfc009304>
 c009320:	88c00015 	stw	r3,0(r17)
 c009324:	003ff706 	br	c009304 <__alt_data_end+0xfc009304>

0c009328 <memmove>:
 c009328:	2005883a 	mov	r2,r4
 c00932c:	29000b2e 	bgeu	r5,r4,c00935c <memmove+0x34>
 c009330:	298f883a 	add	r7,r5,r6
 c009334:	21c0092e 	bgeu	r4,r7,c00935c <memmove+0x34>
 c009338:	2187883a 	add	r3,r4,r6
 c00933c:	198bc83a 	sub	r5,r3,r6
 c009340:	30004826 	beq	r6,zero,c009464 <memmove+0x13c>
 c009344:	39ffffc4 	addi	r7,r7,-1
 c009348:	39000003 	ldbu	r4,0(r7)
 c00934c:	18ffffc4 	addi	r3,r3,-1
 c009350:	19000005 	stb	r4,0(r3)
 c009354:	28fffb1e 	bne	r5,r3,c009344 <__alt_data_end+0xfc009344>
 c009358:	f800283a 	ret
 c00935c:	00c003c4 	movi	r3,15
 c009360:	1980412e 	bgeu	r3,r6,c009468 <memmove+0x140>
 c009364:	2886b03a 	or	r3,r5,r2
 c009368:	18c000cc 	andi	r3,r3,3
 c00936c:	1800401e 	bne	r3,zero,c009470 <memmove+0x148>
 c009370:	33fffc04 	addi	r15,r6,-16
 c009374:	781ed13a 	srli	r15,r15,4
 c009378:	28c00104 	addi	r3,r5,4
 c00937c:	13400104 	addi	r13,r2,4
 c009380:	781c913a 	slli	r14,r15,4
 c009384:	2b000204 	addi	r12,r5,8
 c009388:	12c00204 	addi	r11,r2,8
 c00938c:	73800504 	addi	r14,r14,20
 c009390:	2a800304 	addi	r10,r5,12
 c009394:	12400304 	addi	r9,r2,12
 c009398:	2b9d883a 	add	r14,r5,r14
 c00939c:	2811883a 	mov	r8,r5
 c0093a0:	100f883a 	mov	r7,r2
 c0093a4:	41000017 	ldw	r4,0(r8)
 c0093a8:	39c00404 	addi	r7,r7,16
 c0093ac:	18c00404 	addi	r3,r3,16
 c0093b0:	393ffc15 	stw	r4,-16(r7)
 c0093b4:	193ffc17 	ldw	r4,-16(r3)
 c0093b8:	6b400404 	addi	r13,r13,16
 c0093bc:	5ac00404 	addi	r11,r11,16
 c0093c0:	693ffc15 	stw	r4,-16(r13)
 c0093c4:	61000017 	ldw	r4,0(r12)
 c0093c8:	4a400404 	addi	r9,r9,16
 c0093cc:	42000404 	addi	r8,r8,16
 c0093d0:	593ffc15 	stw	r4,-16(r11)
 c0093d4:	51000017 	ldw	r4,0(r10)
 c0093d8:	63000404 	addi	r12,r12,16
 c0093dc:	52800404 	addi	r10,r10,16
 c0093e0:	493ffc15 	stw	r4,-16(r9)
 c0093e4:	1bbfef1e 	bne	r3,r14,c0093a4 <__alt_data_end+0xfc0093a4>
 c0093e8:	79000044 	addi	r4,r15,1
 c0093ec:	2008913a 	slli	r4,r4,4
 c0093f0:	328003cc 	andi	r10,r6,15
 c0093f4:	02c000c4 	movi	r11,3
 c0093f8:	1107883a 	add	r3,r2,r4
 c0093fc:	290b883a 	add	r5,r5,r4
 c009400:	5a801e2e 	bgeu	r11,r10,c00947c <memmove+0x154>
 c009404:	1813883a 	mov	r9,r3
 c009408:	2811883a 	mov	r8,r5
 c00940c:	500f883a 	mov	r7,r10
 c009410:	41000017 	ldw	r4,0(r8)
 c009414:	4a400104 	addi	r9,r9,4
 c009418:	39ffff04 	addi	r7,r7,-4
 c00941c:	493fff15 	stw	r4,-4(r9)
 c009420:	42000104 	addi	r8,r8,4
 c009424:	59fffa36 	bltu	r11,r7,c009410 <__alt_data_end+0xfc009410>
 c009428:	513fff04 	addi	r4,r10,-4
 c00942c:	2008d0ba 	srli	r4,r4,2
 c009430:	318000cc 	andi	r6,r6,3
 c009434:	21000044 	addi	r4,r4,1
 c009438:	2109883a 	add	r4,r4,r4
 c00943c:	2109883a 	add	r4,r4,r4
 c009440:	1907883a 	add	r3,r3,r4
 c009444:	290b883a 	add	r5,r5,r4
 c009448:	30000b26 	beq	r6,zero,c009478 <memmove+0x150>
 c00944c:	198d883a 	add	r6,r3,r6
 c009450:	29c00003 	ldbu	r7,0(r5)
 c009454:	18c00044 	addi	r3,r3,1
 c009458:	29400044 	addi	r5,r5,1
 c00945c:	19ffffc5 	stb	r7,-1(r3)
 c009460:	19bffb1e 	bne	r3,r6,c009450 <__alt_data_end+0xfc009450>
 c009464:	f800283a 	ret
 c009468:	1007883a 	mov	r3,r2
 c00946c:	003ff606 	br	c009448 <__alt_data_end+0xfc009448>
 c009470:	1007883a 	mov	r3,r2
 c009474:	003ff506 	br	c00944c <__alt_data_end+0xfc00944c>
 c009478:	f800283a 	ret
 c00947c:	500d883a 	mov	r6,r10
 c009480:	003ff106 	br	c009448 <__alt_data_end+0xfc009448>

0c009484 <_read_r>:
 c009484:	defffd04 	addi	sp,sp,-12
 c009488:	2805883a 	mov	r2,r5
 c00948c:	dc000015 	stw	r16,0(sp)
 c009490:	04030074 	movhi	r16,3073
 c009494:	dc400115 	stw	r17,4(sp)
 c009498:	300b883a 	mov	r5,r6
 c00949c:	840d2804 	addi	r16,r16,13472
 c0094a0:	2023883a 	mov	r17,r4
 c0094a4:	380d883a 	mov	r6,r7
 c0094a8:	1009883a 	mov	r4,r2
 c0094ac:	dfc00215 	stw	ra,8(sp)
 c0094b0:	80000015 	stw	zero,0(r16)
 c0094b4:	c00d9c00 	call	c00d9c0 <read>
 c0094b8:	00ffffc4 	movi	r3,-1
 c0094bc:	10c00526 	beq	r2,r3,c0094d4 <_read_r+0x50>
 c0094c0:	dfc00217 	ldw	ra,8(sp)
 c0094c4:	dc400117 	ldw	r17,4(sp)
 c0094c8:	dc000017 	ldw	r16,0(sp)
 c0094cc:	dec00304 	addi	sp,sp,12
 c0094d0:	f800283a 	ret
 c0094d4:	80c00017 	ldw	r3,0(r16)
 c0094d8:	183ff926 	beq	r3,zero,c0094c0 <__alt_data_end+0xfc0094c0>
 c0094dc:	88c00015 	stw	r3,0(r17)
 c0094e0:	003ff706 	br	c0094c0 <__alt_data_end+0xfc0094c0>

0c0094e4 <_realloc_r>:
 c0094e4:	defff604 	addi	sp,sp,-40
 c0094e8:	dc800215 	stw	r18,8(sp)
 c0094ec:	dfc00915 	stw	ra,36(sp)
 c0094f0:	df000815 	stw	fp,32(sp)
 c0094f4:	ddc00715 	stw	r23,28(sp)
 c0094f8:	dd800615 	stw	r22,24(sp)
 c0094fc:	dd400515 	stw	r21,20(sp)
 c009500:	dd000415 	stw	r20,16(sp)
 c009504:	dcc00315 	stw	r19,12(sp)
 c009508:	dc400115 	stw	r17,4(sp)
 c00950c:	dc000015 	stw	r16,0(sp)
 c009510:	3025883a 	mov	r18,r6
 c009514:	2800b726 	beq	r5,zero,c0097f4 <_realloc_r+0x310>
 c009518:	282b883a 	mov	r21,r5
 c00951c:	2029883a 	mov	r20,r4
 c009520:	c00d93c0 	call	c00d93c <__malloc_lock>
 c009524:	a8bfff17 	ldw	r2,-4(r21)
 c009528:	043fff04 	movi	r16,-4
 c00952c:	90c002c4 	addi	r3,r18,11
 c009530:	01000584 	movi	r4,22
 c009534:	acfffe04 	addi	r19,r21,-8
 c009538:	1420703a 	and	r16,r2,r16
 c00953c:	20c0332e 	bgeu	r4,r3,c00960c <_realloc_r+0x128>
 c009540:	047ffe04 	movi	r17,-8
 c009544:	1c62703a 	and	r17,r3,r17
 c009548:	8807883a 	mov	r3,r17
 c00954c:	88005816 	blt	r17,zero,c0096b0 <_realloc_r+0x1cc>
 c009550:	8c805736 	bltu	r17,r18,c0096b0 <_realloc_r+0x1cc>
 c009554:	80c0300e 	bge	r16,r3,c009618 <_realloc_r+0x134>
 c009558:	07030074 	movhi	fp,3073
 c00955c:	e700cf04 	addi	fp,fp,828
 c009560:	e1c00217 	ldw	r7,8(fp)
 c009564:	9c09883a 	add	r4,r19,r16
 c009568:	22000117 	ldw	r8,4(r4)
 c00956c:	21c06326 	beq	r4,r7,c0096fc <_realloc_r+0x218>
 c009570:	017fff84 	movi	r5,-2
 c009574:	414a703a 	and	r5,r8,r5
 c009578:	214b883a 	add	r5,r4,r5
 c00957c:	29800117 	ldw	r6,4(r5)
 c009580:	3180004c 	andi	r6,r6,1
 c009584:	30003f26 	beq	r6,zero,c009684 <_realloc_r+0x1a0>
 c009588:	1080004c 	andi	r2,r2,1
 c00958c:	10008326 	beq	r2,zero,c00979c <_realloc_r+0x2b8>
 c009590:	900b883a 	mov	r5,r18
 c009594:	a009883a 	mov	r4,r20
 c009598:	c00522c0 	call	c00522c <_malloc_r>
 c00959c:	1025883a 	mov	r18,r2
 c0095a0:	10011e26 	beq	r2,zero,c009a1c <_realloc_r+0x538>
 c0095a4:	a93fff17 	ldw	r4,-4(r21)
 c0095a8:	10fffe04 	addi	r3,r2,-8
 c0095ac:	00bfff84 	movi	r2,-2
 c0095b0:	2084703a 	and	r2,r4,r2
 c0095b4:	9885883a 	add	r2,r19,r2
 c0095b8:	1880ee26 	beq	r3,r2,c009974 <_realloc_r+0x490>
 c0095bc:	81bfff04 	addi	r6,r16,-4
 c0095c0:	00800904 	movi	r2,36
 c0095c4:	1180b836 	bltu	r2,r6,c0098a8 <_realloc_r+0x3c4>
 c0095c8:	00c004c4 	movi	r3,19
 c0095cc:	19809636 	bltu	r3,r6,c009828 <_realloc_r+0x344>
 c0095d0:	9005883a 	mov	r2,r18
 c0095d4:	a807883a 	mov	r3,r21
 c0095d8:	19000017 	ldw	r4,0(r3)
 c0095dc:	11000015 	stw	r4,0(r2)
 c0095e0:	19000117 	ldw	r4,4(r3)
 c0095e4:	11000115 	stw	r4,4(r2)
 c0095e8:	18c00217 	ldw	r3,8(r3)
 c0095ec:	10c00215 	stw	r3,8(r2)
 c0095f0:	a80b883a 	mov	r5,r21
 c0095f4:	a009883a 	mov	r4,r20
 c0095f8:	c004afc0 	call	c004afc <_free_r>
 c0095fc:	a009883a 	mov	r4,r20
 c009600:	c00d9600 	call	c00d960 <__malloc_unlock>
 c009604:	9005883a 	mov	r2,r18
 c009608:	00001206 	br	c009654 <_realloc_r+0x170>
 c00960c:	00c00404 	movi	r3,16
 c009610:	1823883a 	mov	r17,r3
 c009614:	003fce06 	br	c009550 <__alt_data_end+0xfc009550>
 c009618:	a825883a 	mov	r18,r21
 c00961c:	8445c83a 	sub	r2,r16,r17
 c009620:	00c003c4 	movi	r3,15
 c009624:	18802636 	bltu	r3,r2,c0096c0 <_realloc_r+0x1dc>
 c009628:	99800117 	ldw	r6,4(r19)
 c00962c:	9c07883a 	add	r3,r19,r16
 c009630:	3180004c 	andi	r6,r6,1
 c009634:	3420b03a 	or	r16,r6,r16
 c009638:	9c000115 	stw	r16,4(r19)
 c00963c:	18800117 	ldw	r2,4(r3)
 c009640:	10800054 	ori	r2,r2,1
 c009644:	18800115 	stw	r2,4(r3)
 c009648:	a009883a 	mov	r4,r20
 c00964c:	c00d9600 	call	c00d960 <__malloc_unlock>
 c009650:	9005883a 	mov	r2,r18
 c009654:	dfc00917 	ldw	ra,36(sp)
 c009658:	df000817 	ldw	fp,32(sp)
 c00965c:	ddc00717 	ldw	r23,28(sp)
 c009660:	dd800617 	ldw	r22,24(sp)
 c009664:	dd400517 	ldw	r21,20(sp)
 c009668:	dd000417 	ldw	r20,16(sp)
 c00966c:	dcc00317 	ldw	r19,12(sp)
 c009670:	dc800217 	ldw	r18,8(sp)
 c009674:	dc400117 	ldw	r17,4(sp)
 c009678:	dc000017 	ldw	r16,0(sp)
 c00967c:	dec00a04 	addi	sp,sp,40
 c009680:	f800283a 	ret
 c009684:	017fff04 	movi	r5,-4
 c009688:	414a703a 	and	r5,r8,r5
 c00968c:	814d883a 	add	r6,r16,r5
 c009690:	30c01f16 	blt	r6,r3,c009710 <_realloc_r+0x22c>
 c009694:	20800317 	ldw	r2,12(r4)
 c009698:	20c00217 	ldw	r3,8(r4)
 c00969c:	a825883a 	mov	r18,r21
 c0096a0:	3021883a 	mov	r16,r6
 c0096a4:	18800315 	stw	r2,12(r3)
 c0096a8:	10c00215 	stw	r3,8(r2)
 c0096ac:	003fdb06 	br	c00961c <__alt_data_end+0xfc00961c>
 c0096b0:	00800304 	movi	r2,12
 c0096b4:	a0800015 	stw	r2,0(r20)
 c0096b8:	0005883a 	mov	r2,zero
 c0096bc:	003fe506 	br	c009654 <__alt_data_end+0xfc009654>
 c0096c0:	98c00117 	ldw	r3,4(r19)
 c0096c4:	9c4b883a 	add	r5,r19,r17
 c0096c8:	11000054 	ori	r4,r2,1
 c0096cc:	18c0004c 	andi	r3,r3,1
 c0096d0:	1c62b03a 	or	r17,r3,r17
 c0096d4:	9c400115 	stw	r17,4(r19)
 c0096d8:	29000115 	stw	r4,4(r5)
 c0096dc:	2885883a 	add	r2,r5,r2
 c0096e0:	10c00117 	ldw	r3,4(r2)
 c0096e4:	29400204 	addi	r5,r5,8
 c0096e8:	a009883a 	mov	r4,r20
 c0096ec:	18c00054 	ori	r3,r3,1
 c0096f0:	10c00115 	stw	r3,4(r2)
 c0096f4:	c004afc0 	call	c004afc <_free_r>
 c0096f8:	003fd306 	br	c009648 <__alt_data_end+0xfc009648>
 c0096fc:	017fff04 	movi	r5,-4
 c009700:	414a703a 	and	r5,r8,r5
 c009704:	89800404 	addi	r6,r17,16
 c009708:	8151883a 	add	r8,r16,r5
 c00970c:	4180590e 	bge	r8,r6,c009874 <_realloc_r+0x390>
 c009710:	1080004c 	andi	r2,r2,1
 c009714:	103f9e1e 	bne	r2,zero,c009590 <__alt_data_end+0xfc009590>
 c009718:	adbffe17 	ldw	r22,-8(r21)
 c00971c:	00bfff04 	movi	r2,-4
 c009720:	9dadc83a 	sub	r22,r19,r22
 c009724:	b1800117 	ldw	r6,4(r22)
 c009728:	3084703a 	and	r2,r6,r2
 c00972c:	20002026 	beq	r4,zero,c0097b0 <_realloc_r+0x2cc>
 c009730:	80af883a 	add	r23,r16,r2
 c009734:	b96f883a 	add	r23,r23,r5
 c009738:	21c05f26 	beq	r4,r7,c0098b8 <_realloc_r+0x3d4>
 c00973c:	b8c01c16 	blt	r23,r3,c0097b0 <_realloc_r+0x2cc>
 c009740:	20800317 	ldw	r2,12(r4)
 c009744:	20c00217 	ldw	r3,8(r4)
 c009748:	81bfff04 	addi	r6,r16,-4
 c00974c:	01000904 	movi	r4,36
 c009750:	18800315 	stw	r2,12(r3)
 c009754:	10c00215 	stw	r3,8(r2)
 c009758:	b0c00217 	ldw	r3,8(r22)
 c00975c:	b0800317 	ldw	r2,12(r22)
 c009760:	b4800204 	addi	r18,r22,8
 c009764:	18800315 	stw	r2,12(r3)
 c009768:	10c00215 	stw	r3,8(r2)
 c00976c:	21801b36 	bltu	r4,r6,c0097dc <_realloc_r+0x2f8>
 c009770:	008004c4 	movi	r2,19
 c009774:	1180352e 	bgeu	r2,r6,c00984c <_realloc_r+0x368>
 c009778:	a8800017 	ldw	r2,0(r21)
 c00977c:	b0800215 	stw	r2,8(r22)
 c009780:	a8800117 	ldw	r2,4(r21)
 c009784:	b0800315 	stw	r2,12(r22)
 c009788:	008006c4 	movi	r2,27
 c00978c:	11807f36 	bltu	r2,r6,c00998c <_realloc_r+0x4a8>
 c009790:	b0800404 	addi	r2,r22,16
 c009794:	ad400204 	addi	r21,r21,8
 c009798:	00002d06 	br	c009850 <_realloc_r+0x36c>
 c00979c:	adbffe17 	ldw	r22,-8(r21)
 c0097a0:	00bfff04 	movi	r2,-4
 c0097a4:	9dadc83a 	sub	r22,r19,r22
 c0097a8:	b1000117 	ldw	r4,4(r22)
 c0097ac:	2084703a 	and	r2,r4,r2
 c0097b0:	b03f7726 	beq	r22,zero,c009590 <__alt_data_end+0xfc009590>
 c0097b4:	80af883a 	add	r23,r16,r2
 c0097b8:	b8ff7516 	blt	r23,r3,c009590 <__alt_data_end+0xfc009590>
 c0097bc:	b0800317 	ldw	r2,12(r22)
 c0097c0:	b0c00217 	ldw	r3,8(r22)
 c0097c4:	81bfff04 	addi	r6,r16,-4
 c0097c8:	01000904 	movi	r4,36
 c0097cc:	18800315 	stw	r2,12(r3)
 c0097d0:	10c00215 	stw	r3,8(r2)
 c0097d4:	b4800204 	addi	r18,r22,8
 c0097d8:	21bfe52e 	bgeu	r4,r6,c009770 <__alt_data_end+0xfc009770>
 c0097dc:	a80b883a 	mov	r5,r21
 c0097e0:	9009883a 	mov	r4,r18
 c0097e4:	c0093280 	call	c009328 <memmove>
 c0097e8:	b821883a 	mov	r16,r23
 c0097ec:	b027883a 	mov	r19,r22
 c0097f0:	003f8a06 	br	c00961c <__alt_data_end+0xfc00961c>
 c0097f4:	300b883a 	mov	r5,r6
 c0097f8:	dfc00917 	ldw	ra,36(sp)
 c0097fc:	df000817 	ldw	fp,32(sp)
 c009800:	ddc00717 	ldw	r23,28(sp)
 c009804:	dd800617 	ldw	r22,24(sp)
 c009808:	dd400517 	ldw	r21,20(sp)
 c00980c:	dd000417 	ldw	r20,16(sp)
 c009810:	dcc00317 	ldw	r19,12(sp)
 c009814:	dc800217 	ldw	r18,8(sp)
 c009818:	dc400117 	ldw	r17,4(sp)
 c00981c:	dc000017 	ldw	r16,0(sp)
 c009820:	dec00a04 	addi	sp,sp,40
 c009824:	c00522c1 	jmpi	c00522c <_malloc_r>
 c009828:	a8c00017 	ldw	r3,0(r21)
 c00982c:	90c00015 	stw	r3,0(r18)
 c009830:	a8c00117 	ldw	r3,4(r21)
 c009834:	90c00115 	stw	r3,4(r18)
 c009838:	00c006c4 	movi	r3,27
 c00983c:	19804536 	bltu	r3,r6,c009954 <_realloc_r+0x470>
 c009840:	90800204 	addi	r2,r18,8
 c009844:	a8c00204 	addi	r3,r21,8
 c009848:	003f6306 	br	c0095d8 <__alt_data_end+0xfc0095d8>
 c00984c:	9005883a 	mov	r2,r18
 c009850:	a8c00017 	ldw	r3,0(r21)
 c009854:	b821883a 	mov	r16,r23
 c009858:	b027883a 	mov	r19,r22
 c00985c:	10c00015 	stw	r3,0(r2)
 c009860:	a8c00117 	ldw	r3,4(r21)
 c009864:	10c00115 	stw	r3,4(r2)
 c009868:	a8c00217 	ldw	r3,8(r21)
 c00986c:	10c00215 	stw	r3,8(r2)
 c009870:	003f6a06 	br	c00961c <__alt_data_end+0xfc00961c>
 c009874:	9c67883a 	add	r19,r19,r17
 c009878:	4445c83a 	sub	r2,r8,r17
 c00987c:	e4c00215 	stw	r19,8(fp)
 c009880:	10800054 	ori	r2,r2,1
 c009884:	98800115 	stw	r2,4(r19)
 c009888:	a8bfff17 	ldw	r2,-4(r21)
 c00988c:	a009883a 	mov	r4,r20
 c009890:	1080004c 	andi	r2,r2,1
 c009894:	1462b03a 	or	r17,r2,r17
 c009898:	ac7fff15 	stw	r17,-4(r21)
 c00989c:	c00d9600 	call	c00d960 <__malloc_unlock>
 c0098a0:	a805883a 	mov	r2,r21
 c0098a4:	003f6b06 	br	c009654 <__alt_data_end+0xfc009654>
 c0098a8:	a80b883a 	mov	r5,r21
 c0098ac:	9009883a 	mov	r4,r18
 c0098b0:	c0093280 	call	c009328 <memmove>
 c0098b4:	003f4e06 	br	c0095f0 <__alt_data_end+0xfc0095f0>
 c0098b8:	89000404 	addi	r4,r17,16
 c0098bc:	b93fbc16 	blt	r23,r4,c0097b0 <__alt_data_end+0xfc0097b0>
 c0098c0:	b0800317 	ldw	r2,12(r22)
 c0098c4:	b0c00217 	ldw	r3,8(r22)
 c0098c8:	81bfff04 	addi	r6,r16,-4
 c0098cc:	01000904 	movi	r4,36
 c0098d0:	18800315 	stw	r2,12(r3)
 c0098d4:	10c00215 	stw	r3,8(r2)
 c0098d8:	b4800204 	addi	r18,r22,8
 c0098dc:	21804336 	bltu	r4,r6,c0099ec <_realloc_r+0x508>
 c0098e0:	008004c4 	movi	r2,19
 c0098e4:	11803f2e 	bgeu	r2,r6,c0099e4 <_realloc_r+0x500>
 c0098e8:	a8800017 	ldw	r2,0(r21)
 c0098ec:	b0800215 	stw	r2,8(r22)
 c0098f0:	a8800117 	ldw	r2,4(r21)
 c0098f4:	b0800315 	stw	r2,12(r22)
 c0098f8:	008006c4 	movi	r2,27
 c0098fc:	11803f36 	bltu	r2,r6,c0099fc <_realloc_r+0x518>
 c009900:	b0800404 	addi	r2,r22,16
 c009904:	ad400204 	addi	r21,r21,8
 c009908:	a8c00017 	ldw	r3,0(r21)
 c00990c:	10c00015 	stw	r3,0(r2)
 c009910:	a8c00117 	ldw	r3,4(r21)
 c009914:	10c00115 	stw	r3,4(r2)
 c009918:	a8c00217 	ldw	r3,8(r21)
 c00991c:	10c00215 	stw	r3,8(r2)
 c009920:	b447883a 	add	r3,r22,r17
 c009924:	bc45c83a 	sub	r2,r23,r17
 c009928:	e0c00215 	stw	r3,8(fp)
 c00992c:	10800054 	ori	r2,r2,1
 c009930:	18800115 	stw	r2,4(r3)
 c009934:	b0800117 	ldw	r2,4(r22)
 c009938:	a009883a 	mov	r4,r20
 c00993c:	1080004c 	andi	r2,r2,1
 c009940:	1462b03a 	or	r17,r2,r17
 c009944:	b4400115 	stw	r17,4(r22)
 c009948:	c00d9600 	call	c00d960 <__malloc_unlock>
 c00994c:	9005883a 	mov	r2,r18
 c009950:	003f4006 	br	c009654 <__alt_data_end+0xfc009654>
 c009954:	a8c00217 	ldw	r3,8(r21)
 c009958:	90c00215 	stw	r3,8(r18)
 c00995c:	a8c00317 	ldw	r3,12(r21)
 c009960:	90c00315 	stw	r3,12(r18)
 c009964:	30801126 	beq	r6,r2,c0099ac <_realloc_r+0x4c8>
 c009968:	90800404 	addi	r2,r18,16
 c00996c:	a8c00404 	addi	r3,r21,16
 c009970:	003f1906 	br	c0095d8 <__alt_data_end+0xfc0095d8>
 c009974:	90ffff17 	ldw	r3,-4(r18)
 c009978:	00bfff04 	movi	r2,-4
 c00997c:	a825883a 	mov	r18,r21
 c009980:	1884703a 	and	r2,r3,r2
 c009984:	80a1883a 	add	r16,r16,r2
 c009988:	003f2406 	br	c00961c <__alt_data_end+0xfc00961c>
 c00998c:	a8800217 	ldw	r2,8(r21)
 c009990:	b0800415 	stw	r2,16(r22)
 c009994:	a8800317 	ldw	r2,12(r21)
 c009998:	b0800515 	stw	r2,20(r22)
 c00999c:	31000a26 	beq	r6,r4,c0099c8 <_realloc_r+0x4e4>
 c0099a0:	b0800604 	addi	r2,r22,24
 c0099a4:	ad400404 	addi	r21,r21,16
 c0099a8:	003fa906 	br	c009850 <__alt_data_end+0xfc009850>
 c0099ac:	a9000417 	ldw	r4,16(r21)
 c0099b0:	90800604 	addi	r2,r18,24
 c0099b4:	a8c00604 	addi	r3,r21,24
 c0099b8:	91000415 	stw	r4,16(r18)
 c0099bc:	a9000517 	ldw	r4,20(r21)
 c0099c0:	91000515 	stw	r4,20(r18)
 c0099c4:	003f0406 	br	c0095d8 <__alt_data_end+0xfc0095d8>
 c0099c8:	a8c00417 	ldw	r3,16(r21)
 c0099cc:	ad400604 	addi	r21,r21,24
 c0099d0:	b0800804 	addi	r2,r22,32
 c0099d4:	b0c00615 	stw	r3,24(r22)
 c0099d8:	a8ffff17 	ldw	r3,-4(r21)
 c0099dc:	b0c00715 	stw	r3,28(r22)
 c0099e0:	003f9b06 	br	c009850 <__alt_data_end+0xfc009850>
 c0099e4:	9005883a 	mov	r2,r18
 c0099e8:	003fc706 	br	c009908 <__alt_data_end+0xfc009908>
 c0099ec:	a80b883a 	mov	r5,r21
 c0099f0:	9009883a 	mov	r4,r18
 c0099f4:	c0093280 	call	c009328 <memmove>
 c0099f8:	003fc906 	br	c009920 <__alt_data_end+0xfc009920>
 c0099fc:	a8800217 	ldw	r2,8(r21)
 c009a00:	b0800415 	stw	r2,16(r22)
 c009a04:	a8800317 	ldw	r2,12(r21)
 c009a08:	b0800515 	stw	r2,20(r22)
 c009a0c:	31000726 	beq	r6,r4,c009a2c <_realloc_r+0x548>
 c009a10:	b0800604 	addi	r2,r22,24
 c009a14:	ad400404 	addi	r21,r21,16
 c009a18:	003fbb06 	br	c009908 <__alt_data_end+0xfc009908>
 c009a1c:	a009883a 	mov	r4,r20
 c009a20:	c00d9600 	call	c00d960 <__malloc_unlock>
 c009a24:	0005883a 	mov	r2,zero
 c009a28:	003f0a06 	br	c009654 <__alt_data_end+0xfc009654>
 c009a2c:	a8c00417 	ldw	r3,16(r21)
 c009a30:	ad400604 	addi	r21,r21,24
 c009a34:	b0800804 	addi	r2,r22,32
 c009a38:	b0c00615 	stw	r3,24(r22)
 c009a3c:	a8ffff17 	ldw	r3,-4(r21)
 c009a40:	b0c00715 	stw	r3,28(r22)
 c009a44:	003fb006 	br	c009908 <__alt_data_end+0xfc009908>

0c009a48 <__swbuf_r>:
 c009a48:	defffb04 	addi	sp,sp,-20
 c009a4c:	dcc00315 	stw	r19,12(sp)
 c009a50:	dc800215 	stw	r18,8(sp)
 c009a54:	dc000015 	stw	r16,0(sp)
 c009a58:	dfc00415 	stw	ra,16(sp)
 c009a5c:	dc400115 	stw	r17,4(sp)
 c009a60:	2025883a 	mov	r18,r4
 c009a64:	2827883a 	mov	r19,r5
 c009a68:	3021883a 	mov	r16,r6
 c009a6c:	20000226 	beq	r4,zero,c009a78 <__swbuf_r+0x30>
 c009a70:	20800e17 	ldw	r2,56(r4)
 c009a74:	10004226 	beq	r2,zero,c009b80 <__swbuf_r+0x138>
 c009a78:	80800617 	ldw	r2,24(r16)
 c009a7c:	8100030b 	ldhu	r4,12(r16)
 c009a80:	80800215 	stw	r2,8(r16)
 c009a84:	2080020c 	andi	r2,r4,8
 c009a88:	10003626 	beq	r2,zero,c009b64 <__swbuf_r+0x11c>
 c009a8c:	80c00417 	ldw	r3,16(r16)
 c009a90:	18003426 	beq	r3,zero,c009b64 <__swbuf_r+0x11c>
 c009a94:	2088000c 	andi	r2,r4,8192
 c009a98:	9c403fcc 	andi	r17,r19,255
 c009a9c:	10001a26 	beq	r2,zero,c009b08 <__swbuf_r+0xc0>
 c009aa0:	80800017 	ldw	r2,0(r16)
 c009aa4:	81000517 	ldw	r4,20(r16)
 c009aa8:	10c7c83a 	sub	r3,r2,r3
 c009aac:	1900200e 	bge	r3,r4,c009b30 <__swbuf_r+0xe8>
 c009ab0:	18c00044 	addi	r3,r3,1
 c009ab4:	81000217 	ldw	r4,8(r16)
 c009ab8:	11400044 	addi	r5,r2,1
 c009abc:	81400015 	stw	r5,0(r16)
 c009ac0:	213fffc4 	addi	r4,r4,-1
 c009ac4:	81000215 	stw	r4,8(r16)
 c009ac8:	14c00005 	stb	r19,0(r2)
 c009acc:	80800517 	ldw	r2,20(r16)
 c009ad0:	10c01e26 	beq	r2,r3,c009b4c <__swbuf_r+0x104>
 c009ad4:	8080030b 	ldhu	r2,12(r16)
 c009ad8:	1080004c 	andi	r2,r2,1
 c009adc:	10000226 	beq	r2,zero,c009ae8 <__swbuf_r+0xa0>
 c009ae0:	00800284 	movi	r2,10
 c009ae4:	88801926 	beq	r17,r2,c009b4c <__swbuf_r+0x104>
 c009ae8:	8805883a 	mov	r2,r17
 c009aec:	dfc00417 	ldw	ra,16(sp)
 c009af0:	dcc00317 	ldw	r19,12(sp)
 c009af4:	dc800217 	ldw	r18,8(sp)
 c009af8:	dc400117 	ldw	r17,4(sp)
 c009afc:	dc000017 	ldw	r16,0(sp)
 c009b00:	dec00504 	addi	sp,sp,20
 c009b04:	f800283a 	ret
 c009b08:	81401917 	ldw	r5,100(r16)
 c009b0c:	00b7ffc4 	movi	r2,-8193
 c009b10:	21080014 	ori	r4,r4,8192
 c009b14:	2884703a 	and	r2,r5,r2
 c009b18:	80801915 	stw	r2,100(r16)
 c009b1c:	80800017 	ldw	r2,0(r16)
 c009b20:	8100030d 	sth	r4,12(r16)
 c009b24:	81000517 	ldw	r4,20(r16)
 c009b28:	10c7c83a 	sub	r3,r2,r3
 c009b2c:	193fe016 	blt	r3,r4,c009ab0 <__alt_data_end+0xfc009ab0>
 c009b30:	800b883a 	mov	r5,r16
 c009b34:	9009883a 	mov	r4,r18
 c009b38:	c00459c0 	call	c00459c <_fflush_r>
 c009b3c:	1000071e 	bne	r2,zero,c009b5c <__swbuf_r+0x114>
 c009b40:	80800017 	ldw	r2,0(r16)
 c009b44:	00c00044 	movi	r3,1
 c009b48:	003fda06 	br	c009ab4 <__alt_data_end+0xfc009ab4>
 c009b4c:	800b883a 	mov	r5,r16
 c009b50:	9009883a 	mov	r4,r18
 c009b54:	c00459c0 	call	c00459c <_fflush_r>
 c009b58:	103fe326 	beq	r2,zero,c009ae8 <__alt_data_end+0xfc009ae8>
 c009b5c:	00bfffc4 	movi	r2,-1
 c009b60:	003fe206 	br	c009aec <__alt_data_end+0xfc009aec>
 c009b64:	800b883a 	mov	r5,r16
 c009b68:	9009883a 	mov	r4,r18
 c009b6c:	c00297c0 	call	c00297c <__swsetup_r>
 c009b70:	103ffa1e 	bne	r2,zero,c009b5c <__alt_data_end+0xfc009b5c>
 c009b74:	8100030b 	ldhu	r4,12(r16)
 c009b78:	80c00417 	ldw	r3,16(r16)
 c009b7c:	003fc506 	br	c009a94 <__alt_data_end+0xfc009a94>
 c009b80:	c0049880 	call	c004988 <__sinit>
 c009b84:	003fbc06 	br	c009a78 <__alt_data_end+0xfc009a78>

0c009b88 <__swbuf>:
 c009b88:	00830074 	movhi	r2,3073
 c009b8c:	10865604 	addi	r2,r2,6488
 c009b90:	280d883a 	mov	r6,r5
 c009b94:	200b883a 	mov	r5,r4
 c009b98:	11000017 	ldw	r4,0(r2)
 c009b9c:	c009a481 	jmpi	c009a48 <__swbuf_r>

0c009ba0 <_wcrtomb_r>:
 c009ba0:	defff604 	addi	sp,sp,-40
 c009ba4:	00830074 	movhi	r2,3073
 c009ba8:	dc800815 	stw	r18,32(sp)
 c009bac:	dc400715 	stw	r17,28(sp)
 c009bb0:	dc000615 	stw	r16,24(sp)
 c009bb4:	10865a04 	addi	r2,r2,6504
 c009bb8:	dfc00915 	stw	ra,36(sp)
 c009bbc:	2021883a 	mov	r16,r4
 c009bc0:	3823883a 	mov	r17,r7
 c009bc4:	14800017 	ldw	r18,0(r2)
 c009bc8:	28001426 	beq	r5,zero,c009c1c <_wcrtomb_r+0x7c>
 c009bcc:	d9400415 	stw	r5,16(sp)
 c009bd0:	d9800515 	stw	r6,20(sp)
 c009bd4:	c0050100 	call	c005010 <__locale_charset>
 c009bd8:	d9800517 	ldw	r6,20(sp)
 c009bdc:	d9400417 	ldw	r5,16(sp)
 c009be0:	100f883a 	mov	r7,r2
 c009be4:	dc400015 	stw	r17,0(sp)
 c009be8:	8009883a 	mov	r4,r16
 c009bec:	903ee83a 	callr	r18
 c009bf0:	00ffffc4 	movi	r3,-1
 c009bf4:	10c0031e 	bne	r2,r3,c009c04 <_wcrtomb_r+0x64>
 c009bf8:	88000015 	stw	zero,0(r17)
 c009bfc:	00c02284 	movi	r3,138
 c009c00:	80c00015 	stw	r3,0(r16)
 c009c04:	dfc00917 	ldw	ra,36(sp)
 c009c08:	dc800817 	ldw	r18,32(sp)
 c009c0c:	dc400717 	ldw	r17,28(sp)
 c009c10:	dc000617 	ldw	r16,24(sp)
 c009c14:	dec00a04 	addi	sp,sp,40
 c009c18:	f800283a 	ret
 c009c1c:	c0050100 	call	c005010 <__locale_charset>
 c009c20:	100f883a 	mov	r7,r2
 c009c24:	dc400015 	stw	r17,0(sp)
 c009c28:	000d883a 	mov	r6,zero
 c009c2c:	d9400104 	addi	r5,sp,4
 c009c30:	8009883a 	mov	r4,r16
 c009c34:	903ee83a 	callr	r18
 c009c38:	003fed06 	br	c009bf0 <__alt_data_end+0xfc009bf0>

0c009c3c <wcrtomb>:
 c009c3c:	defff604 	addi	sp,sp,-40
 c009c40:	00830074 	movhi	r2,3073
 c009c44:	dc800615 	stw	r18,24(sp)
 c009c48:	dc400515 	stw	r17,20(sp)
 c009c4c:	10865604 	addi	r2,r2,6488
 c009c50:	dfc00915 	stw	ra,36(sp)
 c009c54:	dd000815 	stw	r20,32(sp)
 c009c58:	dcc00715 	stw	r19,28(sp)
 c009c5c:	dc000415 	stw	r16,16(sp)
 c009c60:	3025883a 	mov	r18,r6
 c009c64:	14400017 	ldw	r17,0(r2)
 c009c68:	20001926 	beq	r4,zero,c009cd0 <wcrtomb+0x94>
 c009c6c:	00830074 	movhi	r2,3073
 c009c70:	10865a04 	addi	r2,r2,6504
 c009c74:	15000017 	ldw	r20,0(r2)
 c009c78:	2021883a 	mov	r16,r4
 c009c7c:	2827883a 	mov	r19,r5
 c009c80:	c0050100 	call	c005010 <__locale_charset>
 c009c84:	100f883a 	mov	r7,r2
 c009c88:	dc800015 	stw	r18,0(sp)
 c009c8c:	980d883a 	mov	r6,r19
 c009c90:	800b883a 	mov	r5,r16
 c009c94:	8809883a 	mov	r4,r17
 c009c98:	a03ee83a 	callr	r20
 c009c9c:	00ffffc4 	movi	r3,-1
 c009ca0:	10c0031e 	bne	r2,r3,c009cb0 <wcrtomb+0x74>
 c009ca4:	90000015 	stw	zero,0(r18)
 c009ca8:	00c02284 	movi	r3,138
 c009cac:	88c00015 	stw	r3,0(r17)
 c009cb0:	dfc00917 	ldw	ra,36(sp)
 c009cb4:	dd000817 	ldw	r20,32(sp)
 c009cb8:	dcc00717 	ldw	r19,28(sp)
 c009cbc:	dc800617 	ldw	r18,24(sp)
 c009cc0:	dc400517 	ldw	r17,20(sp)
 c009cc4:	dc000417 	ldw	r16,16(sp)
 c009cc8:	dec00a04 	addi	sp,sp,40
 c009ccc:	f800283a 	ret
 c009cd0:	00830074 	movhi	r2,3073
 c009cd4:	10865a04 	addi	r2,r2,6504
 c009cd8:	14000017 	ldw	r16,0(r2)
 c009cdc:	c0050100 	call	c005010 <__locale_charset>
 c009ce0:	100f883a 	mov	r7,r2
 c009ce4:	dc800015 	stw	r18,0(sp)
 c009ce8:	000d883a 	mov	r6,zero
 c009cec:	d9400104 	addi	r5,sp,4
 c009cf0:	8809883a 	mov	r4,r17
 c009cf4:	803ee83a 	callr	r16
 c009cf8:	003fe806 	br	c009c9c <__alt_data_end+0xfc009c9c>

0c009cfc <__ascii_wctomb>:
 c009cfc:	28000526 	beq	r5,zero,c009d14 <__ascii_wctomb+0x18>
 c009d00:	00803fc4 	movi	r2,255
 c009d04:	11800536 	bltu	r2,r6,c009d1c <__ascii_wctomb+0x20>
 c009d08:	29800005 	stb	r6,0(r5)
 c009d0c:	00800044 	movi	r2,1
 c009d10:	f800283a 	ret
 c009d14:	0005883a 	mov	r2,zero
 c009d18:	f800283a 	ret
 c009d1c:	00802284 	movi	r2,138
 c009d20:	20800015 	stw	r2,0(r4)
 c009d24:	00bfffc4 	movi	r2,-1
 c009d28:	f800283a 	ret

0c009d2c <_wctomb_r>:
 c009d2c:	00830074 	movhi	r2,3073
 c009d30:	defff904 	addi	sp,sp,-28
 c009d34:	10865a04 	addi	r2,r2,6504
 c009d38:	dfc00615 	stw	ra,24(sp)
 c009d3c:	dc400515 	stw	r17,20(sp)
 c009d40:	dc000415 	stw	r16,16(sp)
 c009d44:	3823883a 	mov	r17,r7
 c009d48:	14000017 	ldw	r16,0(r2)
 c009d4c:	d9000115 	stw	r4,4(sp)
 c009d50:	d9400215 	stw	r5,8(sp)
 c009d54:	d9800315 	stw	r6,12(sp)
 c009d58:	c0050100 	call	c005010 <__locale_charset>
 c009d5c:	d9800317 	ldw	r6,12(sp)
 c009d60:	d9400217 	ldw	r5,8(sp)
 c009d64:	d9000117 	ldw	r4,4(sp)
 c009d68:	100f883a 	mov	r7,r2
 c009d6c:	dc400015 	stw	r17,0(sp)
 c009d70:	803ee83a 	callr	r16
 c009d74:	dfc00617 	ldw	ra,24(sp)
 c009d78:	dc400517 	ldw	r17,20(sp)
 c009d7c:	dc000417 	ldw	r16,16(sp)
 c009d80:	dec00704 	addi	sp,sp,28
 c009d84:	f800283a 	ret

0c009d88 <__udivdi3>:
 c009d88:	defff404 	addi	sp,sp,-48
 c009d8c:	dcc00515 	stw	r19,20(sp)
 c009d90:	dc000215 	stw	r16,8(sp)
 c009d94:	dfc00b15 	stw	ra,44(sp)
 c009d98:	df000a15 	stw	fp,40(sp)
 c009d9c:	ddc00915 	stw	r23,36(sp)
 c009da0:	dd800815 	stw	r22,32(sp)
 c009da4:	dd400715 	stw	r21,28(sp)
 c009da8:	dd000615 	stw	r20,24(sp)
 c009dac:	dc800415 	stw	r18,16(sp)
 c009db0:	dc400315 	stw	r17,12(sp)
 c009db4:	2027883a 	mov	r19,r4
 c009db8:	2821883a 	mov	r16,r5
 c009dbc:	3800461e 	bne	r7,zero,c009ed8 <__udivdi3+0x150>
 c009dc0:	3023883a 	mov	r17,r6
 c009dc4:	2025883a 	mov	r18,r4
 c009dc8:	2980572e 	bgeu	r5,r6,c009f28 <__udivdi3+0x1a0>
 c009dcc:	00bfffd4 	movui	r2,65535
 c009dd0:	282d883a 	mov	r22,r5
 c009dd4:	1180b236 	bltu	r2,r6,c00a0a0 <__udivdi3+0x318>
 c009dd8:	00803fc4 	movi	r2,255
 c009ddc:	1185803a 	cmpltu	r2,r2,r6
 c009de0:	100490fa 	slli	r2,r2,3
 c009de4:	3086d83a 	srl	r3,r6,r2
 c009de8:	01030074 	movhi	r4,3073
 c009dec:	213f5b04 	addi	r4,r4,-660
 c009df0:	20c7883a 	add	r3,r4,r3
 c009df4:	18c00003 	ldbu	r3,0(r3)
 c009df8:	1885883a 	add	r2,r3,r2
 c009dfc:	00c00804 	movi	r3,32
 c009e00:	1887c83a 	sub	r3,r3,r2
 c009e04:	18000526 	beq	r3,zero,c009e1c <__udivdi3+0x94>
 c009e08:	80e0983a 	sll	r16,r16,r3
 c009e0c:	9884d83a 	srl	r2,r19,r2
 c009e10:	30e2983a 	sll	r17,r6,r3
 c009e14:	98e4983a 	sll	r18,r19,r3
 c009e18:	142cb03a 	or	r22,r2,r16
 c009e1c:	882ad43a 	srli	r21,r17,16
 c009e20:	b009883a 	mov	r4,r22
 c009e24:	8d3fffcc 	andi	r20,r17,65535
 c009e28:	a80b883a 	mov	r5,r21
 c009e2c:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c009e30:	b009883a 	mov	r4,r22
 c009e34:	a80b883a 	mov	r5,r21
 c009e38:	1027883a 	mov	r19,r2
 c009e3c:	c00aa400 	call	c00aa40 <__udivsi3>
 c009e40:	100b883a 	mov	r5,r2
 c009e44:	a009883a 	mov	r4,r20
 c009e48:	102d883a 	mov	r22,r2
 c009e4c:	c0005340 	call	c000534 <__mulsi3>
 c009e50:	9826943a 	slli	r19,r19,16
 c009e54:	9006d43a 	srli	r3,r18,16
 c009e58:	1cc6b03a 	or	r3,r3,r19
 c009e5c:	1880052e 	bgeu	r3,r2,c009e74 <__udivdi3+0xec>
 c009e60:	1c47883a 	add	r3,r3,r17
 c009e64:	b13fffc4 	addi	r4,r22,-1
 c009e68:	1c400136 	bltu	r3,r17,c009e70 <__udivdi3+0xe8>
 c009e6c:	18814236 	bltu	r3,r2,c00a378 <__udivdi3+0x5f0>
 c009e70:	202d883a 	mov	r22,r4
 c009e74:	18a1c83a 	sub	r16,r3,r2
 c009e78:	8009883a 	mov	r4,r16
 c009e7c:	a80b883a 	mov	r5,r21
 c009e80:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c009e84:	1027883a 	mov	r19,r2
 c009e88:	8009883a 	mov	r4,r16
 c009e8c:	a80b883a 	mov	r5,r21
 c009e90:	9826943a 	slli	r19,r19,16
 c009e94:	c00aa400 	call	c00aa40 <__udivsi3>
 c009e98:	100b883a 	mov	r5,r2
 c009e9c:	a009883a 	mov	r4,r20
 c009ea0:	94bfffcc 	andi	r18,r18,65535
 c009ea4:	1021883a 	mov	r16,r2
 c009ea8:	94e4b03a 	or	r18,r18,r19
 c009eac:	c0005340 	call	c000534 <__mulsi3>
 c009eb0:	9080052e 	bgeu	r18,r2,c009ec8 <__udivdi3+0x140>
 c009eb4:	8ca5883a 	add	r18,r17,r18
 c009eb8:	80ffffc4 	addi	r3,r16,-1
 c009ebc:	94410c36 	bltu	r18,r17,c00a2f0 <__udivdi3+0x568>
 c009ec0:	90810b2e 	bgeu	r18,r2,c00a2f0 <__udivdi3+0x568>
 c009ec4:	843fff84 	addi	r16,r16,-2
 c009ec8:	b004943a 	slli	r2,r22,16
 c009ecc:	0007883a 	mov	r3,zero
 c009ed0:	1404b03a 	or	r2,r2,r16
 c009ed4:	00005e06 	br	c00a050 <__udivdi3+0x2c8>
 c009ed8:	29c05b36 	bltu	r5,r7,c00a048 <__udivdi3+0x2c0>
 c009edc:	00bfffd4 	movui	r2,65535
 c009ee0:	11c0672e 	bgeu	r2,r7,c00a080 <__udivdi3+0x2f8>
 c009ee4:	00804034 	movhi	r2,256
 c009ee8:	10bfffc4 	addi	r2,r2,-1
 c009eec:	11c10a36 	bltu	r2,r7,c00a318 <__udivdi3+0x590>
 c009ef0:	00800404 	movi	r2,16
 c009ef4:	3886d83a 	srl	r3,r7,r2
 c009ef8:	01030074 	movhi	r4,3073
 c009efc:	213f5b04 	addi	r4,r4,-660
 c009f00:	20c7883a 	add	r3,r4,r3
 c009f04:	18c00003 	ldbu	r3,0(r3)
 c009f08:	05c00804 	movi	r23,32
 c009f0c:	1885883a 	add	r2,r3,r2
 c009f10:	b8afc83a 	sub	r23,r23,r2
 c009f14:	b800671e 	bne	r23,zero,c00a0b4 <__udivdi3+0x32c>
 c009f18:	3c010536 	bltu	r7,r16,c00a330 <__udivdi3+0x5a8>
 c009f1c:	9985403a 	cmpgeu	r2,r19,r6
 c009f20:	0007883a 	mov	r3,zero
 c009f24:	00004a06 	br	c00a050 <__udivdi3+0x2c8>
 c009f28:	3000041e 	bne	r6,zero,c009f3c <__udivdi3+0x1b4>
 c009f2c:	000b883a 	mov	r5,zero
 c009f30:	01000044 	movi	r4,1
 c009f34:	c00aa400 	call	c00aa40 <__udivsi3>
 c009f38:	1023883a 	mov	r17,r2
 c009f3c:	00bfffd4 	movui	r2,65535
 c009f40:	1440532e 	bgeu	r2,r17,c00a090 <__udivdi3+0x308>
 c009f44:	00804034 	movhi	r2,256
 c009f48:	10bfffc4 	addi	r2,r2,-1
 c009f4c:	1440f436 	bltu	r2,r17,c00a320 <__udivdi3+0x598>
 c009f50:	00800404 	movi	r2,16
 c009f54:	8886d83a 	srl	r3,r17,r2
 c009f58:	01030074 	movhi	r4,3073
 c009f5c:	213f5b04 	addi	r4,r4,-660
 c009f60:	20c7883a 	add	r3,r4,r3
 c009f64:	18c00003 	ldbu	r3,0(r3)
 c009f68:	1885883a 	add	r2,r3,r2
 c009f6c:	00c00804 	movi	r3,32
 c009f70:	1887c83a 	sub	r3,r3,r2
 c009f74:	1800a51e 	bne	r3,zero,c00a20c <__udivdi3+0x484>
 c009f78:	882ad43a 	srli	r21,r17,16
 c009f7c:	8461c83a 	sub	r16,r16,r17
 c009f80:	8d3fffcc 	andi	r20,r17,65535
 c009f84:	00c00044 	movi	r3,1
 c009f88:	a80b883a 	mov	r5,r21
 c009f8c:	8009883a 	mov	r4,r16
 c009f90:	d8c00115 	stw	r3,4(sp)
 c009f94:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c009f98:	a80b883a 	mov	r5,r21
 c009f9c:	8009883a 	mov	r4,r16
 c009fa0:	1027883a 	mov	r19,r2
 c009fa4:	c00aa400 	call	c00aa40 <__udivsi3>
 c009fa8:	a00b883a 	mov	r5,r20
 c009fac:	1009883a 	mov	r4,r2
 c009fb0:	102d883a 	mov	r22,r2
 c009fb4:	c0005340 	call	c000534 <__mulsi3>
 c009fb8:	9826943a 	slli	r19,r19,16
 c009fbc:	900ed43a 	srli	r7,r18,16
 c009fc0:	d8c00117 	ldw	r3,4(sp)
 c009fc4:	3cceb03a 	or	r7,r7,r19
 c009fc8:	3880052e 	bgeu	r7,r2,c009fe0 <__udivdi3+0x258>
 c009fcc:	3c4f883a 	add	r7,r7,r17
 c009fd0:	b13fffc4 	addi	r4,r22,-1
 c009fd4:	3c400136 	bltu	r7,r17,c009fdc <__udivdi3+0x254>
 c009fd8:	3880e436 	bltu	r7,r2,c00a36c <__udivdi3+0x5e4>
 c009fdc:	202d883a 	mov	r22,r4
 c009fe0:	38a1c83a 	sub	r16,r7,r2
 c009fe4:	8009883a 	mov	r4,r16
 c009fe8:	a80b883a 	mov	r5,r21
 c009fec:	d8c00115 	stw	r3,4(sp)
 c009ff0:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c009ff4:	1027883a 	mov	r19,r2
 c009ff8:	8009883a 	mov	r4,r16
 c009ffc:	a80b883a 	mov	r5,r21
 c00a000:	9826943a 	slli	r19,r19,16
 c00a004:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a008:	a00b883a 	mov	r5,r20
 c00a00c:	1009883a 	mov	r4,r2
 c00a010:	94bfffcc 	andi	r18,r18,65535
 c00a014:	1021883a 	mov	r16,r2
 c00a018:	94e4b03a 	or	r18,r18,r19
 c00a01c:	c0005340 	call	c000534 <__mulsi3>
 c00a020:	d8c00117 	ldw	r3,4(sp)
 c00a024:	9080052e 	bgeu	r18,r2,c00a03c <__udivdi3+0x2b4>
 c00a028:	8ca5883a 	add	r18,r17,r18
 c00a02c:	813fffc4 	addi	r4,r16,-1
 c00a030:	9440ad36 	bltu	r18,r17,c00a2e8 <__udivdi3+0x560>
 c00a034:	9080ac2e 	bgeu	r18,r2,c00a2e8 <__udivdi3+0x560>
 c00a038:	843fff84 	addi	r16,r16,-2
 c00a03c:	b004943a 	slli	r2,r22,16
 c00a040:	1404b03a 	or	r2,r2,r16
 c00a044:	00000206 	br	c00a050 <__udivdi3+0x2c8>
 c00a048:	0007883a 	mov	r3,zero
 c00a04c:	0005883a 	mov	r2,zero
 c00a050:	dfc00b17 	ldw	ra,44(sp)
 c00a054:	df000a17 	ldw	fp,40(sp)
 c00a058:	ddc00917 	ldw	r23,36(sp)
 c00a05c:	dd800817 	ldw	r22,32(sp)
 c00a060:	dd400717 	ldw	r21,28(sp)
 c00a064:	dd000617 	ldw	r20,24(sp)
 c00a068:	dcc00517 	ldw	r19,20(sp)
 c00a06c:	dc800417 	ldw	r18,16(sp)
 c00a070:	dc400317 	ldw	r17,12(sp)
 c00a074:	dc000217 	ldw	r16,8(sp)
 c00a078:	dec00c04 	addi	sp,sp,48
 c00a07c:	f800283a 	ret
 c00a080:	00803fc4 	movi	r2,255
 c00a084:	11c5803a 	cmpltu	r2,r2,r7
 c00a088:	100490fa 	slli	r2,r2,3
 c00a08c:	003f9906 	br	c009ef4 <__alt_data_end+0xfc009ef4>
 c00a090:	00803fc4 	movi	r2,255
 c00a094:	1445803a 	cmpltu	r2,r2,r17
 c00a098:	100490fa 	slli	r2,r2,3
 c00a09c:	003fad06 	br	c009f54 <__alt_data_end+0xfc009f54>
 c00a0a0:	00804034 	movhi	r2,256
 c00a0a4:	10bfffc4 	addi	r2,r2,-1
 c00a0a8:	11809f36 	bltu	r2,r6,c00a328 <__udivdi3+0x5a0>
 c00a0ac:	00800404 	movi	r2,16
 c00a0b0:	003f4c06 	br	c009de4 <__alt_data_end+0xfc009de4>
 c00a0b4:	3dce983a 	sll	r7,r7,r23
 c00a0b8:	30b8d83a 	srl	fp,r6,r2
 c00a0bc:	80a2d83a 	srl	r17,r16,r2
 c00a0c0:	35cc983a 	sll	r6,r6,r23
 c00a0c4:	3f38b03a 	or	fp,r7,fp
 c00a0c8:	e024d43a 	srli	r18,fp,16
 c00a0cc:	9884d83a 	srl	r2,r19,r2
 c00a0d0:	85e0983a 	sll	r16,r16,r23
 c00a0d4:	8809883a 	mov	r4,r17
 c00a0d8:	900b883a 	mov	r5,r18
 c00a0dc:	d9800015 	stw	r6,0(sp)
 c00a0e0:	1420b03a 	or	r16,r2,r16
 c00a0e4:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a0e8:	900b883a 	mov	r5,r18
 c00a0ec:	8809883a 	mov	r4,r17
 c00a0f0:	1029883a 	mov	r20,r2
 c00a0f4:	e5bfffcc 	andi	r22,fp,65535
 c00a0f8:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a0fc:	100b883a 	mov	r5,r2
 c00a100:	b009883a 	mov	r4,r22
 c00a104:	102b883a 	mov	r21,r2
 c00a108:	c0005340 	call	c000534 <__mulsi3>
 c00a10c:	a028943a 	slli	r20,r20,16
 c00a110:	8006d43a 	srli	r3,r16,16
 c00a114:	1d06b03a 	or	r3,r3,r20
 c00a118:	1880042e 	bgeu	r3,r2,c00a12c <__udivdi3+0x3a4>
 c00a11c:	1f07883a 	add	r3,r3,fp
 c00a120:	a93fffc4 	addi	r4,r21,-1
 c00a124:	1f00892e 	bgeu	r3,fp,c00a34c <__udivdi3+0x5c4>
 c00a128:	202b883a 	mov	r21,r4
 c00a12c:	18a3c83a 	sub	r17,r3,r2
 c00a130:	8809883a 	mov	r4,r17
 c00a134:	900b883a 	mov	r5,r18
 c00a138:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a13c:	1029883a 	mov	r20,r2
 c00a140:	8809883a 	mov	r4,r17
 c00a144:	900b883a 	mov	r5,r18
 c00a148:	a028943a 	slli	r20,r20,16
 c00a14c:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a150:	100b883a 	mov	r5,r2
 c00a154:	b009883a 	mov	r4,r22
 c00a158:	843fffcc 	andi	r16,r16,65535
 c00a15c:	1023883a 	mov	r17,r2
 c00a160:	8520b03a 	or	r16,r16,r20
 c00a164:	c0005340 	call	c000534 <__mulsi3>
 c00a168:	8080042e 	bgeu	r16,r2,c00a17c <__udivdi3+0x3f4>
 c00a16c:	8721883a 	add	r16,r16,fp
 c00a170:	88ffffc4 	addi	r3,r17,-1
 c00a174:	8700712e 	bgeu	r16,fp,c00a33c <__udivdi3+0x5b4>
 c00a178:	1823883a 	mov	r17,r3
 c00a17c:	a80e943a 	slli	r7,r21,16
 c00a180:	d8c00017 	ldw	r3,0(sp)
 c00a184:	80a1c83a 	sub	r16,r16,r2
 c00a188:	3c64b03a 	or	r18,r7,r17
 c00a18c:	1d3fffcc 	andi	r20,r3,65535
 c00a190:	9022d43a 	srli	r17,r18,16
 c00a194:	95bfffcc 	andi	r22,r18,65535
 c00a198:	a00b883a 	mov	r5,r20
 c00a19c:	b009883a 	mov	r4,r22
 c00a1a0:	182ad43a 	srli	r21,r3,16
 c00a1a4:	c0005340 	call	c000534 <__mulsi3>
 c00a1a8:	a00b883a 	mov	r5,r20
 c00a1ac:	8809883a 	mov	r4,r17
 c00a1b0:	1039883a 	mov	fp,r2
 c00a1b4:	c0005340 	call	c000534 <__mulsi3>
 c00a1b8:	8809883a 	mov	r4,r17
 c00a1bc:	a80b883a 	mov	r5,r21
 c00a1c0:	1029883a 	mov	r20,r2
 c00a1c4:	c0005340 	call	c000534 <__mulsi3>
 c00a1c8:	a80b883a 	mov	r5,r21
 c00a1cc:	b009883a 	mov	r4,r22
 c00a1d0:	1023883a 	mov	r17,r2
 c00a1d4:	c0005340 	call	c000534 <__mulsi3>
 c00a1d8:	e006d43a 	srli	r3,fp,16
 c00a1dc:	1505883a 	add	r2,r2,r20
 c00a1e0:	1887883a 	add	r3,r3,r2
 c00a1e4:	1d00022e 	bgeu	r3,r20,c00a1f0 <__udivdi3+0x468>
 c00a1e8:	00800074 	movhi	r2,1
 c00a1ec:	88a3883a 	add	r17,r17,r2
 c00a1f0:	1804d43a 	srli	r2,r3,16
 c00a1f4:	1463883a 	add	r17,r2,r17
 c00a1f8:	84404436 	bltu	r16,r17,c00a30c <__udivdi3+0x584>
 c00a1fc:	84403e26 	beq	r16,r17,c00a2f8 <__udivdi3+0x570>
 c00a200:	9005883a 	mov	r2,r18
 c00a204:	0007883a 	mov	r3,zero
 c00a208:	003f9106 	br	c00a050 <__alt_data_end+0xfc00a050>
 c00a20c:	88e2983a 	sll	r17,r17,r3
 c00a210:	80aed83a 	srl	r23,r16,r2
 c00a214:	80e0983a 	sll	r16,r16,r3
 c00a218:	882ad43a 	srli	r21,r17,16
 c00a21c:	9884d83a 	srl	r2,r19,r2
 c00a220:	b809883a 	mov	r4,r23
 c00a224:	a80b883a 	mov	r5,r21
 c00a228:	98e4983a 	sll	r18,r19,r3
 c00a22c:	142cb03a 	or	r22,r2,r16
 c00a230:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a234:	b809883a 	mov	r4,r23
 c00a238:	a80b883a 	mov	r5,r21
 c00a23c:	1027883a 	mov	r19,r2
 c00a240:	8d3fffcc 	andi	r20,r17,65535
 c00a244:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a248:	a009883a 	mov	r4,r20
 c00a24c:	100b883a 	mov	r5,r2
 c00a250:	102f883a 	mov	r23,r2
 c00a254:	c0005340 	call	c000534 <__mulsi3>
 c00a258:	9826943a 	slli	r19,r19,16
 c00a25c:	b008d43a 	srli	r4,r22,16
 c00a260:	24c8b03a 	or	r4,r4,r19
 c00a264:	2080062e 	bgeu	r4,r2,c00a280 <__udivdi3+0x4f8>
 c00a268:	2449883a 	add	r4,r4,r17
 c00a26c:	b8ffffc4 	addi	r3,r23,-1
 c00a270:	24403c36 	bltu	r4,r17,c00a364 <__udivdi3+0x5dc>
 c00a274:	20803b2e 	bgeu	r4,r2,c00a364 <__udivdi3+0x5dc>
 c00a278:	bdffff84 	addi	r23,r23,-2
 c00a27c:	2449883a 	add	r4,r4,r17
 c00a280:	20a1c83a 	sub	r16,r4,r2
 c00a284:	a80b883a 	mov	r5,r21
 c00a288:	8009883a 	mov	r4,r16
 c00a28c:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a290:	a80b883a 	mov	r5,r21
 c00a294:	8009883a 	mov	r4,r16
 c00a298:	1027883a 	mov	r19,r2
 c00a29c:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a2a0:	a009883a 	mov	r4,r20
 c00a2a4:	100b883a 	mov	r5,r2
 c00a2a8:	9826943a 	slli	r19,r19,16
 c00a2ac:	1039883a 	mov	fp,r2
 c00a2b0:	c0005340 	call	c000534 <__mulsi3>
 c00a2b4:	b13fffcc 	andi	r4,r22,65535
 c00a2b8:	24c8b03a 	or	r4,r4,r19
 c00a2bc:	2080062e 	bgeu	r4,r2,c00a2d8 <__udivdi3+0x550>
 c00a2c0:	2449883a 	add	r4,r4,r17
 c00a2c4:	e0ffffc4 	addi	r3,fp,-1
 c00a2c8:	24402436 	bltu	r4,r17,c00a35c <__udivdi3+0x5d4>
 c00a2cc:	2080232e 	bgeu	r4,r2,c00a35c <__udivdi3+0x5d4>
 c00a2d0:	e73fff84 	addi	fp,fp,-2
 c00a2d4:	2449883a 	add	r4,r4,r17
 c00a2d8:	b82e943a 	slli	r23,r23,16
 c00a2dc:	20a1c83a 	sub	r16,r4,r2
 c00a2e0:	bf06b03a 	or	r3,r23,fp
 c00a2e4:	003f2806 	br	c009f88 <__alt_data_end+0xfc009f88>
 c00a2e8:	2021883a 	mov	r16,r4
 c00a2ec:	003f5306 	br	c00a03c <__alt_data_end+0xfc00a03c>
 c00a2f0:	1821883a 	mov	r16,r3
 c00a2f4:	003ef406 	br	c009ec8 <__alt_data_end+0xfc009ec8>
 c00a2f8:	1806943a 	slli	r3,r3,16
 c00a2fc:	9de6983a 	sll	r19,r19,r23
 c00a300:	e73fffcc 	andi	fp,fp,65535
 c00a304:	1f07883a 	add	r3,r3,fp
 c00a308:	98ffbd2e 	bgeu	r19,r3,c00a200 <__alt_data_end+0xfc00a200>
 c00a30c:	90bfffc4 	addi	r2,r18,-1
 c00a310:	0007883a 	mov	r3,zero
 c00a314:	003f4e06 	br	c00a050 <__alt_data_end+0xfc00a050>
 c00a318:	00800604 	movi	r2,24
 c00a31c:	003ef506 	br	c009ef4 <__alt_data_end+0xfc009ef4>
 c00a320:	00800604 	movi	r2,24
 c00a324:	003f0b06 	br	c009f54 <__alt_data_end+0xfc009f54>
 c00a328:	00800604 	movi	r2,24
 c00a32c:	003ead06 	br	c009de4 <__alt_data_end+0xfc009de4>
 c00a330:	0007883a 	mov	r3,zero
 c00a334:	00800044 	movi	r2,1
 c00a338:	003f4506 	br	c00a050 <__alt_data_end+0xfc00a050>
 c00a33c:	80bf8e2e 	bgeu	r16,r2,c00a178 <__alt_data_end+0xfc00a178>
 c00a340:	8c7fff84 	addi	r17,r17,-2
 c00a344:	8721883a 	add	r16,r16,fp
 c00a348:	003f8c06 	br	c00a17c <__alt_data_end+0xfc00a17c>
 c00a34c:	18bf762e 	bgeu	r3,r2,c00a128 <__alt_data_end+0xfc00a128>
 c00a350:	ad7fff84 	addi	r21,r21,-2
 c00a354:	1f07883a 	add	r3,r3,fp
 c00a358:	003f7406 	br	c00a12c <__alt_data_end+0xfc00a12c>
 c00a35c:	1839883a 	mov	fp,r3
 c00a360:	003fdd06 	br	c00a2d8 <__alt_data_end+0xfc00a2d8>
 c00a364:	182f883a 	mov	r23,r3
 c00a368:	003fc506 	br	c00a280 <__alt_data_end+0xfc00a280>
 c00a36c:	b5bfff84 	addi	r22,r22,-2
 c00a370:	3c4f883a 	add	r7,r7,r17
 c00a374:	003f1a06 	br	c009fe0 <__alt_data_end+0xfc009fe0>
 c00a378:	b5bfff84 	addi	r22,r22,-2
 c00a37c:	1c47883a 	add	r3,r3,r17
 c00a380:	003ebc06 	br	c009e74 <__alt_data_end+0xfc009e74>

0c00a384 <__umoddi3>:
 c00a384:	defff304 	addi	sp,sp,-52
 c00a388:	df000b15 	stw	fp,44(sp)
 c00a38c:	dc400415 	stw	r17,16(sp)
 c00a390:	dc000315 	stw	r16,12(sp)
 c00a394:	dfc00c15 	stw	ra,48(sp)
 c00a398:	ddc00a15 	stw	r23,40(sp)
 c00a39c:	dd800915 	stw	r22,36(sp)
 c00a3a0:	dd400815 	stw	r21,32(sp)
 c00a3a4:	dd000715 	stw	r20,28(sp)
 c00a3a8:	dcc00615 	stw	r19,24(sp)
 c00a3ac:	dc800515 	stw	r18,20(sp)
 c00a3b0:	2021883a 	mov	r16,r4
 c00a3b4:	2823883a 	mov	r17,r5
 c00a3b8:	2839883a 	mov	fp,r5
 c00a3bc:	3800401e 	bne	r7,zero,c00a4c0 <__umoddi3+0x13c>
 c00a3c0:	3027883a 	mov	r19,r6
 c00a3c4:	2029883a 	mov	r20,r4
 c00a3c8:	2980552e 	bgeu	r5,r6,c00a520 <__umoddi3+0x19c>
 c00a3cc:	00bfffd4 	movui	r2,65535
 c00a3d0:	1180a236 	bltu	r2,r6,c00a65c <__umoddi3+0x2d8>
 c00a3d4:	01003fc4 	movi	r4,255
 c00a3d8:	2189803a 	cmpltu	r4,r4,r6
 c00a3dc:	200890fa 	slli	r4,r4,3
 c00a3e0:	3104d83a 	srl	r2,r6,r4
 c00a3e4:	00c30074 	movhi	r3,3073
 c00a3e8:	18ff5b04 	addi	r3,r3,-660
 c00a3ec:	1885883a 	add	r2,r3,r2
 c00a3f0:	10c00003 	ldbu	r3,0(r2)
 c00a3f4:	00800804 	movi	r2,32
 c00a3f8:	1909883a 	add	r4,r3,r4
 c00a3fc:	1125c83a 	sub	r18,r2,r4
 c00a400:	90000526 	beq	r18,zero,c00a418 <__umoddi3+0x94>
 c00a404:	8ca2983a 	sll	r17,r17,r18
 c00a408:	8108d83a 	srl	r4,r16,r4
 c00a40c:	34a6983a 	sll	r19,r6,r18
 c00a410:	84a8983a 	sll	r20,r16,r18
 c00a414:	2478b03a 	or	fp,r4,r17
 c00a418:	982cd43a 	srli	r22,r19,16
 c00a41c:	e009883a 	mov	r4,fp
 c00a420:	9dffffcc 	andi	r23,r19,65535
 c00a424:	b00b883a 	mov	r5,r22
 c00a428:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a42c:	b00b883a 	mov	r5,r22
 c00a430:	e009883a 	mov	r4,fp
 c00a434:	102b883a 	mov	r21,r2
 c00a438:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a43c:	100b883a 	mov	r5,r2
 c00a440:	b809883a 	mov	r4,r23
 c00a444:	c0005340 	call	c000534 <__mulsi3>
 c00a448:	a82a943a 	slli	r21,r21,16
 c00a44c:	a006d43a 	srli	r3,r20,16
 c00a450:	1d46b03a 	or	r3,r3,r21
 c00a454:	1880032e 	bgeu	r3,r2,c00a464 <__umoddi3+0xe0>
 c00a458:	1cc7883a 	add	r3,r3,r19
 c00a45c:	1cc00136 	bltu	r3,r19,c00a464 <__umoddi3+0xe0>
 c00a460:	18813136 	bltu	r3,r2,c00a928 <__umoddi3+0x5a4>
 c00a464:	18a1c83a 	sub	r16,r3,r2
 c00a468:	b00b883a 	mov	r5,r22
 c00a46c:	8009883a 	mov	r4,r16
 c00a470:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a474:	b00b883a 	mov	r5,r22
 c00a478:	8009883a 	mov	r4,r16
 c00a47c:	1023883a 	mov	r17,r2
 c00a480:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a484:	100b883a 	mov	r5,r2
 c00a488:	b809883a 	mov	r4,r23
 c00a48c:	8822943a 	slli	r17,r17,16
 c00a490:	c0005340 	call	c000534 <__mulsi3>
 c00a494:	a0ffffcc 	andi	r3,r20,65535
 c00a498:	1c46b03a 	or	r3,r3,r17
 c00a49c:	1880042e 	bgeu	r3,r2,c00a4b0 <__umoddi3+0x12c>
 c00a4a0:	1cc7883a 	add	r3,r3,r19
 c00a4a4:	1cc00236 	bltu	r3,r19,c00a4b0 <__umoddi3+0x12c>
 c00a4a8:	1880012e 	bgeu	r3,r2,c00a4b0 <__umoddi3+0x12c>
 c00a4ac:	1cc7883a 	add	r3,r3,r19
 c00a4b0:	1885c83a 	sub	r2,r3,r2
 c00a4b4:	1484d83a 	srl	r2,r2,r18
 c00a4b8:	0007883a 	mov	r3,zero
 c00a4bc:	00005306 	br	c00a60c <__umoddi3+0x288>
 c00a4c0:	29c05036 	bltu	r5,r7,c00a604 <__umoddi3+0x280>
 c00a4c4:	00bfffd4 	movui	r2,65535
 c00a4c8:	11c05c2e 	bgeu	r2,r7,c00a63c <__umoddi3+0x2b8>
 c00a4cc:	00804034 	movhi	r2,256
 c00a4d0:	10bfffc4 	addi	r2,r2,-1
 c00a4d4:	11c10636 	bltu	r2,r7,c00a8f0 <__umoddi3+0x56c>
 c00a4d8:	01000404 	movi	r4,16
 c00a4dc:	3904d83a 	srl	r2,r7,r4
 c00a4e0:	00c30074 	movhi	r3,3073
 c00a4e4:	18ff5b04 	addi	r3,r3,-660
 c00a4e8:	1885883a 	add	r2,r3,r2
 c00a4ec:	14c00003 	ldbu	r19,0(r2)
 c00a4f0:	00c00804 	movi	r3,32
 c00a4f4:	9927883a 	add	r19,r19,r4
 c00a4f8:	1ce9c83a 	sub	r20,r3,r19
 c00a4fc:	a0005c1e 	bne	r20,zero,c00a670 <__umoddi3+0x2ec>
 c00a500:	3c400136 	bltu	r7,r17,c00a508 <__umoddi3+0x184>
 c00a504:	81810a36 	bltu	r16,r6,c00a930 <__umoddi3+0x5ac>
 c00a508:	8185c83a 	sub	r2,r16,r6
 c00a50c:	89e3c83a 	sub	r17,r17,r7
 c00a510:	8089803a 	cmpltu	r4,r16,r2
 c00a514:	8939c83a 	sub	fp,r17,r4
 c00a518:	e007883a 	mov	r3,fp
 c00a51c:	00003b06 	br	c00a60c <__umoddi3+0x288>
 c00a520:	3000041e 	bne	r6,zero,c00a534 <__umoddi3+0x1b0>
 c00a524:	000b883a 	mov	r5,zero
 c00a528:	01000044 	movi	r4,1
 c00a52c:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a530:	1027883a 	mov	r19,r2
 c00a534:	00bfffd4 	movui	r2,65535
 c00a538:	14c0442e 	bgeu	r2,r19,c00a64c <__umoddi3+0x2c8>
 c00a53c:	00804034 	movhi	r2,256
 c00a540:	10bfffc4 	addi	r2,r2,-1
 c00a544:	14c0ec36 	bltu	r2,r19,c00a8f8 <__umoddi3+0x574>
 c00a548:	00800404 	movi	r2,16
 c00a54c:	9886d83a 	srl	r3,r19,r2
 c00a550:	01030074 	movhi	r4,3073
 c00a554:	213f5b04 	addi	r4,r4,-660
 c00a558:	20c7883a 	add	r3,r4,r3
 c00a55c:	18c00003 	ldbu	r3,0(r3)
 c00a560:	1887883a 	add	r3,r3,r2
 c00a564:	00800804 	movi	r2,32
 c00a568:	10e5c83a 	sub	r18,r2,r3
 c00a56c:	9000ab1e 	bne	r18,zero,c00a81c <__umoddi3+0x498>
 c00a570:	982cd43a 	srli	r22,r19,16
 c00a574:	8ce3c83a 	sub	r17,r17,r19
 c00a578:	9dffffcc 	andi	r23,r19,65535
 c00a57c:	b00b883a 	mov	r5,r22
 c00a580:	8809883a 	mov	r4,r17
 c00a584:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a588:	b00b883a 	mov	r5,r22
 c00a58c:	8809883a 	mov	r4,r17
 c00a590:	102b883a 	mov	r21,r2
 c00a594:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a598:	b80b883a 	mov	r5,r23
 c00a59c:	1009883a 	mov	r4,r2
 c00a5a0:	c0005340 	call	c000534 <__mulsi3>
 c00a5a4:	a82a943a 	slli	r21,r21,16
 c00a5a8:	a006d43a 	srli	r3,r20,16
 c00a5ac:	1d46b03a 	or	r3,r3,r21
 c00a5b0:	1880042e 	bgeu	r3,r2,c00a5c4 <__umoddi3+0x240>
 c00a5b4:	1cc7883a 	add	r3,r3,r19
 c00a5b8:	1cc00236 	bltu	r3,r19,c00a5c4 <__umoddi3+0x240>
 c00a5bc:	1880012e 	bgeu	r3,r2,c00a5c4 <__umoddi3+0x240>
 c00a5c0:	1cc7883a 	add	r3,r3,r19
 c00a5c4:	18a1c83a 	sub	r16,r3,r2
 c00a5c8:	b00b883a 	mov	r5,r22
 c00a5cc:	8009883a 	mov	r4,r16
 c00a5d0:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a5d4:	1023883a 	mov	r17,r2
 c00a5d8:	b00b883a 	mov	r5,r22
 c00a5dc:	8009883a 	mov	r4,r16
 c00a5e0:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a5e4:	8822943a 	slli	r17,r17,16
 c00a5e8:	b80b883a 	mov	r5,r23
 c00a5ec:	1009883a 	mov	r4,r2
 c00a5f0:	c0005340 	call	c000534 <__mulsi3>
 c00a5f4:	a53fffcc 	andi	r20,r20,65535
 c00a5f8:	a446b03a 	or	r3,r20,r17
 c00a5fc:	18bfac2e 	bgeu	r3,r2,c00a4b0 <__alt_data_end+0xfc00a4b0>
 c00a600:	003fa706 	br	c00a4a0 <__alt_data_end+0xfc00a4a0>
 c00a604:	2005883a 	mov	r2,r4
 c00a608:	2807883a 	mov	r3,r5
 c00a60c:	dfc00c17 	ldw	ra,48(sp)
 c00a610:	df000b17 	ldw	fp,44(sp)
 c00a614:	ddc00a17 	ldw	r23,40(sp)
 c00a618:	dd800917 	ldw	r22,36(sp)
 c00a61c:	dd400817 	ldw	r21,32(sp)
 c00a620:	dd000717 	ldw	r20,28(sp)
 c00a624:	dcc00617 	ldw	r19,24(sp)
 c00a628:	dc800517 	ldw	r18,20(sp)
 c00a62c:	dc400417 	ldw	r17,16(sp)
 c00a630:	dc000317 	ldw	r16,12(sp)
 c00a634:	dec00d04 	addi	sp,sp,52
 c00a638:	f800283a 	ret
 c00a63c:	04c03fc4 	movi	r19,255
 c00a640:	99c9803a 	cmpltu	r4,r19,r7
 c00a644:	200890fa 	slli	r4,r4,3
 c00a648:	003fa406 	br	c00a4dc <__alt_data_end+0xfc00a4dc>
 c00a64c:	00803fc4 	movi	r2,255
 c00a650:	14c5803a 	cmpltu	r2,r2,r19
 c00a654:	100490fa 	slli	r2,r2,3
 c00a658:	003fbc06 	br	c00a54c <__alt_data_end+0xfc00a54c>
 c00a65c:	00804034 	movhi	r2,256
 c00a660:	10bfffc4 	addi	r2,r2,-1
 c00a664:	1180a636 	bltu	r2,r6,c00a900 <__umoddi3+0x57c>
 c00a668:	01000404 	movi	r4,16
 c00a66c:	003f5c06 	br	c00a3e0 <__alt_data_end+0xfc00a3e0>
 c00a670:	3d0e983a 	sll	r7,r7,r20
 c00a674:	34ead83a 	srl	r21,r6,r19
 c00a678:	8cc6d83a 	srl	r3,r17,r19
 c00a67c:	8d10983a 	sll	r8,r17,r20
 c00a680:	3d6ab03a 	or	r21,r7,r21
 c00a684:	a82cd43a 	srli	r22,r21,16
 c00a688:	84e2d83a 	srl	r17,r16,r19
 c00a68c:	1809883a 	mov	r4,r3
 c00a690:	b00b883a 	mov	r5,r22
 c00a694:	8a22b03a 	or	r17,r17,r8
 c00a698:	3524983a 	sll	r18,r6,r20
 c00a69c:	dc400015 	stw	r17,0(sp)
 c00a6a0:	d8c00115 	stw	r3,4(sp)
 c00a6a4:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a6a8:	d8c00117 	ldw	r3,4(sp)
 c00a6ac:	b00b883a 	mov	r5,r22
 c00a6b0:	1039883a 	mov	fp,r2
 c00a6b4:	1809883a 	mov	r4,r3
 c00a6b8:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a6bc:	adffffcc 	andi	r23,r21,65535
 c00a6c0:	100b883a 	mov	r5,r2
 c00a6c4:	b809883a 	mov	r4,r23
 c00a6c8:	1023883a 	mov	r17,r2
 c00a6cc:	c0005340 	call	c000534 <__mulsi3>
 c00a6d0:	d9400017 	ldw	r5,0(sp)
 c00a6d4:	e008943a 	slli	r4,fp,16
 c00a6d8:	8520983a 	sll	r16,r16,r20
 c00a6dc:	2806d43a 	srli	r3,r5,16
 c00a6e0:	1906b03a 	or	r3,r3,r4
 c00a6e4:	1880042e 	bgeu	r3,r2,c00a6f8 <__umoddi3+0x374>
 c00a6e8:	1d47883a 	add	r3,r3,r21
 c00a6ec:	893fffc4 	addi	r4,r17,-1
 c00a6f0:	1d40892e 	bgeu	r3,r21,c00a918 <__umoddi3+0x594>
 c00a6f4:	2023883a 	mov	r17,r4
 c00a6f8:	18b9c83a 	sub	fp,r3,r2
 c00a6fc:	b00b883a 	mov	r5,r22
 c00a700:	e009883a 	mov	r4,fp
 c00a704:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a708:	b00b883a 	mov	r5,r22
 c00a70c:	e009883a 	mov	r4,fp
 c00a710:	d8800215 	stw	r2,8(sp)
 c00a714:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a718:	100b883a 	mov	r5,r2
 c00a71c:	b809883a 	mov	r4,r23
 c00a720:	102d883a 	mov	r22,r2
 c00a724:	c0005340 	call	c000534 <__mulsi3>
 c00a728:	d9800217 	ldw	r6,8(sp)
 c00a72c:	d8c00017 	ldw	r3,0(sp)
 c00a730:	300c943a 	slli	r6,r6,16
 c00a734:	1a3fffcc 	andi	r8,r3,65535
 c00a738:	4190b03a 	or	r8,r8,r6
 c00a73c:	4080042e 	bgeu	r8,r2,c00a750 <__umoddi3+0x3cc>
 c00a740:	4551883a 	add	r8,r8,r21
 c00a744:	b0ffffc4 	addi	r3,r22,-1
 c00a748:	45406f2e 	bgeu	r8,r21,c00a908 <__umoddi3+0x584>
 c00a74c:	182d883a 	mov	r22,r3
 c00a750:	880e943a 	slli	r7,r17,16
 c00a754:	9006d43a 	srli	r3,r18,16
 c00a758:	91bfffcc 	andi	r6,r18,65535
 c00a75c:	3dacb03a 	or	r22,r7,r22
 c00a760:	b02ed43a 	srli	r23,r22,16
 c00a764:	b5bfffcc 	andi	r22,r22,65535
 c00a768:	300b883a 	mov	r5,r6
 c00a76c:	b009883a 	mov	r4,r22
 c00a770:	40a3c83a 	sub	r17,r8,r2
 c00a774:	d8c00115 	stw	r3,4(sp)
 c00a778:	d9800215 	stw	r6,8(sp)
 c00a77c:	c0005340 	call	c000534 <__mulsi3>
 c00a780:	d9800217 	ldw	r6,8(sp)
 c00a784:	b809883a 	mov	r4,r23
 c00a788:	1039883a 	mov	fp,r2
 c00a78c:	300b883a 	mov	r5,r6
 c00a790:	c0005340 	call	c000534 <__mulsi3>
 c00a794:	d8c00117 	ldw	r3,4(sp)
 c00a798:	b809883a 	mov	r4,r23
 c00a79c:	d8800215 	stw	r2,8(sp)
 c00a7a0:	180b883a 	mov	r5,r3
 c00a7a4:	c0005340 	call	c000534 <__mulsi3>
 c00a7a8:	d8c00117 	ldw	r3,4(sp)
 c00a7ac:	b009883a 	mov	r4,r22
 c00a7b0:	102f883a 	mov	r23,r2
 c00a7b4:	180b883a 	mov	r5,r3
 c00a7b8:	c0005340 	call	c000534 <__mulsi3>
 c00a7bc:	d9800217 	ldw	r6,8(sp)
 c00a7c0:	e006d43a 	srli	r3,fp,16
 c00a7c4:	1185883a 	add	r2,r2,r6
 c00a7c8:	1885883a 	add	r2,r3,r2
 c00a7cc:	1180022e 	bgeu	r2,r6,c00a7d8 <__umoddi3+0x454>
 c00a7d0:	00c00074 	movhi	r3,1
 c00a7d4:	b8ef883a 	add	r23,r23,r3
 c00a7d8:	1006d43a 	srli	r3,r2,16
 c00a7dc:	1004943a 	slli	r2,r2,16
 c00a7e0:	e73fffcc 	andi	fp,fp,65535
 c00a7e4:	1dc7883a 	add	r3,r3,r23
 c00a7e8:	1739883a 	add	fp,r2,fp
 c00a7ec:	88c03a36 	bltu	r17,r3,c00a8d8 <__umoddi3+0x554>
 c00a7f0:	88c05126 	beq	r17,r3,c00a938 <__umoddi3+0x5b4>
 c00a7f4:	88c9c83a 	sub	r4,r17,r3
 c00a7f8:	e00f883a 	mov	r7,fp
 c00a7fc:	81cfc83a 	sub	r7,r16,r7
 c00a800:	81c7803a 	cmpltu	r3,r16,r7
 c00a804:	20c7c83a 	sub	r3,r4,r3
 c00a808:	1cc4983a 	sll	r2,r3,r19
 c00a80c:	3d0ed83a 	srl	r7,r7,r20
 c00a810:	1d06d83a 	srl	r3,r3,r20
 c00a814:	11c4b03a 	or	r2,r2,r7
 c00a818:	003f7c06 	br	c00a60c <__alt_data_end+0xfc00a60c>
 c00a81c:	9ca6983a 	sll	r19,r19,r18
 c00a820:	88f8d83a 	srl	fp,r17,r3
 c00a824:	80c4d83a 	srl	r2,r16,r3
 c00a828:	982cd43a 	srli	r22,r19,16
 c00a82c:	8ca2983a 	sll	r17,r17,r18
 c00a830:	e009883a 	mov	r4,fp
 c00a834:	b00b883a 	mov	r5,r22
 c00a838:	146ab03a 	or	r21,r2,r17
 c00a83c:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a840:	b00b883a 	mov	r5,r22
 c00a844:	e009883a 	mov	r4,fp
 c00a848:	1029883a 	mov	r20,r2
 c00a84c:	9dffffcc 	andi	r23,r19,65535
 c00a850:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a854:	b809883a 	mov	r4,r23
 c00a858:	100b883a 	mov	r5,r2
 c00a85c:	c0005340 	call	c000534 <__mulsi3>
 c00a860:	a008943a 	slli	r4,r20,16
 c00a864:	a806d43a 	srli	r3,r21,16
 c00a868:	84a8983a 	sll	r20,r16,r18
 c00a86c:	1906b03a 	or	r3,r3,r4
 c00a870:	1880042e 	bgeu	r3,r2,c00a884 <__umoddi3+0x500>
 c00a874:	1cc7883a 	add	r3,r3,r19
 c00a878:	1cc00236 	bltu	r3,r19,c00a884 <__umoddi3+0x500>
 c00a87c:	1880012e 	bgeu	r3,r2,c00a884 <__umoddi3+0x500>
 c00a880:	1cc7883a 	add	r3,r3,r19
 c00a884:	18a3c83a 	sub	r17,r3,r2
 c00a888:	b00b883a 	mov	r5,r22
 c00a88c:	8809883a 	mov	r4,r17
 c00a890:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00a894:	b00b883a 	mov	r5,r22
 c00a898:	8809883a 	mov	r4,r17
 c00a89c:	1021883a 	mov	r16,r2
 c00a8a0:	c00aa400 	call	c00aa40 <__udivsi3>
 c00a8a4:	100b883a 	mov	r5,r2
 c00a8a8:	b809883a 	mov	r4,r23
 c00a8ac:	8020943a 	slli	r16,r16,16
 c00a8b0:	c0005340 	call	c000534 <__mulsi3>
 c00a8b4:	a8ffffcc 	andi	r3,r21,65535
 c00a8b8:	1c06b03a 	or	r3,r3,r16
 c00a8bc:	1880042e 	bgeu	r3,r2,c00a8d0 <__umoddi3+0x54c>
 c00a8c0:	1cc7883a 	add	r3,r3,r19
 c00a8c4:	1cc00236 	bltu	r3,r19,c00a8d0 <__umoddi3+0x54c>
 c00a8c8:	1880012e 	bgeu	r3,r2,c00a8d0 <__umoddi3+0x54c>
 c00a8cc:	1cc7883a 	add	r3,r3,r19
 c00a8d0:	18a3c83a 	sub	r17,r3,r2
 c00a8d4:	003f2906 	br	c00a57c <__alt_data_end+0xfc00a57c>
 c00a8d8:	e48fc83a 	sub	r7,fp,r18
 c00a8dc:	1d49c83a 	sub	r4,r3,r21
 c00a8e0:	e1f9803a 	cmpltu	fp,fp,r7
 c00a8e4:	2739c83a 	sub	fp,r4,fp
 c00a8e8:	8f09c83a 	sub	r4,r17,fp
 c00a8ec:	003fc306 	br	c00a7fc <__alt_data_end+0xfc00a7fc>
 c00a8f0:	01000604 	movi	r4,24
 c00a8f4:	003ef906 	br	c00a4dc <__alt_data_end+0xfc00a4dc>
 c00a8f8:	00800604 	movi	r2,24
 c00a8fc:	003f1306 	br	c00a54c <__alt_data_end+0xfc00a54c>
 c00a900:	01000604 	movi	r4,24
 c00a904:	003eb606 	br	c00a3e0 <__alt_data_end+0xfc00a3e0>
 c00a908:	40bf902e 	bgeu	r8,r2,c00a74c <__alt_data_end+0xfc00a74c>
 c00a90c:	b5bfff84 	addi	r22,r22,-2
 c00a910:	4551883a 	add	r8,r8,r21
 c00a914:	003f8e06 	br	c00a750 <__alt_data_end+0xfc00a750>
 c00a918:	18bf762e 	bgeu	r3,r2,c00a6f4 <__alt_data_end+0xfc00a6f4>
 c00a91c:	8c7fff84 	addi	r17,r17,-2
 c00a920:	1d47883a 	add	r3,r3,r21
 c00a924:	003f7406 	br	c00a6f8 <__alt_data_end+0xfc00a6f8>
 c00a928:	1cc7883a 	add	r3,r3,r19
 c00a92c:	003ecd06 	br	c00a464 <__alt_data_end+0xfc00a464>
 c00a930:	8005883a 	mov	r2,r16
 c00a934:	003ef806 	br	c00a518 <__alt_data_end+0xfc00a518>
 c00a938:	873fe736 	bltu	r16,fp,c00a8d8 <__alt_data_end+0xfc00a8d8>
 c00a93c:	e00f883a 	mov	r7,fp
 c00a940:	0009883a 	mov	r4,zero
 c00a944:	003fad06 	br	c00a7fc <__alt_data_end+0xfc00a7fc>

0c00a948 <__divsi3>:
 c00a948:	20001b16 	blt	r4,zero,c00a9b8 <__divsi3+0x70>
 c00a94c:	000f883a 	mov	r7,zero
 c00a950:	28001616 	blt	r5,zero,c00a9ac <__divsi3+0x64>
 c00a954:	200d883a 	mov	r6,r4
 c00a958:	29001a2e 	bgeu	r5,r4,c00a9c4 <__divsi3+0x7c>
 c00a95c:	00800804 	movi	r2,32
 c00a960:	00c00044 	movi	r3,1
 c00a964:	00000106 	br	c00a96c <__divsi3+0x24>
 c00a968:	10000d26 	beq	r2,zero,c00a9a0 <__divsi3+0x58>
 c00a96c:	294b883a 	add	r5,r5,r5
 c00a970:	10bfffc4 	addi	r2,r2,-1
 c00a974:	18c7883a 	add	r3,r3,r3
 c00a978:	293ffb36 	bltu	r5,r4,c00a968 <__alt_data_end+0xfc00a968>
 c00a97c:	0005883a 	mov	r2,zero
 c00a980:	18000726 	beq	r3,zero,c00a9a0 <__divsi3+0x58>
 c00a984:	0005883a 	mov	r2,zero
 c00a988:	31400236 	bltu	r6,r5,c00a994 <__divsi3+0x4c>
 c00a98c:	314dc83a 	sub	r6,r6,r5
 c00a990:	10c4b03a 	or	r2,r2,r3
 c00a994:	1806d07a 	srli	r3,r3,1
 c00a998:	280ad07a 	srli	r5,r5,1
 c00a99c:	183ffa1e 	bne	r3,zero,c00a988 <__alt_data_end+0xfc00a988>
 c00a9a0:	38000126 	beq	r7,zero,c00a9a8 <__divsi3+0x60>
 c00a9a4:	0085c83a 	sub	r2,zero,r2
 c00a9a8:	f800283a 	ret
 c00a9ac:	014bc83a 	sub	r5,zero,r5
 c00a9b0:	39c0005c 	xori	r7,r7,1
 c00a9b4:	003fe706 	br	c00a954 <__alt_data_end+0xfc00a954>
 c00a9b8:	0109c83a 	sub	r4,zero,r4
 c00a9bc:	01c00044 	movi	r7,1
 c00a9c0:	003fe306 	br	c00a950 <__alt_data_end+0xfc00a950>
 c00a9c4:	00c00044 	movi	r3,1
 c00a9c8:	003fee06 	br	c00a984 <__alt_data_end+0xfc00a984>

0c00a9cc <__modsi3>:
 c00a9cc:	20001716 	blt	r4,zero,c00aa2c <__modsi3+0x60>
 c00a9d0:	000f883a 	mov	r7,zero
 c00a9d4:	2005883a 	mov	r2,r4
 c00a9d8:	28001216 	blt	r5,zero,c00aa24 <__modsi3+0x58>
 c00a9dc:	2900162e 	bgeu	r5,r4,c00aa38 <__modsi3+0x6c>
 c00a9e0:	01800804 	movi	r6,32
 c00a9e4:	00c00044 	movi	r3,1
 c00a9e8:	00000106 	br	c00a9f0 <__modsi3+0x24>
 c00a9ec:	30000a26 	beq	r6,zero,c00aa18 <__modsi3+0x4c>
 c00a9f0:	294b883a 	add	r5,r5,r5
 c00a9f4:	31bfffc4 	addi	r6,r6,-1
 c00a9f8:	18c7883a 	add	r3,r3,r3
 c00a9fc:	293ffb36 	bltu	r5,r4,c00a9ec <__alt_data_end+0xfc00a9ec>
 c00aa00:	18000526 	beq	r3,zero,c00aa18 <__modsi3+0x4c>
 c00aa04:	1806d07a 	srli	r3,r3,1
 c00aa08:	11400136 	bltu	r2,r5,c00aa10 <__modsi3+0x44>
 c00aa0c:	1145c83a 	sub	r2,r2,r5
 c00aa10:	280ad07a 	srli	r5,r5,1
 c00aa14:	183ffb1e 	bne	r3,zero,c00aa04 <__alt_data_end+0xfc00aa04>
 c00aa18:	38000126 	beq	r7,zero,c00aa20 <__modsi3+0x54>
 c00aa1c:	0085c83a 	sub	r2,zero,r2
 c00aa20:	f800283a 	ret
 c00aa24:	014bc83a 	sub	r5,zero,r5
 c00aa28:	003fec06 	br	c00a9dc <__alt_data_end+0xfc00a9dc>
 c00aa2c:	0109c83a 	sub	r4,zero,r4
 c00aa30:	01c00044 	movi	r7,1
 c00aa34:	003fe706 	br	c00a9d4 <__alt_data_end+0xfc00a9d4>
 c00aa38:	00c00044 	movi	r3,1
 c00aa3c:	003ff106 	br	c00aa04 <__alt_data_end+0xfc00aa04>

0c00aa40 <__udivsi3>:
 c00aa40:	200d883a 	mov	r6,r4
 c00aa44:	2900152e 	bgeu	r5,r4,c00aa9c <__udivsi3+0x5c>
 c00aa48:	28001416 	blt	r5,zero,c00aa9c <__udivsi3+0x5c>
 c00aa4c:	00800804 	movi	r2,32
 c00aa50:	00c00044 	movi	r3,1
 c00aa54:	00000206 	br	c00aa60 <__udivsi3+0x20>
 c00aa58:	10000e26 	beq	r2,zero,c00aa94 <__udivsi3+0x54>
 c00aa5c:	28000516 	blt	r5,zero,c00aa74 <__udivsi3+0x34>
 c00aa60:	294b883a 	add	r5,r5,r5
 c00aa64:	10bfffc4 	addi	r2,r2,-1
 c00aa68:	18c7883a 	add	r3,r3,r3
 c00aa6c:	293ffa36 	bltu	r5,r4,c00aa58 <__alt_data_end+0xfc00aa58>
 c00aa70:	18000826 	beq	r3,zero,c00aa94 <__udivsi3+0x54>
 c00aa74:	0005883a 	mov	r2,zero
 c00aa78:	31400236 	bltu	r6,r5,c00aa84 <__udivsi3+0x44>
 c00aa7c:	314dc83a 	sub	r6,r6,r5
 c00aa80:	10c4b03a 	or	r2,r2,r3
 c00aa84:	1806d07a 	srli	r3,r3,1
 c00aa88:	280ad07a 	srli	r5,r5,1
 c00aa8c:	183ffa1e 	bne	r3,zero,c00aa78 <__alt_data_end+0xfc00aa78>
 c00aa90:	f800283a 	ret
 c00aa94:	0005883a 	mov	r2,zero
 c00aa98:	f800283a 	ret
 c00aa9c:	00c00044 	movi	r3,1
 c00aaa0:	003ff406 	br	c00aa74 <__alt_data_end+0xfc00aa74>

0c00aaa4 <__umodsi3>:
 c00aaa4:	2005883a 	mov	r2,r4
 c00aaa8:	2900122e 	bgeu	r5,r4,c00aaf4 <__umodsi3+0x50>
 c00aaac:	28001116 	blt	r5,zero,c00aaf4 <__umodsi3+0x50>
 c00aab0:	01800804 	movi	r6,32
 c00aab4:	00c00044 	movi	r3,1
 c00aab8:	00000206 	br	c00aac4 <__umodsi3+0x20>
 c00aabc:	30000c26 	beq	r6,zero,c00aaf0 <__umodsi3+0x4c>
 c00aac0:	28000516 	blt	r5,zero,c00aad8 <__umodsi3+0x34>
 c00aac4:	294b883a 	add	r5,r5,r5
 c00aac8:	31bfffc4 	addi	r6,r6,-1
 c00aacc:	18c7883a 	add	r3,r3,r3
 c00aad0:	293ffa36 	bltu	r5,r4,c00aabc <__alt_data_end+0xfc00aabc>
 c00aad4:	18000626 	beq	r3,zero,c00aaf0 <__umodsi3+0x4c>
 c00aad8:	1806d07a 	srli	r3,r3,1
 c00aadc:	11400136 	bltu	r2,r5,c00aae4 <__umodsi3+0x40>
 c00aae0:	1145c83a 	sub	r2,r2,r5
 c00aae4:	280ad07a 	srli	r5,r5,1
 c00aae8:	183ffb1e 	bne	r3,zero,c00aad8 <__alt_data_end+0xfc00aad8>
 c00aaec:	f800283a 	ret
 c00aaf0:	f800283a 	ret
 c00aaf4:	00c00044 	movi	r3,1
 c00aaf8:	003ff706 	br	c00aad8 <__alt_data_end+0xfc00aad8>

0c00aafc <__adddf3>:
 c00aafc:	02c00434 	movhi	r11,16
 c00ab00:	5affffc4 	addi	r11,r11,-1
 c00ab04:	2806d7fa 	srli	r3,r5,31
 c00ab08:	2ad4703a 	and	r10,r5,r11
 c00ab0c:	3ad2703a 	and	r9,r7,r11
 c00ab10:	3804d53a 	srli	r2,r7,20
 c00ab14:	3018d77a 	srli	r12,r6,29
 c00ab18:	280ad53a 	srli	r5,r5,20
 c00ab1c:	501490fa 	slli	r10,r10,3
 c00ab20:	2010d77a 	srli	r8,r4,29
 c00ab24:	481290fa 	slli	r9,r9,3
 c00ab28:	380ed7fa 	srli	r7,r7,31
 c00ab2c:	defffb04 	addi	sp,sp,-20
 c00ab30:	dc800215 	stw	r18,8(sp)
 c00ab34:	dc400115 	stw	r17,4(sp)
 c00ab38:	dc000015 	stw	r16,0(sp)
 c00ab3c:	dfc00415 	stw	ra,16(sp)
 c00ab40:	dcc00315 	stw	r19,12(sp)
 c00ab44:	1c803fcc 	andi	r18,r3,255
 c00ab48:	2c01ffcc 	andi	r16,r5,2047
 c00ab4c:	5210b03a 	or	r8,r10,r8
 c00ab50:	202290fa 	slli	r17,r4,3
 c00ab54:	1081ffcc 	andi	r2,r2,2047
 c00ab58:	4b12b03a 	or	r9,r9,r12
 c00ab5c:	300c90fa 	slli	r6,r6,3
 c00ab60:	91c07526 	beq	r18,r7,c00ad38 <__adddf3+0x23c>
 c00ab64:	8087c83a 	sub	r3,r16,r2
 c00ab68:	00c0ab0e 	bge	zero,r3,c00ae18 <__adddf3+0x31c>
 c00ab6c:	10002a1e 	bne	r2,zero,c00ac18 <__adddf3+0x11c>
 c00ab70:	4984b03a 	or	r2,r9,r6
 c00ab74:	1000961e 	bne	r2,zero,c00add0 <__adddf3+0x2d4>
 c00ab78:	888001cc 	andi	r2,r17,7
 c00ab7c:	10000726 	beq	r2,zero,c00ab9c <__adddf3+0xa0>
 c00ab80:	888003cc 	andi	r2,r17,15
 c00ab84:	00c00104 	movi	r3,4
 c00ab88:	10c00426 	beq	r2,r3,c00ab9c <__adddf3+0xa0>
 c00ab8c:	88c7883a 	add	r3,r17,r3
 c00ab90:	1c63803a 	cmpltu	r17,r3,r17
 c00ab94:	4451883a 	add	r8,r8,r17
 c00ab98:	1823883a 	mov	r17,r3
 c00ab9c:	4080202c 	andhi	r2,r8,128
 c00aba0:	10005926 	beq	r2,zero,c00ad08 <__adddf3+0x20c>
 c00aba4:	84000044 	addi	r16,r16,1
 c00aba8:	0081ffc4 	movi	r2,2047
 c00abac:	8080ba26 	beq	r16,r2,c00ae98 <__adddf3+0x39c>
 c00abb0:	00bfe034 	movhi	r2,65408
 c00abb4:	10bfffc4 	addi	r2,r2,-1
 c00abb8:	4090703a 	and	r8,r8,r2
 c00abbc:	4004977a 	slli	r2,r8,29
 c00abc0:	4010927a 	slli	r8,r8,9
 c00abc4:	8822d0fa 	srli	r17,r17,3
 c00abc8:	8401ffcc 	andi	r16,r16,2047
 c00abcc:	4010d33a 	srli	r8,r8,12
 c00abd0:	9007883a 	mov	r3,r18
 c00abd4:	1444b03a 	or	r2,r2,r17
 c00abd8:	8401ffcc 	andi	r16,r16,2047
 c00abdc:	8020953a 	slli	r16,r16,20
 c00abe0:	18c03fcc 	andi	r3,r3,255
 c00abe4:	01000434 	movhi	r4,16
 c00abe8:	213fffc4 	addi	r4,r4,-1
 c00abec:	180697fa 	slli	r3,r3,31
 c00abf0:	4110703a 	and	r8,r8,r4
 c00abf4:	4410b03a 	or	r8,r8,r16
 c00abf8:	40c6b03a 	or	r3,r8,r3
 c00abfc:	dfc00417 	ldw	ra,16(sp)
 c00ac00:	dcc00317 	ldw	r19,12(sp)
 c00ac04:	dc800217 	ldw	r18,8(sp)
 c00ac08:	dc400117 	ldw	r17,4(sp)
 c00ac0c:	dc000017 	ldw	r16,0(sp)
 c00ac10:	dec00504 	addi	sp,sp,20
 c00ac14:	f800283a 	ret
 c00ac18:	0081ffc4 	movi	r2,2047
 c00ac1c:	80bfd626 	beq	r16,r2,c00ab78 <__alt_data_end+0xfc00ab78>
 c00ac20:	4a402034 	orhi	r9,r9,128
 c00ac24:	00800e04 	movi	r2,56
 c00ac28:	10c09f16 	blt	r2,r3,c00aea8 <__adddf3+0x3ac>
 c00ac2c:	008007c4 	movi	r2,31
 c00ac30:	10c0c216 	blt	r2,r3,c00af3c <__adddf3+0x440>
 c00ac34:	00800804 	movi	r2,32
 c00ac38:	10c5c83a 	sub	r2,r2,r3
 c00ac3c:	488a983a 	sll	r5,r9,r2
 c00ac40:	30c8d83a 	srl	r4,r6,r3
 c00ac44:	3084983a 	sll	r2,r6,r2
 c00ac48:	48c6d83a 	srl	r3,r9,r3
 c00ac4c:	290cb03a 	or	r6,r5,r4
 c00ac50:	1004c03a 	cmpne	r2,r2,zero
 c00ac54:	308cb03a 	or	r6,r6,r2
 c00ac58:	898dc83a 	sub	r6,r17,r6
 c00ac5c:	89a3803a 	cmpltu	r17,r17,r6
 c00ac60:	40d1c83a 	sub	r8,r8,r3
 c00ac64:	4451c83a 	sub	r8,r8,r17
 c00ac68:	3023883a 	mov	r17,r6
 c00ac6c:	4080202c 	andhi	r2,r8,128
 c00ac70:	10002326 	beq	r2,zero,c00ad00 <__adddf3+0x204>
 c00ac74:	04c02034 	movhi	r19,128
 c00ac78:	9cffffc4 	addi	r19,r19,-1
 c00ac7c:	44e6703a 	and	r19,r8,r19
 c00ac80:	98007626 	beq	r19,zero,c00ae5c <__adddf3+0x360>
 c00ac84:	9809883a 	mov	r4,r19
 c00ac88:	c00d33c0 	call	c00d33c <__clzsi2>
 c00ac8c:	10fffe04 	addi	r3,r2,-8
 c00ac90:	010007c4 	movi	r4,31
 c00ac94:	20c07716 	blt	r4,r3,c00ae74 <__adddf3+0x378>
 c00ac98:	00800804 	movi	r2,32
 c00ac9c:	10c5c83a 	sub	r2,r2,r3
 c00aca0:	8884d83a 	srl	r2,r17,r2
 c00aca4:	98d0983a 	sll	r8,r19,r3
 c00aca8:	88e2983a 	sll	r17,r17,r3
 c00acac:	1204b03a 	or	r2,r2,r8
 c00acb0:	1c007416 	blt	r3,r16,c00ae84 <__adddf3+0x388>
 c00acb4:	1c21c83a 	sub	r16,r3,r16
 c00acb8:	82000044 	addi	r8,r16,1
 c00acbc:	00c007c4 	movi	r3,31
 c00acc0:	1a009116 	blt	r3,r8,c00af08 <__adddf3+0x40c>
 c00acc4:	00c00804 	movi	r3,32
 c00acc8:	1a07c83a 	sub	r3,r3,r8
 c00accc:	8a08d83a 	srl	r4,r17,r8
 c00acd0:	88e2983a 	sll	r17,r17,r3
 c00acd4:	10c6983a 	sll	r3,r2,r3
 c00acd8:	1210d83a 	srl	r8,r2,r8
 c00acdc:	8804c03a 	cmpne	r2,r17,zero
 c00ace0:	1906b03a 	or	r3,r3,r4
 c00ace4:	18a2b03a 	or	r17,r3,r2
 c00ace8:	0021883a 	mov	r16,zero
 c00acec:	003fa206 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00acf0:	1890b03a 	or	r8,r3,r2
 c00acf4:	40017d26 	beq	r8,zero,c00b2ec <__adddf3+0x7f0>
 c00acf8:	1011883a 	mov	r8,r2
 c00acfc:	1823883a 	mov	r17,r3
 c00ad00:	888001cc 	andi	r2,r17,7
 c00ad04:	103f9e1e 	bne	r2,zero,c00ab80 <__alt_data_end+0xfc00ab80>
 c00ad08:	4004977a 	slli	r2,r8,29
 c00ad0c:	8822d0fa 	srli	r17,r17,3
 c00ad10:	4010d0fa 	srli	r8,r8,3
 c00ad14:	9007883a 	mov	r3,r18
 c00ad18:	1444b03a 	or	r2,r2,r17
 c00ad1c:	0101ffc4 	movi	r4,2047
 c00ad20:	81002426 	beq	r16,r4,c00adb4 <__adddf3+0x2b8>
 c00ad24:	8120703a 	and	r16,r16,r4
 c00ad28:	01000434 	movhi	r4,16
 c00ad2c:	213fffc4 	addi	r4,r4,-1
 c00ad30:	4110703a 	and	r8,r8,r4
 c00ad34:	003fa806 	br	c00abd8 <__alt_data_end+0xfc00abd8>
 c00ad38:	8089c83a 	sub	r4,r16,r2
 c00ad3c:	01005e0e 	bge	zero,r4,c00aeb8 <__adddf3+0x3bc>
 c00ad40:	10002b26 	beq	r2,zero,c00adf0 <__adddf3+0x2f4>
 c00ad44:	0081ffc4 	movi	r2,2047
 c00ad48:	80bf8b26 	beq	r16,r2,c00ab78 <__alt_data_end+0xfc00ab78>
 c00ad4c:	4a402034 	orhi	r9,r9,128
 c00ad50:	00800e04 	movi	r2,56
 c00ad54:	1100a40e 	bge	r2,r4,c00afe8 <__adddf3+0x4ec>
 c00ad58:	498cb03a 	or	r6,r9,r6
 c00ad5c:	300ac03a 	cmpne	r5,r6,zero
 c00ad60:	0013883a 	mov	r9,zero
 c00ad64:	2c4b883a 	add	r5,r5,r17
 c00ad68:	2c63803a 	cmpltu	r17,r5,r17
 c00ad6c:	4a11883a 	add	r8,r9,r8
 c00ad70:	8a11883a 	add	r8,r17,r8
 c00ad74:	2823883a 	mov	r17,r5
 c00ad78:	4080202c 	andhi	r2,r8,128
 c00ad7c:	103fe026 	beq	r2,zero,c00ad00 <__alt_data_end+0xfc00ad00>
 c00ad80:	84000044 	addi	r16,r16,1
 c00ad84:	0081ffc4 	movi	r2,2047
 c00ad88:	8080d226 	beq	r16,r2,c00b0d4 <__adddf3+0x5d8>
 c00ad8c:	00bfe034 	movhi	r2,65408
 c00ad90:	10bfffc4 	addi	r2,r2,-1
 c00ad94:	4090703a 	and	r8,r8,r2
 c00ad98:	880ad07a 	srli	r5,r17,1
 c00ad9c:	400897fa 	slli	r4,r8,31
 c00ada0:	88c0004c 	andi	r3,r17,1
 c00ada4:	28e2b03a 	or	r17,r5,r3
 c00ada8:	4010d07a 	srli	r8,r8,1
 c00adac:	2462b03a 	or	r17,r4,r17
 c00adb0:	003f7106 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00adb4:	4088b03a 	or	r4,r8,r2
 c00adb8:	20014526 	beq	r4,zero,c00b2d0 <__adddf3+0x7d4>
 c00adbc:	01000434 	movhi	r4,16
 c00adc0:	42000234 	orhi	r8,r8,8
 c00adc4:	213fffc4 	addi	r4,r4,-1
 c00adc8:	4110703a 	and	r8,r8,r4
 c00adcc:	003f8206 	br	c00abd8 <__alt_data_end+0xfc00abd8>
 c00add0:	18ffffc4 	addi	r3,r3,-1
 c00add4:	1800491e 	bne	r3,zero,c00aefc <__adddf3+0x400>
 c00add8:	898bc83a 	sub	r5,r17,r6
 c00addc:	8963803a 	cmpltu	r17,r17,r5
 c00ade0:	4251c83a 	sub	r8,r8,r9
 c00ade4:	4451c83a 	sub	r8,r8,r17
 c00ade8:	2823883a 	mov	r17,r5
 c00adec:	003f9f06 	br	c00ac6c <__alt_data_end+0xfc00ac6c>
 c00adf0:	4984b03a 	or	r2,r9,r6
 c00adf4:	103f6026 	beq	r2,zero,c00ab78 <__alt_data_end+0xfc00ab78>
 c00adf8:	213fffc4 	addi	r4,r4,-1
 c00adfc:	2000931e 	bne	r4,zero,c00b04c <__adddf3+0x550>
 c00ae00:	898d883a 	add	r6,r17,r6
 c00ae04:	3463803a 	cmpltu	r17,r6,r17
 c00ae08:	4251883a 	add	r8,r8,r9
 c00ae0c:	8a11883a 	add	r8,r17,r8
 c00ae10:	3023883a 	mov	r17,r6
 c00ae14:	003fd806 	br	c00ad78 <__alt_data_end+0xfc00ad78>
 c00ae18:	1800541e 	bne	r3,zero,c00af6c <__adddf3+0x470>
 c00ae1c:	80800044 	addi	r2,r16,1
 c00ae20:	1081ffcc 	andi	r2,r2,2047
 c00ae24:	00c00044 	movi	r3,1
 c00ae28:	1880a00e 	bge	r3,r2,c00b0ac <__adddf3+0x5b0>
 c00ae2c:	8989c83a 	sub	r4,r17,r6
 c00ae30:	8905803a 	cmpltu	r2,r17,r4
 c00ae34:	4267c83a 	sub	r19,r8,r9
 c00ae38:	98a7c83a 	sub	r19,r19,r2
 c00ae3c:	9880202c 	andhi	r2,r19,128
 c00ae40:	10006326 	beq	r2,zero,c00afd0 <__adddf3+0x4d4>
 c00ae44:	3463c83a 	sub	r17,r6,r17
 c00ae48:	4a07c83a 	sub	r3,r9,r8
 c00ae4c:	344d803a 	cmpltu	r6,r6,r17
 c00ae50:	19a7c83a 	sub	r19,r3,r6
 c00ae54:	3825883a 	mov	r18,r7
 c00ae58:	983f8a1e 	bne	r19,zero,c00ac84 <__alt_data_end+0xfc00ac84>
 c00ae5c:	8809883a 	mov	r4,r17
 c00ae60:	c00d33c0 	call	c00d33c <__clzsi2>
 c00ae64:	10800804 	addi	r2,r2,32
 c00ae68:	10fffe04 	addi	r3,r2,-8
 c00ae6c:	010007c4 	movi	r4,31
 c00ae70:	20ff890e 	bge	r4,r3,c00ac98 <__alt_data_end+0xfc00ac98>
 c00ae74:	10bff604 	addi	r2,r2,-40
 c00ae78:	8884983a 	sll	r2,r17,r2
 c00ae7c:	0023883a 	mov	r17,zero
 c00ae80:	1c3f8c0e 	bge	r3,r16,c00acb4 <__alt_data_end+0xfc00acb4>
 c00ae84:	023fe034 	movhi	r8,65408
 c00ae88:	423fffc4 	addi	r8,r8,-1
 c00ae8c:	80e1c83a 	sub	r16,r16,r3
 c00ae90:	1210703a 	and	r8,r2,r8
 c00ae94:	003f3806 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00ae98:	9007883a 	mov	r3,r18
 c00ae9c:	0011883a 	mov	r8,zero
 c00aea0:	0005883a 	mov	r2,zero
 c00aea4:	003f4c06 	br	c00abd8 <__alt_data_end+0xfc00abd8>
 c00aea8:	498cb03a 	or	r6,r9,r6
 c00aeac:	300cc03a 	cmpne	r6,r6,zero
 c00aeb0:	0007883a 	mov	r3,zero
 c00aeb4:	003f6806 	br	c00ac58 <__alt_data_end+0xfc00ac58>
 c00aeb8:	20009c1e 	bne	r4,zero,c00b12c <__adddf3+0x630>
 c00aebc:	80800044 	addi	r2,r16,1
 c00aec0:	1141ffcc 	andi	r5,r2,2047
 c00aec4:	01000044 	movi	r4,1
 c00aec8:	2140670e 	bge	r4,r5,c00b068 <__adddf3+0x56c>
 c00aecc:	0101ffc4 	movi	r4,2047
 c00aed0:	11007f26 	beq	r2,r4,c00b0d0 <__adddf3+0x5d4>
 c00aed4:	898d883a 	add	r6,r17,r6
 c00aed8:	4247883a 	add	r3,r8,r9
 c00aedc:	3451803a 	cmpltu	r8,r6,r17
 c00aee0:	40d1883a 	add	r8,r8,r3
 c00aee4:	402297fa 	slli	r17,r8,31
 c00aee8:	300cd07a 	srli	r6,r6,1
 c00aeec:	4010d07a 	srli	r8,r8,1
 c00aef0:	1021883a 	mov	r16,r2
 c00aef4:	89a2b03a 	or	r17,r17,r6
 c00aef8:	003f1f06 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00aefc:	0081ffc4 	movi	r2,2047
 c00af00:	80bf481e 	bne	r16,r2,c00ac24 <__alt_data_end+0xfc00ac24>
 c00af04:	003f1c06 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00af08:	843ff844 	addi	r16,r16,-31
 c00af0c:	01000804 	movi	r4,32
 c00af10:	1406d83a 	srl	r3,r2,r16
 c00af14:	41005026 	beq	r8,r4,c00b058 <__adddf3+0x55c>
 c00af18:	01001004 	movi	r4,64
 c00af1c:	2211c83a 	sub	r8,r4,r8
 c00af20:	1204983a 	sll	r2,r2,r8
 c00af24:	88a2b03a 	or	r17,r17,r2
 c00af28:	8822c03a 	cmpne	r17,r17,zero
 c00af2c:	1c62b03a 	or	r17,r3,r17
 c00af30:	0011883a 	mov	r8,zero
 c00af34:	0021883a 	mov	r16,zero
 c00af38:	003f7106 	br	c00ad00 <__alt_data_end+0xfc00ad00>
 c00af3c:	193ff804 	addi	r4,r3,-32
 c00af40:	00800804 	movi	r2,32
 c00af44:	4908d83a 	srl	r4,r9,r4
 c00af48:	18804526 	beq	r3,r2,c00b060 <__adddf3+0x564>
 c00af4c:	00801004 	movi	r2,64
 c00af50:	10c5c83a 	sub	r2,r2,r3
 c00af54:	4886983a 	sll	r3,r9,r2
 c00af58:	198cb03a 	or	r6,r3,r6
 c00af5c:	300cc03a 	cmpne	r6,r6,zero
 c00af60:	218cb03a 	or	r6,r4,r6
 c00af64:	0007883a 	mov	r3,zero
 c00af68:	003f3b06 	br	c00ac58 <__alt_data_end+0xfc00ac58>
 c00af6c:	80002a26 	beq	r16,zero,c00b018 <__adddf3+0x51c>
 c00af70:	0101ffc4 	movi	r4,2047
 c00af74:	11006826 	beq	r2,r4,c00b118 <__adddf3+0x61c>
 c00af78:	00c7c83a 	sub	r3,zero,r3
 c00af7c:	42002034 	orhi	r8,r8,128
 c00af80:	01000e04 	movi	r4,56
 c00af84:	20c07c16 	blt	r4,r3,c00b178 <__adddf3+0x67c>
 c00af88:	010007c4 	movi	r4,31
 c00af8c:	20c0da16 	blt	r4,r3,c00b2f8 <__adddf3+0x7fc>
 c00af90:	01000804 	movi	r4,32
 c00af94:	20c9c83a 	sub	r4,r4,r3
 c00af98:	4114983a 	sll	r10,r8,r4
 c00af9c:	88cad83a 	srl	r5,r17,r3
 c00afa0:	8908983a 	sll	r4,r17,r4
 c00afa4:	40c6d83a 	srl	r3,r8,r3
 c00afa8:	5162b03a 	or	r17,r10,r5
 c00afac:	2008c03a 	cmpne	r4,r4,zero
 c00afb0:	8922b03a 	or	r17,r17,r4
 c00afb4:	3463c83a 	sub	r17,r6,r17
 c00afb8:	48c7c83a 	sub	r3,r9,r3
 c00afbc:	344d803a 	cmpltu	r6,r6,r17
 c00afc0:	1991c83a 	sub	r8,r3,r6
 c00afc4:	1021883a 	mov	r16,r2
 c00afc8:	3825883a 	mov	r18,r7
 c00afcc:	003f2706 	br	c00ac6c <__alt_data_end+0xfc00ac6c>
 c00afd0:	24d0b03a 	or	r8,r4,r19
 c00afd4:	40001b1e 	bne	r8,zero,c00b044 <__adddf3+0x548>
 c00afd8:	0005883a 	mov	r2,zero
 c00afdc:	0007883a 	mov	r3,zero
 c00afe0:	0021883a 	mov	r16,zero
 c00afe4:	003f4d06 	br	c00ad1c <__alt_data_end+0xfc00ad1c>
 c00afe8:	008007c4 	movi	r2,31
 c00afec:	11003c16 	blt	r2,r4,c00b0e0 <__adddf3+0x5e4>
 c00aff0:	00800804 	movi	r2,32
 c00aff4:	1105c83a 	sub	r2,r2,r4
 c00aff8:	488e983a 	sll	r7,r9,r2
 c00affc:	310ad83a 	srl	r5,r6,r4
 c00b000:	3084983a 	sll	r2,r6,r2
 c00b004:	4912d83a 	srl	r9,r9,r4
 c00b008:	394ab03a 	or	r5,r7,r5
 c00b00c:	1004c03a 	cmpne	r2,r2,zero
 c00b010:	288ab03a 	or	r5,r5,r2
 c00b014:	003f5306 	br	c00ad64 <__alt_data_end+0xfc00ad64>
 c00b018:	4448b03a 	or	r4,r8,r17
 c00b01c:	20003e26 	beq	r4,zero,c00b118 <__adddf3+0x61c>
 c00b020:	00c6303a 	nor	r3,zero,r3
 c00b024:	18003a1e 	bne	r3,zero,c00b110 <__adddf3+0x614>
 c00b028:	3463c83a 	sub	r17,r6,r17
 c00b02c:	4a07c83a 	sub	r3,r9,r8
 c00b030:	344d803a 	cmpltu	r6,r6,r17
 c00b034:	1991c83a 	sub	r8,r3,r6
 c00b038:	1021883a 	mov	r16,r2
 c00b03c:	3825883a 	mov	r18,r7
 c00b040:	003f0a06 	br	c00ac6c <__alt_data_end+0xfc00ac6c>
 c00b044:	2023883a 	mov	r17,r4
 c00b048:	003f0d06 	br	c00ac80 <__alt_data_end+0xfc00ac80>
 c00b04c:	0081ffc4 	movi	r2,2047
 c00b050:	80bf3f1e 	bne	r16,r2,c00ad50 <__alt_data_end+0xfc00ad50>
 c00b054:	003ec806 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b058:	0005883a 	mov	r2,zero
 c00b05c:	003fb106 	br	c00af24 <__alt_data_end+0xfc00af24>
 c00b060:	0007883a 	mov	r3,zero
 c00b064:	003fbc06 	br	c00af58 <__alt_data_end+0xfc00af58>
 c00b068:	4444b03a 	or	r2,r8,r17
 c00b06c:	8000871e 	bne	r16,zero,c00b28c <__adddf3+0x790>
 c00b070:	1000ba26 	beq	r2,zero,c00b35c <__adddf3+0x860>
 c00b074:	4984b03a 	or	r2,r9,r6
 c00b078:	103ebf26 	beq	r2,zero,c00ab78 <__alt_data_end+0xfc00ab78>
 c00b07c:	8985883a 	add	r2,r17,r6
 c00b080:	4247883a 	add	r3,r8,r9
 c00b084:	1451803a 	cmpltu	r8,r2,r17
 c00b088:	40d1883a 	add	r8,r8,r3
 c00b08c:	40c0202c 	andhi	r3,r8,128
 c00b090:	1023883a 	mov	r17,r2
 c00b094:	183f1a26 	beq	r3,zero,c00ad00 <__alt_data_end+0xfc00ad00>
 c00b098:	00bfe034 	movhi	r2,65408
 c00b09c:	10bfffc4 	addi	r2,r2,-1
 c00b0a0:	2021883a 	mov	r16,r4
 c00b0a4:	4090703a 	and	r8,r8,r2
 c00b0a8:	003eb306 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b0ac:	4444b03a 	or	r2,r8,r17
 c00b0b0:	8000291e 	bne	r16,zero,c00b158 <__adddf3+0x65c>
 c00b0b4:	10004b1e 	bne	r2,zero,c00b1e4 <__adddf3+0x6e8>
 c00b0b8:	4990b03a 	or	r8,r9,r6
 c00b0bc:	40008b26 	beq	r8,zero,c00b2ec <__adddf3+0x7f0>
 c00b0c0:	4811883a 	mov	r8,r9
 c00b0c4:	3023883a 	mov	r17,r6
 c00b0c8:	3825883a 	mov	r18,r7
 c00b0cc:	003eaa06 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b0d0:	1021883a 	mov	r16,r2
 c00b0d4:	0011883a 	mov	r8,zero
 c00b0d8:	0005883a 	mov	r2,zero
 c00b0dc:	003f0f06 	br	c00ad1c <__alt_data_end+0xfc00ad1c>
 c00b0e0:	217ff804 	addi	r5,r4,-32
 c00b0e4:	00800804 	movi	r2,32
 c00b0e8:	494ad83a 	srl	r5,r9,r5
 c00b0ec:	20807d26 	beq	r4,r2,c00b2e4 <__adddf3+0x7e8>
 c00b0f0:	00801004 	movi	r2,64
 c00b0f4:	1109c83a 	sub	r4,r2,r4
 c00b0f8:	4912983a 	sll	r9,r9,r4
 c00b0fc:	498cb03a 	or	r6,r9,r6
 c00b100:	300cc03a 	cmpne	r6,r6,zero
 c00b104:	298ab03a 	or	r5,r5,r6
 c00b108:	0013883a 	mov	r9,zero
 c00b10c:	003f1506 	br	c00ad64 <__alt_data_end+0xfc00ad64>
 c00b110:	0101ffc4 	movi	r4,2047
 c00b114:	113f9a1e 	bne	r2,r4,c00af80 <__alt_data_end+0xfc00af80>
 c00b118:	4811883a 	mov	r8,r9
 c00b11c:	3023883a 	mov	r17,r6
 c00b120:	1021883a 	mov	r16,r2
 c00b124:	3825883a 	mov	r18,r7
 c00b128:	003e9306 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b12c:	8000161e 	bne	r16,zero,c00b188 <__adddf3+0x68c>
 c00b130:	444ab03a 	or	r5,r8,r17
 c00b134:	28005126 	beq	r5,zero,c00b27c <__adddf3+0x780>
 c00b138:	0108303a 	nor	r4,zero,r4
 c00b13c:	20004d1e 	bne	r4,zero,c00b274 <__adddf3+0x778>
 c00b140:	89a3883a 	add	r17,r17,r6
 c00b144:	4253883a 	add	r9,r8,r9
 c00b148:	898d803a 	cmpltu	r6,r17,r6
 c00b14c:	3251883a 	add	r8,r6,r9
 c00b150:	1021883a 	mov	r16,r2
 c00b154:	003f0806 	br	c00ad78 <__alt_data_end+0xfc00ad78>
 c00b158:	1000301e 	bne	r2,zero,c00b21c <__adddf3+0x720>
 c00b15c:	4984b03a 	or	r2,r9,r6
 c00b160:	10007126 	beq	r2,zero,c00b328 <__adddf3+0x82c>
 c00b164:	4811883a 	mov	r8,r9
 c00b168:	3023883a 	mov	r17,r6
 c00b16c:	3825883a 	mov	r18,r7
 c00b170:	0401ffc4 	movi	r16,2047
 c00b174:	003e8006 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b178:	4462b03a 	or	r17,r8,r17
 c00b17c:	8822c03a 	cmpne	r17,r17,zero
 c00b180:	0007883a 	mov	r3,zero
 c00b184:	003f8b06 	br	c00afb4 <__alt_data_end+0xfc00afb4>
 c00b188:	0141ffc4 	movi	r5,2047
 c00b18c:	11403b26 	beq	r2,r5,c00b27c <__adddf3+0x780>
 c00b190:	0109c83a 	sub	r4,zero,r4
 c00b194:	42002034 	orhi	r8,r8,128
 c00b198:	01400e04 	movi	r5,56
 c00b19c:	29006716 	blt	r5,r4,c00b33c <__adddf3+0x840>
 c00b1a0:	014007c4 	movi	r5,31
 c00b1a4:	29007016 	blt	r5,r4,c00b368 <__adddf3+0x86c>
 c00b1a8:	01400804 	movi	r5,32
 c00b1ac:	290bc83a 	sub	r5,r5,r4
 c00b1b0:	4154983a 	sll	r10,r8,r5
 c00b1b4:	890ed83a 	srl	r7,r17,r4
 c00b1b8:	894a983a 	sll	r5,r17,r5
 c00b1bc:	4108d83a 	srl	r4,r8,r4
 c00b1c0:	51e2b03a 	or	r17,r10,r7
 c00b1c4:	280ac03a 	cmpne	r5,r5,zero
 c00b1c8:	8962b03a 	or	r17,r17,r5
 c00b1cc:	89a3883a 	add	r17,r17,r6
 c00b1d0:	2253883a 	add	r9,r4,r9
 c00b1d4:	898d803a 	cmpltu	r6,r17,r6
 c00b1d8:	3251883a 	add	r8,r6,r9
 c00b1dc:	1021883a 	mov	r16,r2
 c00b1e0:	003ee506 	br	c00ad78 <__alt_data_end+0xfc00ad78>
 c00b1e4:	4984b03a 	or	r2,r9,r6
 c00b1e8:	103e6326 	beq	r2,zero,c00ab78 <__alt_data_end+0xfc00ab78>
 c00b1ec:	8987c83a 	sub	r3,r17,r6
 c00b1f0:	88c9803a 	cmpltu	r4,r17,r3
 c00b1f4:	4245c83a 	sub	r2,r8,r9
 c00b1f8:	1105c83a 	sub	r2,r2,r4
 c00b1fc:	1100202c 	andhi	r4,r2,128
 c00b200:	203ebb26 	beq	r4,zero,c00acf0 <__alt_data_end+0xfc00acf0>
 c00b204:	3463c83a 	sub	r17,r6,r17
 c00b208:	4a07c83a 	sub	r3,r9,r8
 c00b20c:	344d803a 	cmpltu	r6,r6,r17
 c00b210:	1991c83a 	sub	r8,r3,r6
 c00b214:	3825883a 	mov	r18,r7
 c00b218:	003e5706 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b21c:	4984b03a 	or	r2,r9,r6
 c00b220:	10002e26 	beq	r2,zero,c00b2dc <__adddf3+0x7e0>
 c00b224:	4004d0fa 	srli	r2,r8,3
 c00b228:	8822d0fa 	srli	r17,r17,3
 c00b22c:	4010977a 	slli	r8,r8,29
 c00b230:	10c0022c 	andhi	r3,r2,8
 c00b234:	4462b03a 	or	r17,r8,r17
 c00b238:	18000826 	beq	r3,zero,c00b25c <__adddf3+0x760>
 c00b23c:	4808d0fa 	srli	r4,r9,3
 c00b240:	20c0022c 	andhi	r3,r4,8
 c00b244:	1800051e 	bne	r3,zero,c00b25c <__adddf3+0x760>
 c00b248:	300cd0fa 	srli	r6,r6,3
 c00b24c:	4806977a 	slli	r3,r9,29
 c00b250:	2005883a 	mov	r2,r4
 c00b254:	3825883a 	mov	r18,r7
 c00b258:	19a2b03a 	or	r17,r3,r6
 c00b25c:	8810d77a 	srli	r8,r17,29
 c00b260:	100490fa 	slli	r2,r2,3
 c00b264:	882290fa 	slli	r17,r17,3
 c00b268:	0401ffc4 	movi	r16,2047
 c00b26c:	4090b03a 	or	r8,r8,r2
 c00b270:	003e4106 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b274:	0141ffc4 	movi	r5,2047
 c00b278:	117fc71e 	bne	r2,r5,c00b198 <__alt_data_end+0xfc00b198>
 c00b27c:	4811883a 	mov	r8,r9
 c00b280:	3023883a 	mov	r17,r6
 c00b284:	1021883a 	mov	r16,r2
 c00b288:	003e3b06 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b28c:	10002f26 	beq	r2,zero,c00b34c <__adddf3+0x850>
 c00b290:	4984b03a 	or	r2,r9,r6
 c00b294:	10001126 	beq	r2,zero,c00b2dc <__adddf3+0x7e0>
 c00b298:	4004d0fa 	srli	r2,r8,3
 c00b29c:	8822d0fa 	srli	r17,r17,3
 c00b2a0:	4010977a 	slli	r8,r8,29
 c00b2a4:	10c0022c 	andhi	r3,r2,8
 c00b2a8:	4462b03a 	or	r17,r8,r17
 c00b2ac:	183feb26 	beq	r3,zero,c00b25c <__alt_data_end+0xfc00b25c>
 c00b2b0:	4808d0fa 	srli	r4,r9,3
 c00b2b4:	20c0022c 	andhi	r3,r4,8
 c00b2b8:	183fe81e 	bne	r3,zero,c00b25c <__alt_data_end+0xfc00b25c>
 c00b2bc:	300cd0fa 	srli	r6,r6,3
 c00b2c0:	4806977a 	slli	r3,r9,29
 c00b2c4:	2005883a 	mov	r2,r4
 c00b2c8:	19a2b03a 	or	r17,r3,r6
 c00b2cc:	003fe306 	br	c00b25c <__alt_data_end+0xfc00b25c>
 c00b2d0:	0011883a 	mov	r8,zero
 c00b2d4:	0005883a 	mov	r2,zero
 c00b2d8:	003e3f06 	br	c00abd8 <__alt_data_end+0xfc00abd8>
 c00b2dc:	0401ffc4 	movi	r16,2047
 c00b2e0:	003e2506 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b2e4:	0013883a 	mov	r9,zero
 c00b2e8:	003f8406 	br	c00b0fc <__alt_data_end+0xfc00b0fc>
 c00b2ec:	0005883a 	mov	r2,zero
 c00b2f0:	0007883a 	mov	r3,zero
 c00b2f4:	003e8906 	br	c00ad1c <__alt_data_end+0xfc00ad1c>
 c00b2f8:	197ff804 	addi	r5,r3,-32
 c00b2fc:	01000804 	movi	r4,32
 c00b300:	414ad83a 	srl	r5,r8,r5
 c00b304:	19002426 	beq	r3,r4,c00b398 <__adddf3+0x89c>
 c00b308:	01001004 	movi	r4,64
 c00b30c:	20c7c83a 	sub	r3,r4,r3
 c00b310:	40c6983a 	sll	r3,r8,r3
 c00b314:	1c46b03a 	or	r3,r3,r17
 c00b318:	1806c03a 	cmpne	r3,r3,zero
 c00b31c:	28e2b03a 	or	r17,r5,r3
 c00b320:	0007883a 	mov	r3,zero
 c00b324:	003f2306 	br	c00afb4 <__alt_data_end+0xfc00afb4>
 c00b328:	0007883a 	mov	r3,zero
 c00b32c:	5811883a 	mov	r8,r11
 c00b330:	00bfffc4 	movi	r2,-1
 c00b334:	0401ffc4 	movi	r16,2047
 c00b338:	003e7806 	br	c00ad1c <__alt_data_end+0xfc00ad1c>
 c00b33c:	4462b03a 	or	r17,r8,r17
 c00b340:	8822c03a 	cmpne	r17,r17,zero
 c00b344:	0009883a 	mov	r4,zero
 c00b348:	003fa006 	br	c00b1cc <__alt_data_end+0xfc00b1cc>
 c00b34c:	4811883a 	mov	r8,r9
 c00b350:	3023883a 	mov	r17,r6
 c00b354:	0401ffc4 	movi	r16,2047
 c00b358:	003e0706 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b35c:	4811883a 	mov	r8,r9
 c00b360:	3023883a 	mov	r17,r6
 c00b364:	003e0406 	br	c00ab78 <__alt_data_end+0xfc00ab78>
 c00b368:	21fff804 	addi	r7,r4,-32
 c00b36c:	01400804 	movi	r5,32
 c00b370:	41ced83a 	srl	r7,r8,r7
 c00b374:	21400a26 	beq	r4,r5,c00b3a0 <__adddf3+0x8a4>
 c00b378:	01401004 	movi	r5,64
 c00b37c:	2909c83a 	sub	r4,r5,r4
 c00b380:	4108983a 	sll	r4,r8,r4
 c00b384:	2448b03a 	or	r4,r4,r17
 c00b388:	2008c03a 	cmpne	r4,r4,zero
 c00b38c:	3922b03a 	or	r17,r7,r4
 c00b390:	0009883a 	mov	r4,zero
 c00b394:	003f8d06 	br	c00b1cc <__alt_data_end+0xfc00b1cc>
 c00b398:	0007883a 	mov	r3,zero
 c00b39c:	003fdd06 	br	c00b314 <__alt_data_end+0xfc00b314>
 c00b3a0:	0009883a 	mov	r4,zero
 c00b3a4:	003ff706 	br	c00b384 <__alt_data_end+0xfc00b384>

0c00b3a8 <__divdf3>:
 c00b3a8:	defff004 	addi	sp,sp,-64
 c00b3ac:	dc800815 	stw	r18,32(sp)
 c00b3b0:	2824d53a 	srli	r18,r5,20
 c00b3b4:	dd800c15 	stw	r22,48(sp)
 c00b3b8:	282cd7fa 	srli	r22,r5,31
 c00b3bc:	dc000615 	stw	r16,24(sp)
 c00b3c0:	04000434 	movhi	r16,16
 c00b3c4:	843fffc4 	addi	r16,r16,-1
 c00b3c8:	dfc00f15 	stw	ra,60(sp)
 c00b3cc:	df000e15 	stw	fp,56(sp)
 c00b3d0:	ddc00d15 	stw	r23,52(sp)
 c00b3d4:	dd400b15 	stw	r21,44(sp)
 c00b3d8:	dd000a15 	stw	r20,40(sp)
 c00b3dc:	dcc00915 	stw	r19,36(sp)
 c00b3e0:	dc400715 	stw	r17,28(sp)
 c00b3e4:	9481ffcc 	andi	r18,r18,2047
 c00b3e8:	2c20703a 	and	r16,r5,r16
 c00b3ec:	b2003fcc 	andi	r8,r22,255
 c00b3f0:	90006126 	beq	r18,zero,c00b578 <__divdf3+0x1d0>
 c00b3f4:	0081ffc4 	movi	r2,2047
 c00b3f8:	202b883a 	mov	r21,r4
 c00b3fc:	90803726 	beq	r18,r2,c00b4dc <__divdf3+0x134>
 c00b400:	80800434 	orhi	r2,r16,16
 c00b404:	100490fa 	slli	r2,r2,3
 c00b408:	2020d77a 	srli	r16,r4,29
 c00b40c:	202a90fa 	slli	r21,r4,3
 c00b410:	94bf0044 	addi	r18,r18,-1023
 c00b414:	80a0b03a 	or	r16,r16,r2
 c00b418:	0013883a 	mov	r9,zero
 c00b41c:	000b883a 	mov	r5,zero
 c00b420:	3806d53a 	srli	r3,r7,20
 c00b424:	382ed7fa 	srli	r23,r7,31
 c00b428:	04400434 	movhi	r17,16
 c00b42c:	8c7fffc4 	addi	r17,r17,-1
 c00b430:	18c1ffcc 	andi	r3,r3,2047
 c00b434:	3029883a 	mov	r20,r6
 c00b438:	3c62703a 	and	r17,r7,r17
 c00b43c:	bf003fcc 	andi	fp,r23,255
 c00b440:	18006e26 	beq	r3,zero,c00b5fc <__divdf3+0x254>
 c00b444:	0081ffc4 	movi	r2,2047
 c00b448:	18806626 	beq	r3,r2,c00b5e4 <__divdf3+0x23c>
 c00b44c:	88800434 	orhi	r2,r17,16
 c00b450:	100490fa 	slli	r2,r2,3
 c00b454:	3022d77a 	srli	r17,r6,29
 c00b458:	302890fa 	slli	r20,r6,3
 c00b45c:	18ff0044 	addi	r3,r3,-1023
 c00b460:	88a2b03a 	or	r17,r17,r2
 c00b464:	000f883a 	mov	r7,zero
 c00b468:	b5e6f03a 	xor	r19,r22,r23
 c00b46c:	3a4cb03a 	or	r6,r7,r9
 c00b470:	008003c4 	movi	r2,15
 c00b474:	9809883a 	mov	r4,r19
 c00b478:	90c7c83a 	sub	r3,r18,r3
 c00b47c:	9cc03fcc 	andi	r19,r19,255
 c00b480:	11809636 	bltu	r2,r6,c00b6dc <__divdf3+0x334>
 c00b484:	300c90ba 	slli	r6,r6,2
 c00b488:	00830074 	movhi	r2,3073
 c00b48c:	10ad2704 	addi	r2,r2,-19300
 c00b490:	308d883a 	add	r6,r6,r2
 c00b494:	30800017 	ldw	r2,0(r6)
 c00b498:	1000683a 	jmp	r2
 c00b49c:	0c00b6dc 	xori	r16,at,731
 c00b4a0:	0c00b514 	ori	r16,at,724
 c00b4a4:	0c00b6cc 	andi	r16,at,731
 c00b4a8:	0c00b508 	cmpgei	r16,at,724
 c00b4ac:	0c00b6cc 	andi	r16,at,731
 c00b4b0:	0c00b6a0 	cmpeqi	r16,at,730
 c00b4b4:	0c00b6cc 	andi	r16,at,731
 c00b4b8:	0c00b508 	cmpgei	r16,at,724
 c00b4bc:	0c00b514 	ori	r16,at,724
 c00b4c0:	0c00b514 	ori	r16,at,724
 c00b4c4:	0c00b6a0 	cmpeqi	r16,at,730
 c00b4c8:	0c00b508 	cmpgei	r16,at,724
 c00b4cc:	0c00b4f8 	rdprs	r16,at,723
 c00b4d0:	0c00b4f8 	rdprs	r16,at,723
 c00b4d4:	0c00b4f8 	rdprs	r16,at,723
 c00b4d8:	0c00ba64 	muli	r16,at,745
 c00b4dc:	2404b03a 	or	r2,r4,r16
 c00b4e0:	10006c1e 	bne	r2,zero,c00b694 <__divdf3+0x2ec>
 c00b4e4:	02400204 	movi	r9,8
 c00b4e8:	0021883a 	mov	r16,zero
 c00b4ec:	002b883a 	mov	r21,zero
 c00b4f0:	01400084 	movi	r5,2
 c00b4f4:	003fca06 	br	c00b420 <__alt_data_end+0xfc00b420>
 c00b4f8:	8023883a 	mov	r17,r16
 c00b4fc:	a829883a 	mov	r20,r21
 c00b500:	4039883a 	mov	fp,r8
 c00b504:	280f883a 	mov	r7,r5
 c00b508:	00800084 	movi	r2,2
 c00b50c:	3881601e 	bne	r7,r2,c00ba90 <__divdf3+0x6e8>
 c00b510:	e027883a 	mov	r19,fp
 c00b514:	9900004c 	andi	r4,r19,1
 c00b518:	0081ffc4 	movi	r2,2047
 c00b51c:	0021883a 	mov	r16,zero
 c00b520:	002b883a 	mov	r21,zero
 c00b524:	1004953a 	slli	r2,r2,20
 c00b528:	20c03fcc 	andi	r3,r4,255
 c00b52c:	01400434 	movhi	r5,16
 c00b530:	297fffc4 	addi	r5,r5,-1
 c00b534:	180697fa 	slli	r3,r3,31
 c00b538:	8160703a 	and	r16,r16,r5
 c00b53c:	80a0b03a 	or	r16,r16,r2
 c00b540:	80c6b03a 	or	r3,r16,r3
 c00b544:	a805883a 	mov	r2,r21
 c00b548:	dfc00f17 	ldw	ra,60(sp)
 c00b54c:	df000e17 	ldw	fp,56(sp)
 c00b550:	ddc00d17 	ldw	r23,52(sp)
 c00b554:	dd800c17 	ldw	r22,48(sp)
 c00b558:	dd400b17 	ldw	r21,44(sp)
 c00b55c:	dd000a17 	ldw	r20,40(sp)
 c00b560:	dcc00917 	ldw	r19,36(sp)
 c00b564:	dc800817 	ldw	r18,32(sp)
 c00b568:	dc400717 	ldw	r17,28(sp)
 c00b56c:	dc000617 	ldw	r16,24(sp)
 c00b570:	dec01004 	addi	sp,sp,64
 c00b574:	f800283a 	ret
 c00b578:	2404b03a 	or	r2,r4,r16
 c00b57c:	2023883a 	mov	r17,r4
 c00b580:	10003f26 	beq	r2,zero,c00b680 <__divdf3+0x2d8>
 c00b584:	80015e26 	beq	r16,zero,c00bb00 <__divdf3+0x758>
 c00b588:	8009883a 	mov	r4,r16
 c00b58c:	d9800215 	stw	r6,8(sp)
 c00b590:	d9c00515 	stw	r7,20(sp)
 c00b594:	da000415 	stw	r8,16(sp)
 c00b598:	c00d33c0 	call	c00d33c <__clzsi2>
 c00b59c:	d9800217 	ldw	r6,8(sp)
 c00b5a0:	d9c00517 	ldw	r7,20(sp)
 c00b5a4:	da000417 	ldw	r8,16(sp)
 c00b5a8:	113ffd44 	addi	r4,r2,-11
 c00b5ac:	00c00704 	movi	r3,28
 c00b5b0:	19014f16 	blt	r3,r4,c00baf0 <__divdf3+0x748>
 c00b5b4:	00c00744 	movi	r3,29
 c00b5b8:	157ffe04 	addi	r21,r2,-8
 c00b5bc:	1907c83a 	sub	r3,r3,r4
 c00b5c0:	8560983a 	sll	r16,r16,r21
 c00b5c4:	88c6d83a 	srl	r3,r17,r3
 c00b5c8:	8d6a983a 	sll	r21,r17,r21
 c00b5cc:	1c20b03a 	or	r16,r3,r16
 c00b5d0:	1080fcc4 	addi	r2,r2,1011
 c00b5d4:	00a5c83a 	sub	r18,zero,r2
 c00b5d8:	0013883a 	mov	r9,zero
 c00b5dc:	000b883a 	mov	r5,zero
 c00b5e0:	003f8f06 	br	c00b420 <__alt_data_end+0xfc00b420>
 c00b5e4:	3444b03a 	or	r2,r6,r17
 c00b5e8:	1000231e 	bne	r2,zero,c00b678 <__divdf3+0x2d0>
 c00b5ec:	0023883a 	mov	r17,zero
 c00b5f0:	0029883a 	mov	r20,zero
 c00b5f4:	01c00084 	movi	r7,2
 c00b5f8:	003f9b06 	br	c00b468 <__alt_data_end+0xfc00b468>
 c00b5fc:	3444b03a 	or	r2,r6,r17
 c00b600:	10001926 	beq	r2,zero,c00b668 <__divdf3+0x2c0>
 c00b604:	88014b26 	beq	r17,zero,c00bb34 <__divdf3+0x78c>
 c00b608:	8809883a 	mov	r4,r17
 c00b60c:	d9400115 	stw	r5,4(sp)
 c00b610:	d9800215 	stw	r6,8(sp)
 c00b614:	da000415 	stw	r8,16(sp)
 c00b618:	da400315 	stw	r9,12(sp)
 c00b61c:	c00d33c0 	call	c00d33c <__clzsi2>
 c00b620:	d9400117 	ldw	r5,4(sp)
 c00b624:	d9800217 	ldw	r6,8(sp)
 c00b628:	da000417 	ldw	r8,16(sp)
 c00b62c:	da400317 	ldw	r9,12(sp)
 c00b630:	113ffd44 	addi	r4,r2,-11
 c00b634:	00c00704 	movi	r3,28
 c00b638:	19013a16 	blt	r3,r4,c00bb24 <__divdf3+0x77c>
 c00b63c:	00c00744 	movi	r3,29
 c00b640:	153ffe04 	addi	r20,r2,-8
 c00b644:	1907c83a 	sub	r3,r3,r4
 c00b648:	8d22983a 	sll	r17,r17,r20
 c00b64c:	30c6d83a 	srl	r3,r6,r3
 c00b650:	3528983a 	sll	r20,r6,r20
 c00b654:	1c62b03a 	or	r17,r3,r17
 c00b658:	1080fcc4 	addi	r2,r2,1011
 c00b65c:	0087c83a 	sub	r3,zero,r2
 c00b660:	000f883a 	mov	r7,zero
 c00b664:	003f8006 	br	c00b468 <__alt_data_end+0xfc00b468>
 c00b668:	0023883a 	mov	r17,zero
 c00b66c:	0029883a 	mov	r20,zero
 c00b670:	01c00044 	movi	r7,1
 c00b674:	003f7c06 	br	c00b468 <__alt_data_end+0xfc00b468>
 c00b678:	01c000c4 	movi	r7,3
 c00b67c:	003f7a06 	br	c00b468 <__alt_data_end+0xfc00b468>
 c00b680:	02400104 	movi	r9,4
 c00b684:	0021883a 	mov	r16,zero
 c00b688:	002b883a 	mov	r21,zero
 c00b68c:	01400044 	movi	r5,1
 c00b690:	003f6306 	br	c00b420 <__alt_data_end+0xfc00b420>
 c00b694:	02400304 	movi	r9,12
 c00b698:	014000c4 	movi	r5,3
 c00b69c:	003f6006 	br	c00b420 <__alt_data_end+0xfc00b420>
 c00b6a0:	04000434 	movhi	r16,16
 c00b6a4:	0009883a 	mov	r4,zero
 c00b6a8:	843fffc4 	addi	r16,r16,-1
 c00b6ac:	057fffc4 	movi	r21,-1
 c00b6b0:	0081ffc4 	movi	r2,2047
 c00b6b4:	003f9b06 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00b6b8:	00c00044 	movi	r3,1
 c00b6bc:	1887c83a 	sub	r3,r3,r2
 c00b6c0:	01000e04 	movi	r4,56
 c00b6c4:	20c1530e 	bge	r4,r3,c00bc14 <__divdf3+0x86c>
 c00b6c8:	9900004c 	andi	r4,r19,1
 c00b6cc:	0005883a 	mov	r2,zero
 c00b6d0:	0021883a 	mov	r16,zero
 c00b6d4:	002b883a 	mov	r21,zero
 c00b6d8:	003f9206 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00b6dc:	8c012e36 	bltu	r17,r16,c00bb98 <__divdf3+0x7f0>
 c00b6e0:	84412c26 	beq	r16,r17,c00bb94 <__divdf3+0x7ec>
 c00b6e4:	a82f883a 	mov	r23,r21
 c00b6e8:	18ffffc4 	addi	r3,r3,-1
 c00b6ec:	002b883a 	mov	r21,zero
 c00b6f0:	a004d63a 	srli	r2,r20,24
 c00b6f4:	8822923a 	slli	r17,r17,8
 c00b6f8:	a028923a 	slli	r20,r20,8
 c00b6fc:	8009883a 	mov	r4,r16
 c00b700:	88acb03a 	or	r22,r17,r2
 c00b704:	dd000015 	stw	r20,0(sp)
 c00b708:	b028d43a 	srli	r20,r22,16
 c00b70c:	d8c00215 	stw	r3,8(sp)
 c00b710:	b4bfffcc 	andi	r18,r22,65535
 c00b714:	a00b883a 	mov	r5,r20
 c00b718:	c00aa400 	call	c00aa40 <__udivsi3>
 c00b71c:	100b883a 	mov	r5,r2
 c00b720:	9009883a 	mov	r4,r18
 c00b724:	1023883a 	mov	r17,r2
 c00b728:	c0005340 	call	c000534 <__mulsi3>
 c00b72c:	8009883a 	mov	r4,r16
 c00b730:	a00b883a 	mov	r5,r20
 c00b734:	1039883a 	mov	fp,r2
 c00b738:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00b73c:	1004943a 	slli	r2,r2,16
 c00b740:	b808d43a 	srli	r4,r23,16
 c00b744:	d8c00217 	ldw	r3,8(sp)
 c00b748:	2084b03a 	or	r2,r4,r2
 c00b74c:	1700062e 	bgeu	r2,fp,c00b768 <__divdf3+0x3c0>
 c00b750:	1585883a 	add	r2,r2,r22
 c00b754:	893fffc4 	addi	r4,r17,-1
 c00b758:	15811d36 	bltu	r2,r22,c00bbd0 <__divdf3+0x828>
 c00b75c:	17011c2e 	bgeu	r2,fp,c00bbd0 <__divdf3+0x828>
 c00b760:	8c7fff84 	addi	r17,r17,-2
 c00b764:	1585883a 	add	r2,r2,r22
 c00b768:	1739c83a 	sub	fp,r2,fp
 c00b76c:	a00b883a 	mov	r5,r20
 c00b770:	e009883a 	mov	r4,fp
 c00b774:	d8c00215 	stw	r3,8(sp)
 c00b778:	c00aa400 	call	c00aa40 <__udivsi3>
 c00b77c:	100b883a 	mov	r5,r2
 c00b780:	9009883a 	mov	r4,r18
 c00b784:	1021883a 	mov	r16,r2
 c00b788:	c0005340 	call	c000534 <__mulsi3>
 c00b78c:	a00b883a 	mov	r5,r20
 c00b790:	e009883a 	mov	r4,fp
 c00b794:	d8800415 	stw	r2,16(sp)
 c00b798:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00b79c:	1004943a 	slli	r2,r2,16
 c00b7a0:	da000417 	ldw	r8,16(sp)
 c00b7a4:	bdffffcc 	andi	r23,r23,65535
 c00b7a8:	b884b03a 	or	r2,r23,r2
 c00b7ac:	d8c00217 	ldw	r3,8(sp)
 c00b7b0:	1200062e 	bgeu	r2,r8,c00b7cc <__divdf3+0x424>
 c00b7b4:	1585883a 	add	r2,r2,r22
 c00b7b8:	813fffc4 	addi	r4,r16,-1
 c00b7bc:	15810236 	bltu	r2,r22,c00bbc8 <__divdf3+0x820>
 c00b7c0:	1201012e 	bgeu	r2,r8,c00bbc8 <__divdf3+0x820>
 c00b7c4:	843fff84 	addi	r16,r16,-2
 c00b7c8:	1585883a 	add	r2,r2,r22
 c00b7cc:	8822943a 	slli	r17,r17,16
 c00b7d0:	d9800017 	ldw	r6,0(sp)
 c00b7d4:	1211c83a 	sub	r8,r2,r8
 c00b7d8:	8c22b03a 	or	r17,r17,r16
 c00b7dc:	373fffcc 	andi	fp,r6,65535
 c00b7e0:	8abfffcc 	andi	r10,r17,65535
 c00b7e4:	8820d43a 	srli	r16,r17,16
 c00b7e8:	5009883a 	mov	r4,r10
 c00b7ec:	e00b883a 	mov	r5,fp
 c00b7f0:	302ed43a 	srli	r23,r6,16
 c00b7f4:	d8c00215 	stw	r3,8(sp)
 c00b7f8:	da000415 	stw	r8,16(sp)
 c00b7fc:	da800115 	stw	r10,4(sp)
 c00b800:	c0005340 	call	c000534 <__mulsi3>
 c00b804:	800b883a 	mov	r5,r16
 c00b808:	e009883a 	mov	r4,fp
 c00b80c:	d8800515 	stw	r2,20(sp)
 c00b810:	c0005340 	call	c000534 <__mulsi3>
 c00b814:	8009883a 	mov	r4,r16
 c00b818:	b80b883a 	mov	r5,r23
 c00b81c:	d8800315 	stw	r2,12(sp)
 c00b820:	c0005340 	call	c000534 <__mulsi3>
 c00b824:	da800117 	ldw	r10,4(sp)
 c00b828:	b80b883a 	mov	r5,r23
 c00b82c:	1021883a 	mov	r16,r2
 c00b830:	5009883a 	mov	r4,r10
 c00b834:	c0005340 	call	c000534 <__mulsi3>
 c00b838:	d9c00517 	ldw	r7,20(sp)
 c00b83c:	da400317 	ldw	r9,12(sp)
 c00b840:	d8c00217 	ldw	r3,8(sp)
 c00b844:	3808d43a 	srli	r4,r7,16
 c00b848:	1245883a 	add	r2,r2,r9
 c00b84c:	da000417 	ldw	r8,16(sp)
 c00b850:	2085883a 	add	r2,r4,r2
 c00b854:	1240022e 	bgeu	r2,r9,c00b860 <__divdf3+0x4b8>
 c00b858:	01000074 	movhi	r4,1
 c00b85c:	8121883a 	add	r16,r16,r4
 c00b860:	1008d43a 	srli	r4,r2,16
 c00b864:	1004943a 	slli	r2,r2,16
 c00b868:	39ffffcc 	andi	r7,r7,65535
 c00b86c:	2409883a 	add	r4,r4,r16
 c00b870:	11c5883a 	add	r2,r2,r7
 c00b874:	4100bb36 	bltu	r8,r4,c00bb64 <__divdf3+0x7bc>
 c00b878:	4100d726 	beq	r8,r4,c00bbd8 <__divdf3+0x830>
 c00b87c:	4109c83a 	sub	r4,r8,r4
 c00b880:	a8a1c83a 	sub	r16,r21,r2
 c00b884:	ac2b803a 	cmpltu	r21,r21,r16
 c00b888:	256bc83a 	sub	r21,r4,r21
 c00b88c:	b540d926 	beq	r22,r21,c00bbf4 <__divdf3+0x84c>
 c00b890:	a00b883a 	mov	r5,r20
 c00b894:	a809883a 	mov	r4,r21
 c00b898:	d8c00215 	stw	r3,8(sp)
 c00b89c:	c00aa400 	call	c00aa40 <__udivsi3>
 c00b8a0:	100b883a 	mov	r5,r2
 c00b8a4:	9009883a 	mov	r4,r18
 c00b8a8:	d8800515 	stw	r2,20(sp)
 c00b8ac:	c0005340 	call	c000534 <__mulsi3>
 c00b8b0:	a809883a 	mov	r4,r21
 c00b8b4:	a00b883a 	mov	r5,r20
 c00b8b8:	d8800415 	stw	r2,16(sp)
 c00b8bc:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00b8c0:	1004943a 	slli	r2,r2,16
 c00b8c4:	8008d43a 	srli	r4,r16,16
 c00b8c8:	da000417 	ldw	r8,16(sp)
 c00b8cc:	d8c00217 	ldw	r3,8(sp)
 c00b8d0:	2084b03a 	or	r2,r4,r2
 c00b8d4:	d9c00517 	ldw	r7,20(sp)
 c00b8d8:	1200062e 	bgeu	r2,r8,c00b8f4 <__divdf3+0x54c>
 c00b8dc:	1585883a 	add	r2,r2,r22
 c00b8e0:	393fffc4 	addi	r4,r7,-1
 c00b8e4:	1580c536 	bltu	r2,r22,c00bbfc <__divdf3+0x854>
 c00b8e8:	1200c42e 	bgeu	r2,r8,c00bbfc <__divdf3+0x854>
 c00b8ec:	39ffff84 	addi	r7,r7,-2
 c00b8f0:	1585883a 	add	r2,r2,r22
 c00b8f4:	122bc83a 	sub	r21,r2,r8
 c00b8f8:	a00b883a 	mov	r5,r20
 c00b8fc:	a809883a 	mov	r4,r21
 c00b900:	d8c00215 	stw	r3,8(sp)
 c00b904:	d9c00515 	stw	r7,20(sp)
 c00b908:	c00aa400 	call	c00aa40 <__udivsi3>
 c00b90c:	9009883a 	mov	r4,r18
 c00b910:	100b883a 	mov	r5,r2
 c00b914:	d8800415 	stw	r2,16(sp)
 c00b918:	c0005340 	call	c000534 <__mulsi3>
 c00b91c:	a809883a 	mov	r4,r21
 c00b920:	a00b883a 	mov	r5,r20
 c00b924:	1025883a 	mov	r18,r2
 c00b928:	c00aaa40 	call	c00aaa4 <__umodsi3>
 c00b92c:	1004943a 	slli	r2,r2,16
 c00b930:	813fffcc 	andi	r4,r16,65535
 c00b934:	d8c00217 	ldw	r3,8(sp)
 c00b938:	20a0b03a 	or	r16,r4,r2
 c00b93c:	d9c00517 	ldw	r7,20(sp)
 c00b940:	da000417 	ldw	r8,16(sp)
 c00b944:	8480062e 	bgeu	r16,r18,c00b960 <__divdf3+0x5b8>
 c00b948:	85a1883a 	add	r16,r16,r22
 c00b94c:	40bfffc4 	addi	r2,r8,-1
 c00b950:	8580ac36 	bltu	r16,r22,c00bc04 <__divdf3+0x85c>
 c00b954:	8480ab2e 	bgeu	r16,r18,c00bc04 <__divdf3+0x85c>
 c00b958:	423fff84 	addi	r8,r8,-2
 c00b95c:	85a1883a 	add	r16,r16,r22
 c00b960:	3804943a 	slli	r2,r7,16
 c00b964:	84a1c83a 	sub	r16,r16,r18
 c00b968:	e009883a 	mov	r4,fp
 c00b96c:	1228b03a 	or	r20,r2,r8
 c00b970:	a1ffffcc 	andi	r7,r20,65535
 c00b974:	a024d43a 	srli	r18,r20,16
 c00b978:	380b883a 	mov	r5,r7
 c00b97c:	d8c00215 	stw	r3,8(sp)
 c00b980:	d9c00515 	stw	r7,20(sp)
 c00b984:	c0005340 	call	c000534 <__mulsi3>
 c00b988:	900b883a 	mov	r5,r18
 c00b98c:	e009883a 	mov	r4,fp
 c00b990:	102b883a 	mov	r21,r2
 c00b994:	c0005340 	call	c000534 <__mulsi3>
 c00b998:	900b883a 	mov	r5,r18
 c00b99c:	b809883a 	mov	r4,r23
 c00b9a0:	1039883a 	mov	fp,r2
 c00b9a4:	c0005340 	call	c000534 <__mulsi3>
 c00b9a8:	d9c00517 	ldw	r7,20(sp)
 c00b9ac:	b80b883a 	mov	r5,r23
 c00b9b0:	1025883a 	mov	r18,r2
 c00b9b4:	3809883a 	mov	r4,r7
 c00b9b8:	c0005340 	call	c000534 <__mulsi3>
 c00b9bc:	a808d43a 	srli	r4,r21,16
 c00b9c0:	1705883a 	add	r2,r2,fp
 c00b9c4:	d8c00217 	ldw	r3,8(sp)
 c00b9c8:	2085883a 	add	r2,r4,r2
 c00b9cc:	1700022e 	bgeu	r2,fp,c00b9d8 <__divdf3+0x630>
 c00b9d0:	01000074 	movhi	r4,1
 c00b9d4:	9125883a 	add	r18,r18,r4
 c00b9d8:	1008d43a 	srli	r4,r2,16
 c00b9dc:	1004943a 	slli	r2,r2,16
 c00b9e0:	ad7fffcc 	andi	r21,r21,65535
 c00b9e4:	2489883a 	add	r4,r4,r18
 c00b9e8:	1545883a 	add	r2,r2,r21
 c00b9ec:	81003836 	bltu	r16,r4,c00bad0 <__divdf3+0x728>
 c00b9f0:	81003626 	beq	r16,r4,c00bacc <__divdf3+0x724>
 c00b9f4:	a5000054 	ori	r20,r20,1
 c00b9f8:	1880ffc4 	addi	r2,r3,1023
 c00b9fc:	00bf2e0e 	bge	zero,r2,c00b6b8 <__alt_data_end+0xfc00b6b8>
 c00ba00:	a10001cc 	andi	r4,r20,7
 c00ba04:	20000726 	beq	r4,zero,c00ba24 <__divdf3+0x67c>
 c00ba08:	a10003cc 	andi	r4,r20,15
 c00ba0c:	01400104 	movi	r5,4
 c00ba10:	21400426 	beq	r4,r5,c00ba24 <__divdf3+0x67c>
 c00ba14:	a149883a 	add	r4,r20,r5
 c00ba18:	2529803a 	cmpltu	r20,r4,r20
 c00ba1c:	8d23883a 	add	r17,r17,r20
 c00ba20:	2029883a 	mov	r20,r4
 c00ba24:	8900402c 	andhi	r4,r17,256
 c00ba28:	20000426 	beq	r4,zero,c00ba3c <__divdf3+0x694>
 c00ba2c:	18810004 	addi	r2,r3,1024
 c00ba30:	00ffc034 	movhi	r3,65280
 c00ba34:	18ffffc4 	addi	r3,r3,-1
 c00ba38:	88e2703a 	and	r17,r17,r3
 c00ba3c:	00c1ff84 	movi	r3,2046
 c00ba40:	18beb416 	blt	r3,r2,c00b514 <__alt_data_end+0xfc00b514>
 c00ba44:	a028d0fa 	srli	r20,r20,3
 c00ba48:	882a977a 	slli	r21,r17,29
 c00ba4c:	8820927a 	slli	r16,r17,9
 c00ba50:	1081ffcc 	andi	r2,r2,2047
 c00ba54:	ad2ab03a 	or	r21,r21,r20
 c00ba58:	8020d33a 	srli	r16,r16,12
 c00ba5c:	9900004c 	andi	r4,r19,1
 c00ba60:	003eb006 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00ba64:	8080022c 	andhi	r2,r16,8
 c00ba68:	10001226 	beq	r2,zero,c00bab4 <__divdf3+0x70c>
 c00ba6c:	8880022c 	andhi	r2,r17,8
 c00ba70:	1000101e 	bne	r2,zero,c00bab4 <__divdf3+0x70c>
 c00ba74:	00800434 	movhi	r2,16
 c00ba78:	8c000234 	orhi	r16,r17,8
 c00ba7c:	10bfffc4 	addi	r2,r2,-1
 c00ba80:	b809883a 	mov	r4,r23
 c00ba84:	80a0703a 	and	r16,r16,r2
 c00ba88:	a02b883a 	mov	r21,r20
 c00ba8c:	003f0806 	br	c00b6b0 <__alt_data_end+0xfc00b6b0>
 c00ba90:	008000c4 	movi	r2,3
 c00ba94:	3880b126 	beq	r7,r2,c00bd5c <__divdf3+0x9b4>
 c00ba98:	00800044 	movi	r2,1
 c00ba9c:	38805b1e 	bne	r7,r2,c00bc0c <__divdf3+0x864>
 c00baa0:	e009883a 	mov	r4,fp
 c00baa4:	0005883a 	mov	r2,zero
 c00baa8:	0021883a 	mov	r16,zero
 c00baac:	002b883a 	mov	r21,zero
 c00bab0:	003e9c06 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00bab4:	00800434 	movhi	r2,16
 c00bab8:	84000234 	orhi	r16,r16,8
 c00babc:	10bfffc4 	addi	r2,r2,-1
 c00bac0:	b009883a 	mov	r4,r22
 c00bac4:	80a0703a 	and	r16,r16,r2
 c00bac8:	003ef906 	br	c00b6b0 <__alt_data_end+0xfc00b6b0>
 c00bacc:	103fca26 	beq	r2,zero,c00b9f8 <__alt_data_end+0xfc00b9f8>
 c00bad0:	b421883a 	add	r16,r22,r16
 c00bad4:	a17fffc4 	addi	r5,r20,-1
 c00bad8:	8580422e 	bgeu	r16,r22,c00bbe4 <__divdf3+0x83c>
 c00badc:	2829883a 	mov	r20,r5
 c00bae0:	813fc41e 	bne	r16,r4,c00b9f4 <__alt_data_end+0xfc00b9f4>
 c00bae4:	d9800017 	ldw	r6,0(sp)
 c00bae8:	30bfc21e 	bne	r6,r2,c00b9f4 <__alt_data_end+0xfc00b9f4>
 c00baec:	003fc206 	br	c00b9f8 <__alt_data_end+0xfc00b9f8>
 c00baf0:	143ff604 	addi	r16,r2,-40
 c00baf4:	8c20983a 	sll	r16,r17,r16
 c00baf8:	002b883a 	mov	r21,zero
 c00bafc:	003eb406 	br	c00b5d0 <__alt_data_end+0xfc00b5d0>
 c00bb00:	d9800215 	stw	r6,8(sp)
 c00bb04:	d9c00515 	stw	r7,20(sp)
 c00bb08:	da000415 	stw	r8,16(sp)
 c00bb0c:	c00d33c0 	call	c00d33c <__clzsi2>
 c00bb10:	10800804 	addi	r2,r2,32
 c00bb14:	da000417 	ldw	r8,16(sp)
 c00bb18:	d9c00517 	ldw	r7,20(sp)
 c00bb1c:	d9800217 	ldw	r6,8(sp)
 c00bb20:	003ea106 	br	c00b5a8 <__alt_data_end+0xfc00b5a8>
 c00bb24:	147ff604 	addi	r17,r2,-40
 c00bb28:	3462983a 	sll	r17,r6,r17
 c00bb2c:	0029883a 	mov	r20,zero
 c00bb30:	003ec906 	br	c00b658 <__alt_data_end+0xfc00b658>
 c00bb34:	3009883a 	mov	r4,r6
 c00bb38:	d9400115 	stw	r5,4(sp)
 c00bb3c:	d9800215 	stw	r6,8(sp)
 c00bb40:	da000415 	stw	r8,16(sp)
 c00bb44:	da400315 	stw	r9,12(sp)
 c00bb48:	c00d33c0 	call	c00d33c <__clzsi2>
 c00bb4c:	10800804 	addi	r2,r2,32
 c00bb50:	da400317 	ldw	r9,12(sp)
 c00bb54:	da000417 	ldw	r8,16(sp)
 c00bb58:	d9800217 	ldw	r6,8(sp)
 c00bb5c:	d9400117 	ldw	r5,4(sp)
 c00bb60:	003eb306 	br	c00b630 <__alt_data_end+0xfc00b630>
 c00bb64:	d9800017 	ldw	r6,0(sp)
 c00bb68:	a9ab883a 	add	r21,r21,r6
 c00bb6c:	a98b803a 	cmpltu	r5,r21,r6
 c00bb70:	2d8b883a 	add	r5,r5,r22
 c00bb74:	2a11883a 	add	r8,r5,r8
 c00bb78:	897fffc4 	addi	r5,r17,-1
 c00bb7c:	b2000c2e 	bgeu	r22,r8,c00bbb0 <__divdf3+0x808>
 c00bb80:	41003f36 	bltu	r8,r4,c00bc80 <__divdf3+0x8d8>
 c00bb84:	22006c26 	beq	r4,r8,c00bd38 <__divdf3+0x990>
 c00bb88:	4109c83a 	sub	r4,r8,r4
 c00bb8c:	2823883a 	mov	r17,r5
 c00bb90:	003f3b06 	br	c00b880 <__alt_data_end+0xfc00b880>
 c00bb94:	ad3ed336 	bltu	r21,r20,c00b6e4 <__alt_data_end+0xfc00b6e4>
 c00bb98:	a804d07a 	srli	r2,r21,1
 c00bb9c:	802e97fa 	slli	r23,r16,31
 c00bba0:	a82a97fa 	slli	r21,r21,31
 c00bba4:	8020d07a 	srli	r16,r16,1
 c00bba8:	b8aeb03a 	or	r23,r23,r2
 c00bbac:	003ed006 	br	c00b6f0 <__alt_data_end+0xfc00b6f0>
 c00bbb0:	b23ff51e 	bne	r22,r8,c00bb88 <__alt_data_end+0xfc00bb88>
 c00bbb4:	d9800017 	ldw	r6,0(sp)
 c00bbb8:	a9bff12e 	bgeu	r21,r6,c00bb80 <__alt_data_end+0xfc00bb80>
 c00bbbc:	b109c83a 	sub	r4,r22,r4
 c00bbc0:	2823883a 	mov	r17,r5
 c00bbc4:	003f2e06 	br	c00b880 <__alt_data_end+0xfc00b880>
 c00bbc8:	2021883a 	mov	r16,r4
 c00bbcc:	003eff06 	br	c00b7cc <__alt_data_end+0xfc00b7cc>
 c00bbd0:	2023883a 	mov	r17,r4
 c00bbd4:	003ee406 	br	c00b768 <__alt_data_end+0xfc00b768>
 c00bbd8:	a8bfe236 	bltu	r21,r2,c00bb64 <__alt_data_end+0xfc00bb64>
 c00bbdc:	0009883a 	mov	r4,zero
 c00bbe0:	003f2706 	br	c00b880 <__alt_data_end+0xfc00b880>
 c00bbe4:	81002d36 	bltu	r16,r4,c00bc9c <__divdf3+0x8f4>
 c00bbe8:	24005626 	beq	r4,r16,c00bd44 <__divdf3+0x99c>
 c00bbec:	2829883a 	mov	r20,r5
 c00bbf0:	003f8006 	br	c00b9f4 <__alt_data_end+0xfc00b9f4>
 c00bbf4:	053fffc4 	movi	r20,-1
 c00bbf8:	003f7f06 	br	c00b9f8 <__alt_data_end+0xfc00b9f8>
 c00bbfc:	200f883a 	mov	r7,r4
 c00bc00:	003f3c06 	br	c00b8f4 <__alt_data_end+0xfc00b8f4>
 c00bc04:	1011883a 	mov	r8,r2
 c00bc08:	003f5506 	br	c00b960 <__alt_data_end+0xfc00b960>
 c00bc0c:	e027883a 	mov	r19,fp
 c00bc10:	003f7906 	br	c00b9f8 <__alt_data_end+0xfc00b9f8>
 c00bc14:	010007c4 	movi	r4,31
 c00bc18:	20c02816 	blt	r4,r3,c00bcbc <__divdf3+0x914>
 c00bc1c:	00800804 	movi	r2,32
 c00bc20:	10c5c83a 	sub	r2,r2,r3
 c00bc24:	888a983a 	sll	r5,r17,r2
 c00bc28:	a0c8d83a 	srl	r4,r20,r3
 c00bc2c:	a084983a 	sll	r2,r20,r2
 c00bc30:	88e2d83a 	srl	r17,r17,r3
 c00bc34:	2906b03a 	or	r3,r5,r4
 c00bc38:	1004c03a 	cmpne	r2,r2,zero
 c00bc3c:	1886b03a 	or	r3,r3,r2
 c00bc40:	188001cc 	andi	r2,r3,7
 c00bc44:	10000726 	beq	r2,zero,c00bc64 <__divdf3+0x8bc>
 c00bc48:	188003cc 	andi	r2,r3,15
 c00bc4c:	01000104 	movi	r4,4
 c00bc50:	11000426 	beq	r2,r4,c00bc64 <__divdf3+0x8bc>
 c00bc54:	1805883a 	mov	r2,r3
 c00bc58:	10c00104 	addi	r3,r2,4
 c00bc5c:	1885803a 	cmpltu	r2,r3,r2
 c00bc60:	88a3883a 	add	r17,r17,r2
 c00bc64:	8880202c 	andhi	r2,r17,128
 c00bc68:	10002926 	beq	r2,zero,c00bd10 <__divdf3+0x968>
 c00bc6c:	9900004c 	andi	r4,r19,1
 c00bc70:	00800044 	movi	r2,1
 c00bc74:	0021883a 	mov	r16,zero
 c00bc78:	002b883a 	mov	r21,zero
 c00bc7c:	003e2906 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00bc80:	d9800017 	ldw	r6,0(sp)
 c00bc84:	8c7fff84 	addi	r17,r17,-2
 c00bc88:	a9ab883a 	add	r21,r21,r6
 c00bc8c:	a98b803a 	cmpltu	r5,r21,r6
 c00bc90:	2d8b883a 	add	r5,r5,r22
 c00bc94:	2a11883a 	add	r8,r5,r8
 c00bc98:	003ef806 	br	c00b87c <__alt_data_end+0xfc00b87c>
 c00bc9c:	d9800017 	ldw	r6,0(sp)
 c00bca0:	318f883a 	add	r7,r6,r6
 c00bca4:	398b803a 	cmpltu	r5,r7,r6
 c00bca8:	2d8d883a 	add	r6,r5,r22
 c00bcac:	81a1883a 	add	r16,r16,r6
 c00bcb0:	a17fff84 	addi	r5,r20,-2
 c00bcb4:	d9c00015 	stw	r7,0(sp)
 c00bcb8:	003f8806 	br	c00badc <__alt_data_end+0xfc00badc>
 c00bcbc:	013ff844 	movi	r4,-31
 c00bcc0:	2085c83a 	sub	r2,r4,r2
 c00bcc4:	8888d83a 	srl	r4,r17,r2
 c00bcc8:	00800804 	movi	r2,32
 c00bccc:	18802126 	beq	r3,r2,c00bd54 <__divdf3+0x9ac>
 c00bcd0:	04001004 	movi	r16,64
 c00bcd4:	80c7c83a 	sub	r3,r16,r3
 c00bcd8:	88e0983a 	sll	r16,r17,r3
 c00bcdc:	8504b03a 	or	r2,r16,r20
 c00bce0:	1004c03a 	cmpne	r2,r2,zero
 c00bce4:	2084b03a 	or	r2,r4,r2
 c00bce8:	144001cc 	andi	r17,r2,7
 c00bcec:	88000d1e 	bne	r17,zero,c00bd24 <__divdf3+0x97c>
 c00bcf0:	0021883a 	mov	r16,zero
 c00bcf4:	102ad0fa 	srli	r21,r2,3
 c00bcf8:	9900004c 	andi	r4,r19,1
 c00bcfc:	0005883a 	mov	r2,zero
 c00bd00:	ac6ab03a 	or	r21,r21,r17
 c00bd04:	003e0706 	br	c00b524 <__alt_data_end+0xfc00b524>
 c00bd08:	1007883a 	mov	r3,r2
 c00bd0c:	0023883a 	mov	r17,zero
 c00bd10:	8820927a 	slli	r16,r17,9
 c00bd14:	1805883a 	mov	r2,r3
 c00bd18:	8822977a 	slli	r17,r17,29
 c00bd1c:	8020d33a 	srli	r16,r16,12
 c00bd20:	003ff406 	br	c00bcf4 <__alt_data_end+0xfc00bcf4>
 c00bd24:	10c003cc 	andi	r3,r2,15
 c00bd28:	01000104 	movi	r4,4
 c00bd2c:	193ff626 	beq	r3,r4,c00bd08 <__alt_data_end+0xfc00bd08>
 c00bd30:	0023883a 	mov	r17,zero
 c00bd34:	003fc806 	br	c00bc58 <__alt_data_end+0xfc00bc58>
 c00bd38:	a8bfd136 	bltu	r21,r2,c00bc80 <__alt_data_end+0xfc00bc80>
 c00bd3c:	2823883a 	mov	r17,r5
 c00bd40:	003fa606 	br	c00bbdc <__alt_data_end+0xfc00bbdc>
 c00bd44:	d9800017 	ldw	r6,0(sp)
 c00bd48:	30bfd436 	bltu	r6,r2,c00bc9c <__alt_data_end+0xfc00bc9c>
 c00bd4c:	2829883a 	mov	r20,r5
 c00bd50:	003f6406 	br	c00bae4 <__alt_data_end+0xfc00bae4>
 c00bd54:	0021883a 	mov	r16,zero
 c00bd58:	003fe006 	br	c00bcdc <__alt_data_end+0xfc00bcdc>
 c00bd5c:	00800434 	movhi	r2,16
 c00bd60:	8c000234 	orhi	r16,r17,8
 c00bd64:	10bfffc4 	addi	r2,r2,-1
 c00bd68:	e009883a 	mov	r4,fp
 c00bd6c:	80a0703a 	and	r16,r16,r2
 c00bd70:	a02b883a 	mov	r21,r20
 c00bd74:	003e4e06 	br	c00b6b0 <__alt_data_end+0xfc00b6b0>

0c00bd78 <__eqdf2>:
 c00bd78:	2804d53a 	srli	r2,r5,20
 c00bd7c:	3806d53a 	srli	r3,r7,20
 c00bd80:	02000434 	movhi	r8,16
 c00bd84:	423fffc4 	addi	r8,r8,-1
 c00bd88:	1081ffcc 	andi	r2,r2,2047
 c00bd8c:	0281ffc4 	movi	r10,2047
 c00bd90:	2a12703a 	and	r9,r5,r8
 c00bd94:	18c1ffcc 	andi	r3,r3,2047
 c00bd98:	3a10703a 	and	r8,r7,r8
 c00bd9c:	280ad7fa 	srli	r5,r5,31
 c00bda0:	380ed7fa 	srli	r7,r7,31
 c00bda4:	12801026 	beq	r2,r10,c00bde8 <__eqdf2+0x70>
 c00bda8:	0281ffc4 	movi	r10,2047
 c00bdac:	1a800a26 	beq	r3,r10,c00bdd8 <__eqdf2+0x60>
 c00bdb0:	10c00226 	beq	r2,r3,c00bdbc <__eqdf2+0x44>
 c00bdb4:	00800044 	movi	r2,1
 c00bdb8:	f800283a 	ret
 c00bdbc:	4a3ffd1e 	bne	r9,r8,c00bdb4 <__alt_data_end+0xfc00bdb4>
 c00bdc0:	21bffc1e 	bne	r4,r6,c00bdb4 <__alt_data_end+0xfc00bdb4>
 c00bdc4:	29c00c26 	beq	r5,r7,c00bdf8 <__eqdf2+0x80>
 c00bdc8:	103ffa1e 	bne	r2,zero,c00bdb4 <__alt_data_end+0xfc00bdb4>
 c00bdcc:	2244b03a 	or	r2,r4,r9
 c00bdd0:	1004c03a 	cmpne	r2,r2,zero
 c00bdd4:	f800283a 	ret
 c00bdd8:	3214b03a 	or	r10,r6,r8
 c00bddc:	503ff426 	beq	r10,zero,c00bdb0 <__alt_data_end+0xfc00bdb0>
 c00bde0:	00800044 	movi	r2,1
 c00bde4:	f800283a 	ret
 c00bde8:	2254b03a 	or	r10,r4,r9
 c00bdec:	503fee26 	beq	r10,zero,c00bda8 <__alt_data_end+0xfc00bda8>
 c00bdf0:	00800044 	movi	r2,1
 c00bdf4:	f800283a 	ret
 c00bdf8:	0005883a 	mov	r2,zero
 c00bdfc:	f800283a 	ret

0c00be00 <__gedf2>:
 c00be00:	2804d53a 	srli	r2,r5,20
 c00be04:	3806d53a 	srli	r3,r7,20
 c00be08:	02000434 	movhi	r8,16
 c00be0c:	423fffc4 	addi	r8,r8,-1
 c00be10:	1081ffcc 	andi	r2,r2,2047
 c00be14:	0241ffc4 	movi	r9,2047
 c00be18:	2a14703a 	and	r10,r5,r8
 c00be1c:	18c1ffcc 	andi	r3,r3,2047
 c00be20:	3a10703a 	and	r8,r7,r8
 c00be24:	280ad7fa 	srli	r5,r5,31
 c00be28:	380ed7fa 	srli	r7,r7,31
 c00be2c:	12401d26 	beq	r2,r9,c00bea4 <__gedf2+0xa4>
 c00be30:	0241ffc4 	movi	r9,2047
 c00be34:	1a401226 	beq	r3,r9,c00be80 <__gedf2+0x80>
 c00be38:	1000081e 	bne	r2,zero,c00be5c <__gedf2+0x5c>
 c00be3c:	2296b03a 	or	r11,r4,r10
 c00be40:	5813003a 	cmpeq	r9,r11,zero
 c00be44:	1800091e 	bne	r3,zero,c00be6c <__gedf2+0x6c>
 c00be48:	3218b03a 	or	r12,r6,r8
 c00be4c:	6000071e 	bne	r12,zero,c00be6c <__gedf2+0x6c>
 c00be50:	0005883a 	mov	r2,zero
 c00be54:	5800101e 	bne	r11,zero,c00be98 <__gedf2+0x98>
 c00be58:	f800283a 	ret
 c00be5c:	18000c1e 	bne	r3,zero,c00be90 <__gedf2+0x90>
 c00be60:	3212b03a 	or	r9,r6,r8
 c00be64:	48000c26 	beq	r9,zero,c00be98 <__gedf2+0x98>
 c00be68:	0013883a 	mov	r9,zero
 c00be6c:	39c03fcc 	andi	r7,r7,255
 c00be70:	48000826 	beq	r9,zero,c00be94 <__gedf2+0x94>
 c00be74:	38000926 	beq	r7,zero,c00be9c <__gedf2+0x9c>
 c00be78:	00800044 	movi	r2,1
 c00be7c:	f800283a 	ret
 c00be80:	3212b03a 	or	r9,r6,r8
 c00be84:	483fec26 	beq	r9,zero,c00be38 <__alt_data_end+0xfc00be38>
 c00be88:	00bfff84 	movi	r2,-2
 c00be8c:	f800283a 	ret
 c00be90:	39c03fcc 	andi	r7,r7,255
 c00be94:	29c00626 	beq	r5,r7,c00beb0 <__gedf2+0xb0>
 c00be98:	283ff726 	beq	r5,zero,c00be78 <__alt_data_end+0xfc00be78>
 c00be9c:	00bfffc4 	movi	r2,-1
 c00bea0:	f800283a 	ret
 c00bea4:	2292b03a 	or	r9,r4,r10
 c00bea8:	483fe126 	beq	r9,zero,c00be30 <__alt_data_end+0xfc00be30>
 c00beac:	003ff606 	br	c00be88 <__alt_data_end+0xfc00be88>
 c00beb0:	18bff916 	blt	r3,r2,c00be98 <__alt_data_end+0xfc00be98>
 c00beb4:	10c00316 	blt	r2,r3,c00bec4 <__gedf2+0xc4>
 c00beb8:	42bff736 	bltu	r8,r10,c00be98 <__alt_data_end+0xfc00be98>
 c00bebc:	52000326 	beq	r10,r8,c00becc <__gedf2+0xcc>
 c00bec0:	5200042e 	bgeu	r10,r8,c00bed4 <__gedf2+0xd4>
 c00bec4:	283fec1e 	bne	r5,zero,c00be78 <__alt_data_end+0xfc00be78>
 c00bec8:	003ff406 	br	c00be9c <__alt_data_end+0xfc00be9c>
 c00becc:	313ff236 	bltu	r6,r4,c00be98 <__alt_data_end+0xfc00be98>
 c00bed0:	21bffc36 	bltu	r4,r6,c00bec4 <__alt_data_end+0xfc00bec4>
 c00bed4:	0005883a 	mov	r2,zero
 c00bed8:	f800283a 	ret

0c00bedc <__ledf2>:
 c00bedc:	2804d53a 	srli	r2,r5,20
 c00bee0:	3810d53a 	srli	r8,r7,20
 c00bee4:	00c00434 	movhi	r3,16
 c00bee8:	18ffffc4 	addi	r3,r3,-1
 c00beec:	1081ffcc 	andi	r2,r2,2047
 c00bef0:	0241ffc4 	movi	r9,2047
 c00bef4:	28d4703a 	and	r10,r5,r3
 c00bef8:	4201ffcc 	andi	r8,r8,2047
 c00befc:	38c6703a 	and	r3,r7,r3
 c00bf00:	280ad7fa 	srli	r5,r5,31
 c00bf04:	380ed7fa 	srli	r7,r7,31
 c00bf08:	12401f26 	beq	r2,r9,c00bf88 <__ledf2+0xac>
 c00bf0c:	0241ffc4 	movi	r9,2047
 c00bf10:	42401426 	beq	r8,r9,c00bf64 <__ledf2+0x88>
 c00bf14:	1000091e 	bne	r2,zero,c00bf3c <__ledf2+0x60>
 c00bf18:	2296b03a 	or	r11,r4,r10
 c00bf1c:	5813003a 	cmpeq	r9,r11,zero
 c00bf20:	29403fcc 	andi	r5,r5,255
 c00bf24:	40000a1e 	bne	r8,zero,c00bf50 <__ledf2+0x74>
 c00bf28:	30d8b03a 	or	r12,r6,r3
 c00bf2c:	6000081e 	bne	r12,zero,c00bf50 <__ledf2+0x74>
 c00bf30:	0005883a 	mov	r2,zero
 c00bf34:	5800111e 	bne	r11,zero,c00bf7c <__ledf2+0xa0>
 c00bf38:	f800283a 	ret
 c00bf3c:	29403fcc 	andi	r5,r5,255
 c00bf40:	40000c1e 	bne	r8,zero,c00bf74 <__ledf2+0x98>
 c00bf44:	30d2b03a 	or	r9,r6,r3
 c00bf48:	48000c26 	beq	r9,zero,c00bf7c <__ledf2+0xa0>
 c00bf4c:	0013883a 	mov	r9,zero
 c00bf50:	39c03fcc 	andi	r7,r7,255
 c00bf54:	48000826 	beq	r9,zero,c00bf78 <__ledf2+0x9c>
 c00bf58:	38001126 	beq	r7,zero,c00bfa0 <__ledf2+0xc4>
 c00bf5c:	00800044 	movi	r2,1
 c00bf60:	f800283a 	ret
 c00bf64:	30d2b03a 	or	r9,r6,r3
 c00bf68:	483fea26 	beq	r9,zero,c00bf14 <__alt_data_end+0xfc00bf14>
 c00bf6c:	00800084 	movi	r2,2
 c00bf70:	f800283a 	ret
 c00bf74:	39c03fcc 	andi	r7,r7,255
 c00bf78:	39400726 	beq	r7,r5,c00bf98 <__ledf2+0xbc>
 c00bf7c:	2800081e 	bne	r5,zero,c00bfa0 <__ledf2+0xc4>
 c00bf80:	00800044 	movi	r2,1
 c00bf84:	f800283a 	ret
 c00bf88:	2292b03a 	or	r9,r4,r10
 c00bf8c:	483fdf26 	beq	r9,zero,c00bf0c <__alt_data_end+0xfc00bf0c>
 c00bf90:	00800084 	movi	r2,2
 c00bf94:	f800283a 	ret
 c00bf98:	4080030e 	bge	r8,r2,c00bfa8 <__ledf2+0xcc>
 c00bf9c:	383fef26 	beq	r7,zero,c00bf5c <__alt_data_end+0xfc00bf5c>
 c00bfa0:	00bfffc4 	movi	r2,-1
 c00bfa4:	f800283a 	ret
 c00bfa8:	123feb16 	blt	r2,r8,c00bf58 <__alt_data_end+0xfc00bf58>
 c00bfac:	1abff336 	bltu	r3,r10,c00bf7c <__alt_data_end+0xfc00bf7c>
 c00bfb0:	50c00326 	beq	r10,r3,c00bfc0 <__ledf2+0xe4>
 c00bfb4:	50c0042e 	bgeu	r10,r3,c00bfc8 <__ledf2+0xec>
 c00bfb8:	283fe81e 	bne	r5,zero,c00bf5c <__alt_data_end+0xfc00bf5c>
 c00bfbc:	003ff806 	br	c00bfa0 <__alt_data_end+0xfc00bfa0>
 c00bfc0:	313fee36 	bltu	r6,r4,c00bf7c <__alt_data_end+0xfc00bf7c>
 c00bfc4:	21bffc36 	bltu	r4,r6,c00bfb8 <__alt_data_end+0xfc00bfb8>
 c00bfc8:	0005883a 	mov	r2,zero
 c00bfcc:	f800283a 	ret

0c00bfd0 <__muldf3>:
 c00bfd0:	deffee04 	addi	sp,sp,-72
 c00bfd4:	dd000c15 	stw	r20,48(sp)
 c00bfd8:	2828d53a 	srli	r20,r5,20
 c00bfdc:	ddc00f15 	stw	r23,60(sp)
 c00bfe0:	282ed7fa 	srli	r23,r5,31
 c00bfe4:	dc000815 	stw	r16,32(sp)
 c00bfe8:	04000434 	movhi	r16,16
 c00bfec:	dcc00b15 	stw	r19,44(sp)
 c00bff0:	843fffc4 	addi	r16,r16,-1
 c00bff4:	dfc01115 	stw	ra,68(sp)
 c00bff8:	df001015 	stw	fp,64(sp)
 c00bffc:	dd800e15 	stw	r22,56(sp)
 c00c000:	dd400d15 	stw	r21,52(sp)
 c00c004:	dc800a15 	stw	r18,40(sp)
 c00c008:	dc400915 	stw	r17,36(sp)
 c00c00c:	a501ffcc 	andi	r20,r20,2047
 c00c010:	2c20703a 	and	r16,r5,r16
 c00c014:	b827883a 	mov	r19,r23
 c00c018:	ba403fcc 	andi	r9,r23,255
 c00c01c:	a0006026 	beq	r20,zero,c00c1a0 <__muldf3+0x1d0>
 c00c020:	0081ffc4 	movi	r2,2047
 c00c024:	202d883a 	mov	r22,r4
 c00c028:	a0803626 	beq	r20,r2,c00c104 <__muldf3+0x134>
 c00c02c:	84000434 	orhi	r16,r16,16
 c00c030:	200ad77a 	srli	r5,r4,29
 c00c034:	800490fa 	slli	r2,r16,3
 c00c038:	202c90fa 	slli	r22,r4,3
 c00c03c:	a53f0044 	addi	r20,r20,-1023
 c00c040:	28a0b03a 	or	r16,r5,r2
 c00c044:	002b883a 	mov	r21,zero
 c00c048:	000b883a 	mov	r5,zero
 c00c04c:	3804d53a 	srli	r2,r7,20
 c00c050:	3838d7fa 	srli	fp,r7,31
 c00c054:	04400434 	movhi	r17,16
 c00c058:	8c7fffc4 	addi	r17,r17,-1
 c00c05c:	1081ffcc 	andi	r2,r2,2047
 c00c060:	3025883a 	mov	r18,r6
 c00c064:	3c62703a 	and	r17,r7,r17
 c00c068:	e2803fcc 	andi	r10,fp,255
 c00c06c:	10006d26 	beq	r2,zero,c00c224 <__muldf3+0x254>
 c00c070:	00c1ffc4 	movi	r3,2047
 c00c074:	10c06526 	beq	r2,r3,c00c20c <__muldf3+0x23c>
 c00c078:	8c400434 	orhi	r17,r17,16
 c00c07c:	300ed77a 	srli	r7,r6,29
 c00c080:	880690fa 	slli	r3,r17,3
 c00c084:	302490fa 	slli	r18,r6,3
 c00c088:	10bf0044 	addi	r2,r2,-1023
 c00c08c:	38e2b03a 	or	r17,r7,r3
 c00c090:	000f883a 	mov	r7,zero
 c00c094:	a087883a 	add	r3,r20,r2
 c00c098:	010003c4 	movi	r4,15
 c00c09c:	3d44b03a 	or	r2,r7,r21
 c00c0a0:	e5ccf03a 	xor	r6,fp,r23
 c00c0a4:	1a000044 	addi	r8,r3,1
 c00c0a8:	20809b36 	bltu	r4,r2,c00c318 <__muldf3+0x348>
 c00c0ac:	100490ba 	slli	r2,r2,2
 c00c0b0:	01030074 	movhi	r4,3073
 c00c0b4:	21303104 	addi	r4,r4,-16188
 c00c0b8:	1105883a 	add	r2,r2,r4
 c00c0bc:	10800017 	ldw	r2,0(r2)
 c00c0c0:	1000683a 	jmp	r2
 c00c0c4:	0c00c318 	cmpnei	r16,at,780
 c00c0c8:	0c00c124 	muli	r16,at,772
 c00c0cc:	0c00c124 	muli	r16,at,772
 c00c0d0:	0c00c120 	cmpeqi	r16,at,772
 c00c0d4:	0c00c2f4 	orhi	r16,at,779
 c00c0d8:	0c00c2f4 	orhi	r16,at,779
 c00c0dc:	0c00c2dc 	xori	r16,at,779
 c00c0e0:	0c00c120 	cmpeqi	r16,at,772
 c00c0e4:	0c00c2f4 	orhi	r16,at,779
 c00c0e8:	0c00c2dc 	xori	r16,at,779
 c00c0ec:	0c00c2f4 	orhi	r16,at,779
 c00c0f0:	0c00c120 	cmpeqi	r16,at,772
 c00c0f4:	0c00c304 	addi	r16,at,780
 c00c0f8:	0c00c304 	addi	r16,at,780
 c00c0fc:	0c00c304 	addi	r16,at,780
 c00c100:	0c00c664 	muli	r16,at,793
 c00c104:	2404b03a 	or	r2,r4,r16
 c00c108:	1000711e 	bne	r2,zero,c00c2d0 <__muldf3+0x300>
 c00c10c:	05400204 	movi	r21,8
 c00c110:	0021883a 	mov	r16,zero
 c00c114:	002d883a 	mov	r22,zero
 c00c118:	01400084 	movi	r5,2
 c00c11c:	003fcb06 	br	c00c04c <__alt_data_end+0xfc00c04c>
 c00c120:	500d883a 	mov	r6,r10
 c00c124:	00800084 	movi	r2,2
 c00c128:	38805926 	beq	r7,r2,c00c290 <__muldf3+0x2c0>
 c00c12c:	008000c4 	movi	r2,3
 c00c130:	3881bb26 	beq	r7,r2,c00c820 <__muldf3+0x850>
 c00c134:	00800044 	movi	r2,1
 c00c138:	3881961e 	bne	r7,r2,c00c794 <__muldf3+0x7c4>
 c00c13c:	3027883a 	mov	r19,r6
 c00c140:	0005883a 	mov	r2,zero
 c00c144:	0021883a 	mov	r16,zero
 c00c148:	002d883a 	mov	r22,zero
 c00c14c:	1004953a 	slli	r2,r2,20
 c00c150:	98c03fcc 	andi	r3,r19,255
 c00c154:	04400434 	movhi	r17,16
 c00c158:	8c7fffc4 	addi	r17,r17,-1
 c00c15c:	180697fa 	slli	r3,r3,31
 c00c160:	8460703a 	and	r16,r16,r17
 c00c164:	80a0b03a 	or	r16,r16,r2
 c00c168:	80c6b03a 	or	r3,r16,r3
 c00c16c:	b005883a 	mov	r2,r22
 c00c170:	dfc01117 	ldw	ra,68(sp)
 c00c174:	df001017 	ldw	fp,64(sp)
 c00c178:	ddc00f17 	ldw	r23,60(sp)
 c00c17c:	dd800e17 	ldw	r22,56(sp)
 c00c180:	dd400d17 	ldw	r21,52(sp)
 c00c184:	dd000c17 	ldw	r20,48(sp)
 c00c188:	dcc00b17 	ldw	r19,44(sp)
 c00c18c:	dc800a17 	ldw	r18,40(sp)
 c00c190:	dc400917 	ldw	r17,36(sp)
 c00c194:	dc000817 	ldw	r16,32(sp)
 c00c198:	dec01204 	addi	sp,sp,72
 c00c19c:	f800283a 	ret
 c00c1a0:	2404b03a 	or	r2,r4,r16
 c00c1a4:	202b883a 	mov	r21,r4
 c00c1a8:	10004426 	beq	r2,zero,c00c2bc <__muldf3+0x2ec>
 c00c1ac:	80015126 	beq	r16,zero,c00c6f4 <__muldf3+0x724>
 c00c1b0:	8009883a 	mov	r4,r16
 c00c1b4:	d9800715 	stw	r6,28(sp)
 c00c1b8:	d9c00215 	stw	r7,8(sp)
 c00c1bc:	da400415 	stw	r9,16(sp)
 c00c1c0:	c00d33c0 	call	c00d33c <__clzsi2>
 c00c1c4:	d9800717 	ldw	r6,28(sp)
 c00c1c8:	d9c00217 	ldw	r7,8(sp)
 c00c1cc:	da400417 	ldw	r9,16(sp)
 c00c1d0:	113ffd44 	addi	r4,r2,-11
 c00c1d4:	00c00704 	movi	r3,28
 c00c1d8:	19014216 	blt	r3,r4,c00c6e4 <__muldf3+0x714>
 c00c1dc:	00c00744 	movi	r3,29
 c00c1e0:	15bffe04 	addi	r22,r2,-8
 c00c1e4:	1907c83a 	sub	r3,r3,r4
 c00c1e8:	85a0983a 	sll	r16,r16,r22
 c00c1ec:	a8c6d83a 	srl	r3,r21,r3
 c00c1f0:	adac983a 	sll	r22,r21,r22
 c00c1f4:	1c20b03a 	or	r16,r3,r16
 c00c1f8:	1080fcc4 	addi	r2,r2,1011
 c00c1fc:	00a9c83a 	sub	r20,zero,r2
 c00c200:	002b883a 	mov	r21,zero
 c00c204:	000b883a 	mov	r5,zero
 c00c208:	003f9006 	br	c00c04c <__alt_data_end+0xfc00c04c>
 c00c20c:	3446b03a 	or	r3,r6,r17
 c00c210:	1800281e 	bne	r3,zero,c00c2b4 <__muldf3+0x2e4>
 c00c214:	0023883a 	mov	r17,zero
 c00c218:	0025883a 	mov	r18,zero
 c00c21c:	01c00084 	movi	r7,2
 c00c220:	003f9c06 	br	c00c094 <__alt_data_end+0xfc00c094>
 c00c224:	3446b03a 	or	r3,r6,r17
 c00c228:	18001e26 	beq	r3,zero,c00c2a4 <__muldf3+0x2d4>
 c00c22c:	88012126 	beq	r17,zero,c00c6b4 <__muldf3+0x6e4>
 c00c230:	8809883a 	mov	r4,r17
 c00c234:	d9400215 	stw	r5,8(sp)
 c00c238:	d9800715 	stw	r6,28(sp)
 c00c23c:	da400415 	stw	r9,16(sp)
 c00c240:	da800315 	stw	r10,12(sp)
 c00c244:	c00d33c0 	call	c00d33c <__clzsi2>
 c00c248:	d9400217 	ldw	r5,8(sp)
 c00c24c:	d9800717 	ldw	r6,28(sp)
 c00c250:	da400417 	ldw	r9,16(sp)
 c00c254:	da800317 	ldw	r10,12(sp)
 c00c258:	113ffd44 	addi	r4,r2,-11
 c00c25c:	00c00704 	movi	r3,28
 c00c260:	19011016 	blt	r3,r4,c00c6a4 <__muldf3+0x6d4>
 c00c264:	00c00744 	movi	r3,29
 c00c268:	14bffe04 	addi	r18,r2,-8
 c00c26c:	1907c83a 	sub	r3,r3,r4
 c00c270:	8ca2983a 	sll	r17,r17,r18
 c00c274:	30c6d83a 	srl	r3,r6,r3
 c00c278:	34a4983a 	sll	r18,r6,r18
 c00c27c:	1c62b03a 	or	r17,r3,r17
 c00c280:	1080fcc4 	addi	r2,r2,1011
 c00c284:	0085c83a 	sub	r2,zero,r2
 c00c288:	000f883a 	mov	r7,zero
 c00c28c:	003f8106 	br	c00c094 <__alt_data_end+0xfc00c094>
 c00c290:	3027883a 	mov	r19,r6
 c00c294:	0081ffc4 	movi	r2,2047
 c00c298:	0021883a 	mov	r16,zero
 c00c29c:	002d883a 	mov	r22,zero
 c00c2a0:	003faa06 	br	c00c14c <__alt_data_end+0xfc00c14c>
 c00c2a4:	0023883a 	mov	r17,zero
 c00c2a8:	0025883a 	mov	r18,zero
 c00c2ac:	01c00044 	movi	r7,1
 c00c2b0:	003f7806 	br	c00c094 <__alt_data_end+0xfc00c094>
 c00c2b4:	01c000c4 	movi	r7,3
 c00c2b8:	003f7606 	br	c00c094 <__alt_data_end+0xfc00c094>
 c00c2bc:	05400104 	movi	r21,4
 c00c2c0:	0021883a 	mov	r16,zero
 c00c2c4:	002d883a 	mov	r22,zero
 c00c2c8:	01400044 	movi	r5,1
 c00c2cc:	003f5f06 	br	c00c04c <__alt_data_end+0xfc00c04c>
 c00c2d0:	05400304 	movi	r21,12
 c00c2d4:	014000c4 	movi	r5,3
 c00c2d8:	003f5c06 	br	c00c04c <__alt_data_end+0xfc00c04c>
 c00c2dc:	04000434 	movhi	r16,16
 c00c2e0:	0027883a 	mov	r19,zero
 c00c2e4:	843fffc4 	addi	r16,r16,-1
 c00c2e8:	05bfffc4 	movi	r22,-1
 c00c2ec:	0081ffc4 	movi	r2,2047
 c00c2f0:	003f9606 	br	c00c14c <__alt_data_end+0xfc00c14c>
 c00c2f4:	8023883a 	mov	r17,r16
 c00c2f8:	b025883a 	mov	r18,r22
 c00c2fc:	280f883a 	mov	r7,r5
 c00c300:	003f8806 	br	c00c124 <__alt_data_end+0xfc00c124>
 c00c304:	8023883a 	mov	r17,r16
 c00c308:	b025883a 	mov	r18,r22
 c00c30c:	480d883a 	mov	r6,r9
 c00c310:	280f883a 	mov	r7,r5
 c00c314:	003f8306 	br	c00c124 <__alt_data_end+0xfc00c124>
 c00c318:	b026d43a 	srli	r19,r22,16
 c00c31c:	902ed43a 	srli	r23,r18,16
 c00c320:	b5bfffcc 	andi	r22,r22,65535
 c00c324:	94bfffcc 	andi	r18,r18,65535
 c00c328:	b00b883a 	mov	r5,r22
 c00c32c:	9009883a 	mov	r4,r18
 c00c330:	d8c00515 	stw	r3,20(sp)
 c00c334:	d9800715 	stw	r6,28(sp)
 c00c338:	da000615 	stw	r8,24(sp)
 c00c33c:	c0005340 	call	c000534 <__mulsi3>
 c00c340:	980b883a 	mov	r5,r19
 c00c344:	9009883a 	mov	r4,r18
 c00c348:	1029883a 	mov	r20,r2
 c00c34c:	c0005340 	call	c000534 <__mulsi3>
 c00c350:	b80b883a 	mov	r5,r23
 c00c354:	9809883a 	mov	r4,r19
 c00c358:	102b883a 	mov	r21,r2
 c00c35c:	c0005340 	call	c000534 <__mulsi3>
 c00c360:	b809883a 	mov	r4,r23
 c00c364:	b00b883a 	mov	r5,r22
 c00c368:	1039883a 	mov	fp,r2
 c00c36c:	c0005340 	call	c000534 <__mulsi3>
 c00c370:	a008d43a 	srli	r4,r20,16
 c00c374:	1545883a 	add	r2,r2,r21
 c00c378:	d8c00517 	ldw	r3,20(sp)
 c00c37c:	2085883a 	add	r2,r4,r2
 c00c380:	d9800717 	ldw	r6,28(sp)
 c00c384:	da000617 	ldw	r8,24(sp)
 c00c388:	1540022e 	bgeu	r2,r21,c00c394 <__muldf3+0x3c4>
 c00c38c:	01000074 	movhi	r4,1
 c00c390:	e139883a 	add	fp,fp,r4
 c00c394:	100e943a 	slli	r7,r2,16
 c00c398:	1004d43a 	srli	r2,r2,16
 c00c39c:	882ad43a 	srli	r21,r17,16
 c00c3a0:	a53fffcc 	andi	r20,r20,65535
 c00c3a4:	8c7fffcc 	andi	r17,r17,65535
 c00c3a8:	3d29883a 	add	r20,r7,r20
 c00c3ac:	b00b883a 	mov	r5,r22
 c00c3b0:	8809883a 	mov	r4,r17
 c00c3b4:	d8c00515 	stw	r3,20(sp)
 c00c3b8:	d9800715 	stw	r6,28(sp)
 c00c3bc:	da000615 	stw	r8,24(sp)
 c00c3c0:	dd000115 	stw	r20,4(sp)
 c00c3c4:	d8800015 	stw	r2,0(sp)
 c00c3c8:	c0005340 	call	c000534 <__mulsi3>
 c00c3cc:	980b883a 	mov	r5,r19
 c00c3d0:	8809883a 	mov	r4,r17
 c00c3d4:	d8800215 	stw	r2,8(sp)
 c00c3d8:	c0005340 	call	c000534 <__mulsi3>
 c00c3dc:	9809883a 	mov	r4,r19
 c00c3e0:	a80b883a 	mov	r5,r21
 c00c3e4:	1029883a 	mov	r20,r2
 c00c3e8:	c0005340 	call	c000534 <__mulsi3>
 c00c3ec:	b00b883a 	mov	r5,r22
 c00c3f0:	a809883a 	mov	r4,r21
 c00c3f4:	d8800415 	stw	r2,16(sp)
 c00c3f8:	c0005340 	call	c000534 <__mulsi3>
 c00c3fc:	d9c00217 	ldw	r7,8(sp)
 c00c400:	1505883a 	add	r2,r2,r20
 c00c404:	d8c00517 	ldw	r3,20(sp)
 c00c408:	3826d43a 	srli	r19,r7,16
 c00c40c:	d9800717 	ldw	r6,28(sp)
 c00c410:	da000617 	ldw	r8,24(sp)
 c00c414:	9885883a 	add	r2,r19,r2
 c00c418:	da400417 	ldw	r9,16(sp)
 c00c41c:	1500022e 	bgeu	r2,r20,c00c428 <__muldf3+0x458>
 c00c420:	01000074 	movhi	r4,1
 c00c424:	4913883a 	add	r9,r9,r4
 c00c428:	1028d43a 	srli	r20,r2,16
 c00c42c:	1004943a 	slli	r2,r2,16
 c00c430:	802cd43a 	srli	r22,r16,16
 c00c434:	843fffcc 	andi	r16,r16,65535
 c00c438:	3cffffcc 	andi	r19,r7,65535
 c00c43c:	9009883a 	mov	r4,r18
 c00c440:	800b883a 	mov	r5,r16
 c00c444:	a269883a 	add	r20,r20,r9
 c00c448:	d8c00515 	stw	r3,20(sp)
 c00c44c:	d9800715 	stw	r6,28(sp)
 c00c450:	da000615 	stw	r8,24(sp)
 c00c454:	14e7883a 	add	r19,r2,r19
 c00c458:	c0005340 	call	c000534 <__mulsi3>
 c00c45c:	9009883a 	mov	r4,r18
 c00c460:	b00b883a 	mov	r5,r22
 c00c464:	d8800315 	stw	r2,12(sp)
 c00c468:	c0005340 	call	c000534 <__mulsi3>
 c00c46c:	b809883a 	mov	r4,r23
 c00c470:	b00b883a 	mov	r5,r22
 c00c474:	d8800215 	stw	r2,8(sp)
 c00c478:	c0005340 	call	c000534 <__mulsi3>
 c00c47c:	b80b883a 	mov	r5,r23
 c00c480:	8009883a 	mov	r4,r16
 c00c484:	d8800415 	stw	r2,16(sp)
 c00c488:	c0005340 	call	c000534 <__mulsi3>
 c00c48c:	da800317 	ldw	r10,12(sp)
 c00c490:	d9c00217 	ldw	r7,8(sp)
 c00c494:	d9000017 	ldw	r4,0(sp)
 c00c498:	502ed43a 	srli	r23,r10,16
 c00c49c:	11c5883a 	add	r2,r2,r7
 c00c4a0:	24e5883a 	add	r18,r4,r19
 c00c4a4:	b885883a 	add	r2,r23,r2
 c00c4a8:	d8c00517 	ldw	r3,20(sp)
 c00c4ac:	d9800717 	ldw	r6,28(sp)
 c00c4b0:	da000617 	ldw	r8,24(sp)
 c00c4b4:	da400417 	ldw	r9,16(sp)
 c00c4b8:	11c0022e 	bgeu	r2,r7,c00c4c4 <__muldf3+0x4f4>
 c00c4bc:	01000074 	movhi	r4,1
 c00c4c0:	4913883a 	add	r9,r9,r4
 c00c4c4:	100ed43a 	srli	r7,r2,16
 c00c4c8:	1004943a 	slli	r2,r2,16
 c00c4cc:	55ffffcc 	andi	r23,r10,65535
 c00c4d0:	3a53883a 	add	r9,r7,r9
 c00c4d4:	8809883a 	mov	r4,r17
 c00c4d8:	800b883a 	mov	r5,r16
 c00c4dc:	d8c00515 	stw	r3,20(sp)
 c00c4e0:	d9800715 	stw	r6,28(sp)
 c00c4e4:	da000615 	stw	r8,24(sp)
 c00c4e8:	da400415 	stw	r9,16(sp)
 c00c4ec:	15ef883a 	add	r23,r2,r23
 c00c4f0:	c0005340 	call	c000534 <__mulsi3>
 c00c4f4:	8809883a 	mov	r4,r17
 c00c4f8:	b00b883a 	mov	r5,r22
 c00c4fc:	d8800215 	stw	r2,8(sp)
 c00c500:	c0005340 	call	c000534 <__mulsi3>
 c00c504:	b00b883a 	mov	r5,r22
 c00c508:	a809883a 	mov	r4,r21
 c00c50c:	d8800315 	stw	r2,12(sp)
 c00c510:	c0005340 	call	c000534 <__mulsi3>
 c00c514:	8009883a 	mov	r4,r16
 c00c518:	a80b883a 	mov	r5,r21
 c00c51c:	1023883a 	mov	r17,r2
 c00c520:	c0005340 	call	c000534 <__mulsi3>
 c00c524:	d9c00217 	ldw	r7,8(sp)
 c00c528:	da800317 	ldw	r10,12(sp)
 c00c52c:	d8c00517 	ldw	r3,20(sp)
 c00c530:	3808d43a 	srli	r4,r7,16
 c00c534:	1285883a 	add	r2,r2,r10
 c00c538:	d9800717 	ldw	r6,28(sp)
 c00c53c:	2085883a 	add	r2,r4,r2
 c00c540:	da000617 	ldw	r8,24(sp)
 c00c544:	da400417 	ldw	r9,16(sp)
 c00c548:	1280022e 	bgeu	r2,r10,c00c554 <__muldf3+0x584>
 c00c54c:	01000074 	movhi	r4,1
 c00c550:	8923883a 	add	r17,r17,r4
 c00c554:	1008943a 	slli	r4,r2,16
 c00c558:	39ffffcc 	andi	r7,r7,65535
 c00c55c:	e4b9883a 	add	fp,fp,r18
 c00c560:	21cf883a 	add	r7,r4,r7
 c00c564:	e4e7803a 	cmpltu	r19,fp,r19
 c00c568:	3d0f883a 	add	r7,r7,r20
 c00c56c:	bf39883a 	add	fp,r23,fp
 c00c570:	99c9883a 	add	r4,r19,r7
 c00c574:	e5ef803a 	cmpltu	r23,fp,r23
 c00c578:	490b883a 	add	r5,r9,r4
 c00c57c:	1004d43a 	srli	r2,r2,16
 c00c580:	b965883a 	add	r18,r23,r5
 c00c584:	24c9803a 	cmpltu	r4,r4,r19
 c00c588:	3d29803a 	cmpltu	r20,r7,r20
 c00c58c:	a128b03a 	or	r20,r20,r4
 c00c590:	95ef803a 	cmpltu	r23,r18,r23
 c00c594:	2a53803a 	cmpltu	r9,r5,r9
 c00c598:	a0a9883a 	add	r20,r20,r2
 c00c59c:	4deeb03a 	or	r23,r9,r23
 c00c5a0:	a5ef883a 	add	r23,r20,r23
 c00c5a4:	bc63883a 	add	r17,r23,r17
 c00c5a8:	e004927a 	slli	r2,fp,9
 c00c5ac:	d9000117 	ldw	r4,4(sp)
 c00c5b0:	882e927a 	slli	r23,r17,9
 c00c5b4:	9022d5fa 	srli	r17,r18,23
 c00c5b8:	e038d5fa 	srli	fp,fp,23
 c00c5bc:	1104b03a 	or	r2,r2,r4
 c00c5c0:	9024927a 	slli	r18,r18,9
 c00c5c4:	1004c03a 	cmpne	r2,r2,zero
 c00c5c8:	bc62b03a 	or	r17,r23,r17
 c00c5cc:	1738b03a 	or	fp,r2,fp
 c00c5d0:	8880402c 	andhi	r2,r17,256
 c00c5d4:	e4a4b03a 	or	r18,fp,r18
 c00c5d8:	10000726 	beq	r2,zero,c00c5f8 <__muldf3+0x628>
 c00c5dc:	9006d07a 	srli	r3,r18,1
 c00c5e0:	880497fa 	slli	r2,r17,31
 c00c5e4:	9480004c 	andi	r18,r18,1
 c00c5e8:	8822d07a 	srli	r17,r17,1
 c00c5ec:	1ca4b03a 	or	r18,r3,r18
 c00c5f0:	14a4b03a 	or	r18,r2,r18
 c00c5f4:	4007883a 	mov	r3,r8
 c00c5f8:	1880ffc4 	addi	r2,r3,1023
 c00c5fc:	0080460e 	bge	zero,r2,c00c718 <__muldf3+0x748>
 c00c600:	910001cc 	andi	r4,r18,7
 c00c604:	20000726 	beq	r4,zero,c00c624 <__muldf3+0x654>
 c00c608:	910003cc 	andi	r4,r18,15
 c00c60c:	01400104 	movi	r5,4
 c00c610:	21400426 	beq	r4,r5,c00c624 <__muldf3+0x654>
 c00c614:	9149883a 	add	r4,r18,r5
 c00c618:	24a5803a 	cmpltu	r18,r4,r18
 c00c61c:	8ca3883a 	add	r17,r17,r18
 c00c620:	2025883a 	mov	r18,r4
 c00c624:	8900402c 	andhi	r4,r17,256
 c00c628:	20000426 	beq	r4,zero,c00c63c <__muldf3+0x66c>
 c00c62c:	18810004 	addi	r2,r3,1024
 c00c630:	00ffc034 	movhi	r3,65280
 c00c634:	18ffffc4 	addi	r3,r3,-1
 c00c638:	88e2703a 	and	r17,r17,r3
 c00c63c:	00c1ff84 	movi	r3,2046
 c00c640:	18bf1316 	blt	r3,r2,c00c290 <__alt_data_end+0xfc00c290>
 c00c644:	882c977a 	slli	r22,r17,29
 c00c648:	9024d0fa 	srli	r18,r18,3
 c00c64c:	8822927a 	slli	r17,r17,9
 c00c650:	1081ffcc 	andi	r2,r2,2047
 c00c654:	b4acb03a 	or	r22,r22,r18
 c00c658:	8820d33a 	srli	r16,r17,12
 c00c65c:	3027883a 	mov	r19,r6
 c00c660:	003eba06 	br	c00c14c <__alt_data_end+0xfc00c14c>
 c00c664:	8080022c 	andhi	r2,r16,8
 c00c668:	10000926 	beq	r2,zero,c00c690 <__muldf3+0x6c0>
 c00c66c:	8880022c 	andhi	r2,r17,8
 c00c670:	1000071e 	bne	r2,zero,c00c690 <__muldf3+0x6c0>
 c00c674:	00800434 	movhi	r2,16
 c00c678:	8c000234 	orhi	r16,r17,8
 c00c67c:	10bfffc4 	addi	r2,r2,-1
 c00c680:	e027883a 	mov	r19,fp
 c00c684:	80a0703a 	and	r16,r16,r2
 c00c688:	902d883a 	mov	r22,r18
 c00c68c:	003f1706 	br	c00c2ec <__alt_data_end+0xfc00c2ec>
 c00c690:	00800434 	movhi	r2,16
 c00c694:	84000234 	orhi	r16,r16,8
 c00c698:	10bfffc4 	addi	r2,r2,-1
 c00c69c:	80a0703a 	and	r16,r16,r2
 c00c6a0:	003f1206 	br	c00c2ec <__alt_data_end+0xfc00c2ec>
 c00c6a4:	147ff604 	addi	r17,r2,-40
 c00c6a8:	3462983a 	sll	r17,r6,r17
 c00c6ac:	0025883a 	mov	r18,zero
 c00c6b0:	003ef306 	br	c00c280 <__alt_data_end+0xfc00c280>
 c00c6b4:	3009883a 	mov	r4,r6
 c00c6b8:	d9400215 	stw	r5,8(sp)
 c00c6bc:	d9800715 	stw	r6,28(sp)
 c00c6c0:	da400415 	stw	r9,16(sp)
 c00c6c4:	da800315 	stw	r10,12(sp)
 c00c6c8:	c00d33c0 	call	c00d33c <__clzsi2>
 c00c6cc:	10800804 	addi	r2,r2,32
 c00c6d0:	da800317 	ldw	r10,12(sp)
 c00c6d4:	da400417 	ldw	r9,16(sp)
 c00c6d8:	d9800717 	ldw	r6,28(sp)
 c00c6dc:	d9400217 	ldw	r5,8(sp)
 c00c6e0:	003edd06 	br	c00c258 <__alt_data_end+0xfc00c258>
 c00c6e4:	143ff604 	addi	r16,r2,-40
 c00c6e8:	ac20983a 	sll	r16,r21,r16
 c00c6ec:	002d883a 	mov	r22,zero
 c00c6f0:	003ec106 	br	c00c1f8 <__alt_data_end+0xfc00c1f8>
 c00c6f4:	d9800715 	stw	r6,28(sp)
 c00c6f8:	d9c00215 	stw	r7,8(sp)
 c00c6fc:	da400415 	stw	r9,16(sp)
 c00c700:	c00d33c0 	call	c00d33c <__clzsi2>
 c00c704:	10800804 	addi	r2,r2,32
 c00c708:	da400417 	ldw	r9,16(sp)
 c00c70c:	d9c00217 	ldw	r7,8(sp)
 c00c710:	d9800717 	ldw	r6,28(sp)
 c00c714:	003eae06 	br	c00c1d0 <__alt_data_end+0xfc00c1d0>
 c00c718:	00c00044 	movi	r3,1
 c00c71c:	1887c83a 	sub	r3,r3,r2
 c00c720:	01000e04 	movi	r4,56
 c00c724:	20fe8516 	blt	r4,r3,c00c13c <__alt_data_end+0xfc00c13c>
 c00c728:	010007c4 	movi	r4,31
 c00c72c:	20c01b16 	blt	r4,r3,c00c79c <__muldf3+0x7cc>
 c00c730:	00800804 	movi	r2,32
 c00c734:	10c5c83a 	sub	r2,r2,r3
 c00c738:	888a983a 	sll	r5,r17,r2
 c00c73c:	90c8d83a 	srl	r4,r18,r3
 c00c740:	9084983a 	sll	r2,r18,r2
 c00c744:	88e2d83a 	srl	r17,r17,r3
 c00c748:	2906b03a 	or	r3,r5,r4
 c00c74c:	1004c03a 	cmpne	r2,r2,zero
 c00c750:	1886b03a 	or	r3,r3,r2
 c00c754:	188001cc 	andi	r2,r3,7
 c00c758:	10000726 	beq	r2,zero,c00c778 <__muldf3+0x7a8>
 c00c75c:	188003cc 	andi	r2,r3,15
 c00c760:	01000104 	movi	r4,4
 c00c764:	11000426 	beq	r2,r4,c00c778 <__muldf3+0x7a8>
 c00c768:	1805883a 	mov	r2,r3
 c00c76c:	10c00104 	addi	r3,r2,4
 c00c770:	1885803a 	cmpltu	r2,r3,r2
 c00c774:	88a3883a 	add	r17,r17,r2
 c00c778:	8880202c 	andhi	r2,r17,128
 c00c77c:	10001c26 	beq	r2,zero,c00c7f0 <__muldf3+0x820>
 c00c780:	3027883a 	mov	r19,r6
 c00c784:	00800044 	movi	r2,1
 c00c788:	0021883a 	mov	r16,zero
 c00c78c:	002d883a 	mov	r22,zero
 c00c790:	003e6e06 	br	c00c14c <__alt_data_end+0xfc00c14c>
 c00c794:	4007883a 	mov	r3,r8
 c00c798:	003f9706 	br	c00c5f8 <__alt_data_end+0xfc00c5f8>
 c00c79c:	017ff844 	movi	r5,-31
 c00c7a0:	2885c83a 	sub	r2,r5,r2
 c00c7a4:	888ad83a 	srl	r5,r17,r2
 c00c7a8:	00800804 	movi	r2,32
 c00c7ac:	18801a26 	beq	r3,r2,c00c818 <__muldf3+0x848>
 c00c7b0:	01001004 	movi	r4,64
 c00c7b4:	20c7c83a 	sub	r3,r4,r3
 c00c7b8:	88e2983a 	sll	r17,r17,r3
 c00c7bc:	8ca4b03a 	or	r18,r17,r18
 c00c7c0:	9004c03a 	cmpne	r2,r18,zero
 c00c7c4:	2884b03a 	or	r2,r5,r2
 c00c7c8:	144001cc 	andi	r17,r2,7
 c00c7cc:	88000d1e 	bne	r17,zero,c00c804 <__muldf3+0x834>
 c00c7d0:	0021883a 	mov	r16,zero
 c00c7d4:	102cd0fa 	srli	r22,r2,3
 c00c7d8:	3027883a 	mov	r19,r6
 c00c7dc:	0005883a 	mov	r2,zero
 c00c7e0:	b46cb03a 	or	r22,r22,r17
 c00c7e4:	003e5906 	br	c00c14c <__alt_data_end+0xfc00c14c>
 c00c7e8:	1007883a 	mov	r3,r2
 c00c7ec:	0023883a 	mov	r17,zero
 c00c7f0:	8820927a 	slli	r16,r17,9
 c00c7f4:	1805883a 	mov	r2,r3
 c00c7f8:	8822977a 	slli	r17,r17,29
 c00c7fc:	8020d33a 	srli	r16,r16,12
 c00c800:	003ff406 	br	c00c7d4 <__alt_data_end+0xfc00c7d4>
 c00c804:	10c003cc 	andi	r3,r2,15
 c00c808:	01000104 	movi	r4,4
 c00c80c:	193ff626 	beq	r3,r4,c00c7e8 <__alt_data_end+0xfc00c7e8>
 c00c810:	0023883a 	mov	r17,zero
 c00c814:	003fd506 	br	c00c76c <__alt_data_end+0xfc00c76c>
 c00c818:	0023883a 	mov	r17,zero
 c00c81c:	003fe706 	br	c00c7bc <__alt_data_end+0xfc00c7bc>
 c00c820:	00800434 	movhi	r2,16
 c00c824:	8c000234 	orhi	r16,r17,8
 c00c828:	10bfffc4 	addi	r2,r2,-1
 c00c82c:	3027883a 	mov	r19,r6
 c00c830:	80a0703a 	and	r16,r16,r2
 c00c834:	902d883a 	mov	r22,r18
 c00c838:	003eac06 	br	c00c2ec <__alt_data_end+0xfc00c2ec>

0c00c83c <__subdf3>:
 c00c83c:	02000434 	movhi	r8,16
 c00c840:	423fffc4 	addi	r8,r8,-1
 c00c844:	defffb04 	addi	sp,sp,-20
 c00c848:	2a14703a 	and	r10,r5,r8
 c00c84c:	3812d53a 	srli	r9,r7,20
 c00c850:	3a10703a 	and	r8,r7,r8
 c00c854:	2006d77a 	srli	r3,r4,29
 c00c858:	3004d77a 	srli	r2,r6,29
 c00c85c:	dc000015 	stw	r16,0(sp)
 c00c860:	501490fa 	slli	r10,r10,3
 c00c864:	2820d53a 	srli	r16,r5,20
 c00c868:	401090fa 	slli	r8,r8,3
 c00c86c:	dc800215 	stw	r18,8(sp)
 c00c870:	dc400115 	stw	r17,4(sp)
 c00c874:	dfc00415 	stw	ra,16(sp)
 c00c878:	202290fa 	slli	r17,r4,3
 c00c87c:	dcc00315 	stw	r19,12(sp)
 c00c880:	4a41ffcc 	andi	r9,r9,2047
 c00c884:	0101ffc4 	movi	r4,2047
 c00c888:	2824d7fa 	srli	r18,r5,31
 c00c88c:	8401ffcc 	andi	r16,r16,2047
 c00c890:	50c6b03a 	or	r3,r10,r3
 c00c894:	380ed7fa 	srli	r7,r7,31
 c00c898:	408ab03a 	or	r5,r8,r2
 c00c89c:	300c90fa 	slli	r6,r6,3
 c00c8a0:	49009626 	beq	r9,r4,c00cafc <__subdf3+0x2c0>
 c00c8a4:	39c0005c 	xori	r7,r7,1
 c00c8a8:	8245c83a 	sub	r2,r16,r9
 c00c8ac:	3c807426 	beq	r7,r18,c00ca80 <__subdf3+0x244>
 c00c8b0:	0080af0e 	bge	zero,r2,c00cb70 <__subdf3+0x334>
 c00c8b4:	48002a1e 	bne	r9,zero,c00c960 <__subdf3+0x124>
 c00c8b8:	2988b03a 	or	r4,r5,r6
 c00c8bc:	20009a1e 	bne	r4,zero,c00cb28 <__subdf3+0x2ec>
 c00c8c0:	888001cc 	andi	r2,r17,7
 c00c8c4:	10000726 	beq	r2,zero,c00c8e4 <__subdf3+0xa8>
 c00c8c8:	888003cc 	andi	r2,r17,15
 c00c8cc:	01000104 	movi	r4,4
 c00c8d0:	11000426 	beq	r2,r4,c00c8e4 <__subdf3+0xa8>
 c00c8d4:	890b883a 	add	r5,r17,r4
 c00c8d8:	2c63803a 	cmpltu	r17,r5,r17
 c00c8dc:	1c47883a 	add	r3,r3,r17
 c00c8e0:	2823883a 	mov	r17,r5
 c00c8e4:	1880202c 	andhi	r2,r3,128
 c00c8e8:	10005926 	beq	r2,zero,c00ca50 <__subdf3+0x214>
 c00c8ec:	84000044 	addi	r16,r16,1
 c00c8f0:	0081ffc4 	movi	r2,2047
 c00c8f4:	8080be26 	beq	r16,r2,c00cbf0 <__subdf3+0x3b4>
 c00c8f8:	017fe034 	movhi	r5,65408
 c00c8fc:	297fffc4 	addi	r5,r5,-1
 c00c900:	1946703a 	and	r3,r3,r5
 c00c904:	1804977a 	slli	r2,r3,29
 c00c908:	1806927a 	slli	r3,r3,9
 c00c90c:	8822d0fa 	srli	r17,r17,3
 c00c910:	8401ffcc 	andi	r16,r16,2047
 c00c914:	180ad33a 	srli	r5,r3,12
 c00c918:	9100004c 	andi	r4,r18,1
 c00c91c:	1444b03a 	or	r2,r2,r17
 c00c920:	80c1ffcc 	andi	r3,r16,2047
 c00c924:	1820953a 	slli	r16,r3,20
 c00c928:	20c03fcc 	andi	r3,r4,255
 c00c92c:	180897fa 	slli	r4,r3,31
 c00c930:	00c00434 	movhi	r3,16
 c00c934:	18ffffc4 	addi	r3,r3,-1
 c00c938:	28c6703a 	and	r3,r5,r3
 c00c93c:	1c06b03a 	or	r3,r3,r16
 c00c940:	1906b03a 	or	r3,r3,r4
 c00c944:	dfc00417 	ldw	ra,16(sp)
 c00c948:	dcc00317 	ldw	r19,12(sp)
 c00c94c:	dc800217 	ldw	r18,8(sp)
 c00c950:	dc400117 	ldw	r17,4(sp)
 c00c954:	dc000017 	ldw	r16,0(sp)
 c00c958:	dec00504 	addi	sp,sp,20
 c00c95c:	f800283a 	ret
 c00c960:	0101ffc4 	movi	r4,2047
 c00c964:	813fd626 	beq	r16,r4,c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00c968:	29402034 	orhi	r5,r5,128
 c00c96c:	01000e04 	movi	r4,56
 c00c970:	2080a316 	blt	r4,r2,c00cc00 <__subdf3+0x3c4>
 c00c974:	010007c4 	movi	r4,31
 c00c978:	2080c616 	blt	r4,r2,c00cc94 <__subdf3+0x458>
 c00c97c:	01000804 	movi	r4,32
 c00c980:	2089c83a 	sub	r4,r4,r2
 c00c984:	2910983a 	sll	r8,r5,r4
 c00c988:	308ed83a 	srl	r7,r6,r2
 c00c98c:	3108983a 	sll	r4,r6,r4
 c00c990:	2884d83a 	srl	r2,r5,r2
 c00c994:	41ccb03a 	or	r6,r8,r7
 c00c998:	2008c03a 	cmpne	r4,r4,zero
 c00c99c:	310cb03a 	or	r6,r6,r4
 c00c9a0:	898dc83a 	sub	r6,r17,r6
 c00c9a4:	89a3803a 	cmpltu	r17,r17,r6
 c00c9a8:	1887c83a 	sub	r3,r3,r2
 c00c9ac:	1c47c83a 	sub	r3,r3,r17
 c00c9b0:	3023883a 	mov	r17,r6
 c00c9b4:	1880202c 	andhi	r2,r3,128
 c00c9b8:	10002326 	beq	r2,zero,c00ca48 <__subdf3+0x20c>
 c00c9bc:	04c02034 	movhi	r19,128
 c00c9c0:	9cffffc4 	addi	r19,r19,-1
 c00c9c4:	1ce6703a 	and	r19,r3,r19
 c00c9c8:	98007a26 	beq	r19,zero,c00cbb4 <__subdf3+0x378>
 c00c9cc:	9809883a 	mov	r4,r19
 c00c9d0:	c00d33c0 	call	c00d33c <__clzsi2>
 c00c9d4:	113ffe04 	addi	r4,r2,-8
 c00c9d8:	00c007c4 	movi	r3,31
 c00c9dc:	19007b16 	blt	r3,r4,c00cbcc <__subdf3+0x390>
 c00c9e0:	00800804 	movi	r2,32
 c00c9e4:	1105c83a 	sub	r2,r2,r4
 c00c9e8:	8884d83a 	srl	r2,r17,r2
 c00c9ec:	9906983a 	sll	r3,r19,r4
 c00c9f0:	8922983a 	sll	r17,r17,r4
 c00c9f4:	10c4b03a 	or	r2,r2,r3
 c00c9f8:	24007816 	blt	r4,r16,c00cbdc <__subdf3+0x3a0>
 c00c9fc:	2421c83a 	sub	r16,r4,r16
 c00ca00:	80c00044 	addi	r3,r16,1
 c00ca04:	010007c4 	movi	r4,31
 c00ca08:	20c09516 	blt	r4,r3,c00cc60 <__subdf3+0x424>
 c00ca0c:	01400804 	movi	r5,32
 c00ca10:	28cbc83a 	sub	r5,r5,r3
 c00ca14:	88c8d83a 	srl	r4,r17,r3
 c00ca18:	8962983a 	sll	r17,r17,r5
 c00ca1c:	114a983a 	sll	r5,r2,r5
 c00ca20:	10c6d83a 	srl	r3,r2,r3
 c00ca24:	8804c03a 	cmpne	r2,r17,zero
 c00ca28:	290ab03a 	or	r5,r5,r4
 c00ca2c:	28a2b03a 	or	r17,r5,r2
 c00ca30:	0021883a 	mov	r16,zero
 c00ca34:	003fa206 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00ca38:	2090b03a 	or	r8,r4,r2
 c00ca3c:	40018e26 	beq	r8,zero,c00d078 <__subdf3+0x83c>
 c00ca40:	1007883a 	mov	r3,r2
 c00ca44:	2023883a 	mov	r17,r4
 c00ca48:	888001cc 	andi	r2,r17,7
 c00ca4c:	103f9e1e 	bne	r2,zero,c00c8c8 <__alt_data_end+0xfc00c8c8>
 c00ca50:	1804977a 	slli	r2,r3,29
 c00ca54:	8822d0fa 	srli	r17,r17,3
 c00ca58:	1810d0fa 	srli	r8,r3,3
 c00ca5c:	9100004c 	andi	r4,r18,1
 c00ca60:	1444b03a 	or	r2,r2,r17
 c00ca64:	00c1ffc4 	movi	r3,2047
 c00ca68:	80c02826 	beq	r16,r3,c00cb0c <__subdf3+0x2d0>
 c00ca6c:	01400434 	movhi	r5,16
 c00ca70:	297fffc4 	addi	r5,r5,-1
 c00ca74:	80e0703a 	and	r16,r16,r3
 c00ca78:	414a703a 	and	r5,r8,r5
 c00ca7c:	003fa806 	br	c00c920 <__alt_data_end+0xfc00c920>
 c00ca80:	0080630e 	bge	zero,r2,c00cc10 <__subdf3+0x3d4>
 c00ca84:	48003026 	beq	r9,zero,c00cb48 <__subdf3+0x30c>
 c00ca88:	0101ffc4 	movi	r4,2047
 c00ca8c:	813f8c26 	beq	r16,r4,c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00ca90:	29402034 	orhi	r5,r5,128
 c00ca94:	01000e04 	movi	r4,56
 c00ca98:	2080a90e 	bge	r4,r2,c00cd40 <__subdf3+0x504>
 c00ca9c:	298cb03a 	or	r6,r5,r6
 c00caa0:	3012c03a 	cmpne	r9,r6,zero
 c00caa4:	0005883a 	mov	r2,zero
 c00caa8:	4c53883a 	add	r9,r9,r17
 c00caac:	4c63803a 	cmpltu	r17,r9,r17
 c00cab0:	10c7883a 	add	r3,r2,r3
 c00cab4:	88c7883a 	add	r3,r17,r3
 c00cab8:	4823883a 	mov	r17,r9
 c00cabc:	1880202c 	andhi	r2,r3,128
 c00cac0:	1000d026 	beq	r2,zero,c00ce04 <__subdf3+0x5c8>
 c00cac4:	84000044 	addi	r16,r16,1
 c00cac8:	0081ffc4 	movi	r2,2047
 c00cacc:	8080fe26 	beq	r16,r2,c00cec8 <__subdf3+0x68c>
 c00cad0:	00bfe034 	movhi	r2,65408
 c00cad4:	10bfffc4 	addi	r2,r2,-1
 c00cad8:	1886703a 	and	r3,r3,r2
 c00cadc:	880ad07a 	srli	r5,r17,1
 c00cae0:	180497fa 	slli	r2,r3,31
 c00cae4:	8900004c 	andi	r4,r17,1
 c00cae8:	2922b03a 	or	r17,r5,r4
 c00caec:	1806d07a 	srli	r3,r3,1
 c00caf0:	1462b03a 	or	r17,r2,r17
 c00caf4:	3825883a 	mov	r18,r7
 c00caf8:	003f7106 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cafc:	2984b03a 	or	r2,r5,r6
 c00cb00:	103f6826 	beq	r2,zero,c00c8a4 <__alt_data_end+0xfc00c8a4>
 c00cb04:	39c03fcc 	andi	r7,r7,255
 c00cb08:	003f6706 	br	c00c8a8 <__alt_data_end+0xfc00c8a8>
 c00cb0c:	4086b03a 	or	r3,r8,r2
 c00cb10:	18015226 	beq	r3,zero,c00d05c <__subdf3+0x820>
 c00cb14:	00c00434 	movhi	r3,16
 c00cb18:	41400234 	orhi	r5,r8,8
 c00cb1c:	18ffffc4 	addi	r3,r3,-1
 c00cb20:	28ca703a 	and	r5,r5,r3
 c00cb24:	003f7e06 	br	c00c920 <__alt_data_end+0xfc00c920>
 c00cb28:	10bfffc4 	addi	r2,r2,-1
 c00cb2c:	1000491e 	bne	r2,zero,c00cc54 <__subdf3+0x418>
 c00cb30:	898fc83a 	sub	r7,r17,r6
 c00cb34:	89e3803a 	cmpltu	r17,r17,r7
 c00cb38:	1947c83a 	sub	r3,r3,r5
 c00cb3c:	1c47c83a 	sub	r3,r3,r17
 c00cb40:	3823883a 	mov	r17,r7
 c00cb44:	003f9b06 	br	c00c9b4 <__alt_data_end+0xfc00c9b4>
 c00cb48:	2988b03a 	or	r4,r5,r6
 c00cb4c:	203f5c26 	beq	r4,zero,c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cb50:	10bfffc4 	addi	r2,r2,-1
 c00cb54:	1000931e 	bne	r2,zero,c00cda4 <__subdf3+0x568>
 c00cb58:	898d883a 	add	r6,r17,r6
 c00cb5c:	3463803a 	cmpltu	r17,r6,r17
 c00cb60:	1947883a 	add	r3,r3,r5
 c00cb64:	88c7883a 	add	r3,r17,r3
 c00cb68:	3023883a 	mov	r17,r6
 c00cb6c:	003fd306 	br	c00cabc <__alt_data_end+0xfc00cabc>
 c00cb70:	1000541e 	bne	r2,zero,c00ccc4 <__subdf3+0x488>
 c00cb74:	80800044 	addi	r2,r16,1
 c00cb78:	1081ffcc 	andi	r2,r2,2047
 c00cb7c:	01000044 	movi	r4,1
 c00cb80:	2080a20e 	bge	r4,r2,c00ce0c <__subdf3+0x5d0>
 c00cb84:	8989c83a 	sub	r4,r17,r6
 c00cb88:	8905803a 	cmpltu	r2,r17,r4
 c00cb8c:	1967c83a 	sub	r19,r3,r5
 c00cb90:	98a7c83a 	sub	r19,r19,r2
 c00cb94:	9880202c 	andhi	r2,r19,128
 c00cb98:	10006326 	beq	r2,zero,c00cd28 <__subdf3+0x4ec>
 c00cb9c:	3463c83a 	sub	r17,r6,r17
 c00cba0:	28c7c83a 	sub	r3,r5,r3
 c00cba4:	344d803a 	cmpltu	r6,r6,r17
 c00cba8:	19a7c83a 	sub	r19,r3,r6
 c00cbac:	3825883a 	mov	r18,r7
 c00cbb0:	983f861e 	bne	r19,zero,c00c9cc <__alt_data_end+0xfc00c9cc>
 c00cbb4:	8809883a 	mov	r4,r17
 c00cbb8:	c00d33c0 	call	c00d33c <__clzsi2>
 c00cbbc:	10800804 	addi	r2,r2,32
 c00cbc0:	113ffe04 	addi	r4,r2,-8
 c00cbc4:	00c007c4 	movi	r3,31
 c00cbc8:	193f850e 	bge	r3,r4,c00c9e0 <__alt_data_end+0xfc00c9e0>
 c00cbcc:	10bff604 	addi	r2,r2,-40
 c00cbd0:	8884983a 	sll	r2,r17,r2
 c00cbd4:	0023883a 	mov	r17,zero
 c00cbd8:	243f880e 	bge	r4,r16,c00c9fc <__alt_data_end+0xfc00c9fc>
 c00cbdc:	00ffe034 	movhi	r3,65408
 c00cbe0:	18ffffc4 	addi	r3,r3,-1
 c00cbe4:	8121c83a 	sub	r16,r16,r4
 c00cbe8:	10c6703a 	and	r3,r2,r3
 c00cbec:	003f3406 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cbf0:	9100004c 	andi	r4,r18,1
 c00cbf4:	000b883a 	mov	r5,zero
 c00cbf8:	0005883a 	mov	r2,zero
 c00cbfc:	003f4806 	br	c00c920 <__alt_data_end+0xfc00c920>
 c00cc00:	298cb03a 	or	r6,r5,r6
 c00cc04:	300cc03a 	cmpne	r6,r6,zero
 c00cc08:	0005883a 	mov	r2,zero
 c00cc0c:	003f6406 	br	c00c9a0 <__alt_data_end+0xfc00c9a0>
 c00cc10:	10009a1e 	bne	r2,zero,c00ce7c <__subdf3+0x640>
 c00cc14:	82400044 	addi	r9,r16,1
 c00cc18:	4881ffcc 	andi	r2,r9,2047
 c00cc1c:	02800044 	movi	r10,1
 c00cc20:	5080670e 	bge	r10,r2,c00cdc0 <__subdf3+0x584>
 c00cc24:	0081ffc4 	movi	r2,2047
 c00cc28:	4880af26 	beq	r9,r2,c00cee8 <__subdf3+0x6ac>
 c00cc2c:	898d883a 	add	r6,r17,r6
 c00cc30:	1945883a 	add	r2,r3,r5
 c00cc34:	3447803a 	cmpltu	r3,r6,r17
 c00cc38:	1887883a 	add	r3,r3,r2
 c00cc3c:	182297fa 	slli	r17,r3,31
 c00cc40:	300cd07a 	srli	r6,r6,1
 c00cc44:	1806d07a 	srli	r3,r3,1
 c00cc48:	4821883a 	mov	r16,r9
 c00cc4c:	89a2b03a 	or	r17,r17,r6
 c00cc50:	003f1b06 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cc54:	0101ffc4 	movi	r4,2047
 c00cc58:	813f441e 	bne	r16,r4,c00c96c <__alt_data_end+0xfc00c96c>
 c00cc5c:	003f1806 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cc60:	843ff844 	addi	r16,r16,-31
 c00cc64:	01400804 	movi	r5,32
 c00cc68:	1408d83a 	srl	r4,r2,r16
 c00cc6c:	19405026 	beq	r3,r5,c00cdb0 <__subdf3+0x574>
 c00cc70:	01401004 	movi	r5,64
 c00cc74:	28c7c83a 	sub	r3,r5,r3
 c00cc78:	10c4983a 	sll	r2,r2,r3
 c00cc7c:	88a2b03a 	or	r17,r17,r2
 c00cc80:	8822c03a 	cmpne	r17,r17,zero
 c00cc84:	2462b03a 	or	r17,r4,r17
 c00cc88:	0007883a 	mov	r3,zero
 c00cc8c:	0021883a 	mov	r16,zero
 c00cc90:	003f6d06 	br	c00ca48 <__alt_data_end+0xfc00ca48>
 c00cc94:	11fff804 	addi	r7,r2,-32
 c00cc98:	01000804 	movi	r4,32
 c00cc9c:	29ced83a 	srl	r7,r5,r7
 c00cca0:	11004526 	beq	r2,r4,c00cdb8 <__subdf3+0x57c>
 c00cca4:	01001004 	movi	r4,64
 c00cca8:	2089c83a 	sub	r4,r4,r2
 c00ccac:	2904983a 	sll	r2,r5,r4
 c00ccb0:	118cb03a 	or	r6,r2,r6
 c00ccb4:	300cc03a 	cmpne	r6,r6,zero
 c00ccb8:	398cb03a 	or	r6,r7,r6
 c00ccbc:	0005883a 	mov	r2,zero
 c00ccc0:	003f3706 	br	c00c9a0 <__alt_data_end+0xfc00c9a0>
 c00ccc4:	80002a26 	beq	r16,zero,c00cd70 <__subdf3+0x534>
 c00ccc8:	0101ffc4 	movi	r4,2047
 c00cccc:	49006626 	beq	r9,r4,c00ce68 <__subdf3+0x62c>
 c00ccd0:	0085c83a 	sub	r2,zero,r2
 c00ccd4:	18c02034 	orhi	r3,r3,128
 c00ccd8:	01000e04 	movi	r4,56
 c00ccdc:	20807e16 	blt	r4,r2,c00ced8 <__subdf3+0x69c>
 c00cce0:	010007c4 	movi	r4,31
 c00cce4:	2080e716 	blt	r4,r2,c00d084 <__subdf3+0x848>
 c00cce8:	01000804 	movi	r4,32
 c00ccec:	2089c83a 	sub	r4,r4,r2
 c00ccf0:	1914983a 	sll	r10,r3,r4
 c00ccf4:	8890d83a 	srl	r8,r17,r2
 c00ccf8:	8908983a 	sll	r4,r17,r4
 c00ccfc:	1884d83a 	srl	r2,r3,r2
 c00cd00:	5222b03a 	or	r17,r10,r8
 c00cd04:	2006c03a 	cmpne	r3,r4,zero
 c00cd08:	88e2b03a 	or	r17,r17,r3
 c00cd0c:	3463c83a 	sub	r17,r6,r17
 c00cd10:	2885c83a 	sub	r2,r5,r2
 c00cd14:	344d803a 	cmpltu	r6,r6,r17
 c00cd18:	1187c83a 	sub	r3,r2,r6
 c00cd1c:	4821883a 	mov	r16,r9
 c00cd20:	3825883a 	mov	r18,r7
 c00cd24:	003f2306 	br	c00c9b4 <__alt_data_end+0xfc00c9b4>
 c00cd28:	24d0b03a 	or	r8,r4,r19
 c00cd2c:	40001b1e 	bne	r8,zero,c00cd9c <__subdf3+0x560>
 c00cd30:	0005883a 	mov	r2,zero
 c00cd34:	0009883a 	mov	r4,zero
 c00cd38:	0021883a 	mov	r16,zero
 c00cd3c:	003f4906 	br	c00ca64 <__alt_data_end+0xfc00ca64>
 c00cd40:	010007c4 	movi	r4,31
 c00cd44:	20803a16 	blt	r4,r2,c00ce30 <__subdf3+0x5f4>
 c00cd48:	01000804 	movi	r4,32
 c00cd4c:	2089c83a 	sub	r4,r4,r2
 c00cd50:	2912983a 	sll	r9,r5,r4
 c00cd54:	3090d83a 	srl	r8,r6,r2
 c00cd58:	3108983a 	sll	r4,r6,r4
 c00cd5c:	2884d83a 	srl	r2,r5,r2
 c00cd60:	4a12b03a 	or	r9,r9,r8
 c00cd64:	2008c03a 	cmpne	r4,r4,zero
 c00cd68:	4912b03a 	or	r9,r9,r4
 c00cd6c:	003f4e06 	br	c00caa8 <__alt_data_end+0xfc00caa8>
 c00cd70:	1c48b03a 	or	r4,r3,r17
 c00cd74:	20003c26 	beq	r4,zero,c00ce68 <__subdf3+0x62c>
 c00cd78:	0084303a 	nor	r2,zero,r2
 c00cd7c:	1000381e 	bne	r2,zero,c00ce60 <__subdf3+0x624>
 c00cd80:	3463c83a 	sub	r17,r6,r17
 c00cd84:	28c5c83a 	sub	r2,r5,r3
 c00cd88:	344d803a 	cmpltu	r6,r6,r17
 c00cd8c:	1187c83a 	sub	r3,r2,r6
 c00cd90:	4821883a 	mov	r16,r9
 c00cd94:	3825883a 	mov	r18,r7
 c00cd98:	003f0606 	br	c00c9b4 <__alt_data_end+0xfc00c9b4>
 c00cd9c:	2023883a 	mov	r17,r4
 c00cda0:	003f0906 	br	c00c9c8 <__alt_data_end+0xfc00c9c8>
 c00cda4:	0101ffc4 	movi	r4,2047
 c00cda8:	813f3a1e 	bne	r16,r4,c00ca94 <__alt_data_end+0xfc00ca94>
 c00cdac:	003ec406 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cdb0:	0005883a 	mov	r2,zero
 c00cdb4:	003fb106 	br	c00cc7c <__alt_data_end+0xfc00cc7c>
 c00cdb8:	0005883a 	mov	r2,zero
 c00cdbc:	003fbc06 	br	c00ccb0 <__alt_data_end+0xfc00ccb0>
 c00cdc0:	1c44b03a 	or	r2,r3,r17
 c00cdc4:	80008e1e 	bne	r16,zero,c00d000 <__subdf3+0x7c4>
 c00cdc8:	1000c826 	beq	r2,zero,c00d0ec <__subdf3+0x8b0>
 c00cdcc:	2984b03a 	or	r2,r5,r6
 c00cdd0:	103ebb26 	beq	r2,zero,c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cdd4:	8989883a 	add	r4,r17,r6
 c00cdd8:	1945883a 	add	r2,r3,r5
 c00cddc:	2447803a 	cmpltu	r3,r4,r17
 c00cde0:	1887883a 	add	r3,r3,r2
 c00cde4:	1880202c 	andhi	r2,r3,128
 c00cde8:	2023883a 	mov	r17,r4
 c00cdec:	103f1626 	beq	r2,zero,c00ca48 <__alt_data_end+0xfc00ca48>
 c00cdf0:	00bfe034 	movhi	r2,65408
 c00cdf4:	10bfffc4 	addi	r2,r2,-1
 c00cdf8:	5021883a 	mov	r16,r10
 c00cdfc:	1886703a 	and	r3,r3,r2
 c00ce00:	003eaf06 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00ce04:	3825883a 	mov	r18,r7
 c00ce08:	003f0f06 	br	c00ca48 <__alt_data_end+0xfc00ca48>
 c00ce0c:	1c44b03a 	or	r2,r3,r17
 c00ce10:	8000251e 	bne	r16,zero,c00cea8 <__subdf3+0x66c>
 c00ce14:	1000661e 	bne	r2,zero,c00cfb0 <__subdf3+0x774>
 c00ce18:	2990b03a 	or	r8,r5,r6
 c00ce1c:	40009626 	beq	r8,zero,c00d078 <__subdf3+0x83c>
 c00ce20:	2807883a 	mov	r3,r5
 c00ce24:	3023883a 	mov	r17,r6
 c00ce28:	3825883a 	mov	r18,r7
 c00ce2c:	003ea406 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00ce30:	127ff804 	addi	r9,r2,-32
 c00ce34:	01000804 	movi	r4,32
 c00ce38:	2a52d83a 	srl	r9,r5,r9
 c00ce3c:	11008c26 	beq	r2,r4,c00d070 <__subdf3+0x834>
 c00ce40:	01001004 	movi	r4,64
 c00ce44:	2085c83a 	sub	r2,r4,r2
 c00ce48:	2884983a 	sll	r2,r5,r2
 c00ce4c:	118cb03a 	or	r6,r2,r6
 c00ce50:	300cc03a 	cmpne	r6,r6,zero
 c00ce54:	4992b03a 	or	r9,r9,r6
 c00ce58:	0005883a 	mov	r2,zero
 c00ce5c:	003f1206 	br	c00caa8 <__alt_data_end+0xfc00caa8>
 c00ce60:	0101ffc4 	movi	r4,2047
 c00ce64:	493f9c1e 	bne	r9,r4,c00ccd8 <__alt_data_end+0xfc00ccd8>
 c00ce68:	2807883a 	mov	r3,r5
 c00ce6c:	3023883a 	mov	r17,r6
 c00ce70:	4821883a 	mov	r16,r9
 c00ce74:	3825883a 	mov	r18,r7
 c00ce78:	003e9106 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00ce7c:	80001f1e 	bne	r16,zero,c00cefc <__subdf3+0x6c0>
 c00ce80:	1c48b03a 	or	r4,r3,r17
 c00ce84:	20005a26 	beq	r4,zero,c00cff0 <__subdf3+0x7b4>
 c00ce88:	0084303a 	nor	r2,zero,r2
 c00ce8c:	1000561e 	bne	r2,zero,c00cfe8 <__subdf3+0x7ac>
 c00ce90:	89a3883a 	add	r17,r17,r6
 c00ce94:	1945883a 	add	r2,r3,r5
 c00ce98:	898d803a 	cmpltu	r6,r17,r6
 c00ce9c:	3087883a 	add	r3,r6,r2
 c00cea0:	4821883a 	mov	r16,r9
 c00cea4:	003f0506 	br	c00cabc <__alt_data_end+0xfc00cabc>
 c00cea8:	10002b1e 	bne	r2,zero,c00cf58 <__subdf3+0x71c>
 c00ceac:	2984b03a 	or	r2,r5,r6
 c00ceb0:	10008026 	beq	r2,zero,c00d0b4 <__subdf3+0x878>
 c00ceb4:	2807883a 	mov	r3,r5
 c00ceb8:	3023883a 	mov	r17,r6
 c00cebc:	3825883a 	mov	r18,r7
 c00cec0:	0401ffc4 	movi	r16,2047
 c00cec4:	003e7e06 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cec8:	3809883a 	mov	r4,r7
 c00cecc:	0011883a 	mov	r8,zero
 c00ced0:	0005883a 	mov	r2,zero
 c00ced4:	003ee306 	br	c00ca64 <__alt_data_end+0xfc00ca64>
 c00ced8:	1c62b03a 	or	r17,r3,r17
 c00cedc:	8822c03a 	cmpne	r17,r17,zero
 c00cee0:	0005883a 	mov	r2,zero
 c00cee4:	003f8906 	br	c00cd0c <__alt_data_end+0xfc00cd0c>
 c00cee8:	3809883a 	mov	r4,r7
 c00ceec:	4821883a 	mov	r16,r9
 c00cef0:	0011883a 	mov	r8,zero
 c00cef4:	0005883a 	mov	r2,zero
 c00cef8:	003eda06 	br	c00ca64 <__alt_data_end+0xfc00ca64>
 c00cefc:	0101ffc4 	movi	r4,2047
 c00cf00:	49003b26 	beq	r9,r4,c00cff0 <__subdf3+0x7b4>
 c00cf04:	0085c83a 	sub	r2,zero,r2
 c00cf08:	18c02034 	orhi	r3,r3,128
 c00cf0c:	01000e04 	movi	r4,56
 c00cf10:	20806e16 	blt	r4,r2,c00d0cc <__subdf3+0x890>
 c00cf14:	010007c4 	movi	r4,31
 c00cf18:	20807716 	blt	r4,r2,c00d0f8 <__subdf3+0x8bc>
 c00cf1c:	01000804 	movi	r4,32
 c00cf20:	2089c83a 	sub	r4,r4,r2
 c00cf24:	1914983a 	sll	r10,r3,r4
 c00cf28:	8890d83a 	srl	r8,r17,r2
 c00cf2c:	8908983a 	sll	r4,r17,r4
 c00cf30:	1884d83a 	srl	r2,r3,r2
 c00cf34:	5222b03a 	or	r17,r10,r8
 c00cf38:	2006c03a 	cmpne	r3,r4,zero
 c00cf3c:	88e2b03a 	or	r17,r17,r3
 c00cf40:	89a3883a 	add	r17,r17,r6
 c00cf44:	1145883a 	add	r2,r2,r5
 c00cf48:	898d803a 	cmpltu	r6,r17,r6
 c00cf4c:	3087883a 	add	r3,r6,r2
 c00cf50:	4821883a 	mov	r16,r9
 c00cf54:	003ed906 	br	c00cabc <__alt_data_end+0xfc00cabc>
 c00cf58:	2984b03a 	or	r2,r5,r6
 c00cf5c:	10004226 	beq	r2,zero,c00d068 <__subdf3+0x82c>
 c00cf60:	1808d0fa 	srli	r4,r3,3
 c00cf64:	8822d0fa 	srli	r17,r17,3
 c00cf68:	1806977a 	slli	r3,r3,29
 c00cf6c:	2080022c 	andhi	r2,r4,8
 c00cf70:	1c62b03a 	or	r17,r3,r17
 c00cf74:	10000826 	beq	r2,zero,c00cf98 <__subdf3+0x75c>
 c00cf78:	2812d0fa 	srli	r9,r5,3
 c00cf7c:	4880022c 	andhi	r2,r9,8
 c00cf80:	1000051e 	bne	r2,zero,c00cf98 <__subdf3+0x75c>
 c00cf84:	300cd0fa 	srli	r6,r6,3
 c00cf88:	2804977a 	slli	r2,r5,29
 c00cf8c:	4809883a 	mov	r4,r9
 c00cf90:	3825883a 	mov	r18,r7
 c00cf94:	11a2b03a 	or	r17,r2,r6
 c00cf98:	8806d77a 	srli	r3,r17,29
 c00cf9c:	200890fa 	slli	r4,r4,3
 c00cfa0:	882290fa 	slli	r17,r17,3
 c00cfa4:	0401ffc4 	movi	r16,2047
 c00cfa8:	1906b03a 	or	r3,r3,r4
 c00cfac:	003e4406 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cfb0:	2984b03a 	or	r2,r5,r6
 c00cfb4:	103e4226 	beq	r2,zero,c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cfb8:	8989c83a 	sub	r4,r17,r6
 c00cfbc:	8911803a 	cmpltu	r8,r17,r4
 c00cfc0:	1945c83a 	sub	r2,r3,r5
 c00cfc4:	1205c83a 	sub	r2,r2,r8
 c00cfc8:	1200202c 	andhi	r8,r2,128
 c00cfcc:	403e9a26 	beq	r8,zero,c00ca38 <__alt_data_end+0xfc00ca38>
 c00cfd0:	3463c83a 	sub	r17,r6,r17
 c00cfd4:	28c5c83a 	sub	r2,r5,r3
 c00cfd8:	344d803a 	cmpltu	r6,r6,r17
 c00cfdc:	1187c83a 	sub	r3,r2,r6
 c00cfe0:	3825883a 	mov	r18,r7
 c00cfe4:	003e3606 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00cfe8:	0101ffc4 	movi	r4,2047
 c00cfec:	493fc71e 	bne	r9,r4,c00cf0c <__alt_data_end+0xfc00cf0c>
 c00cff0:	2807883a 	mov	r3,r5
 c00cff4:	3023883a 	mov	r17,r6
 c00cff8:	4821883a 	mov	r16,r9
 c00cffc:	003e3006 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00d000:	10003626 	beq	r2,zero,c00d0dc <__subdf3+0x8a0>
 c00d004:	2984b03a 	or	r2,r5,r6
 c00d008:	10001726 	beq	r2,zero,c00d068 <__subdf3+0x82c>
 c00d00c:	1808d0fa 	srli	r4,r3,3
 c00d010:	8822d0fa 	srli	r17,r17,3
 c00d014:	1806977a 	slli	r3,r3,29
 c00d018:	2080022c 	andhi	r2,r4,8
 c00d01c:	1c62b03a 	or	r17,r3,r17
 c00d020:	10000726 	beq	r2,zero,c00d040 <__subdf3+0x804>
 c00d024:	2812d0fa 	srli	r9,r5,3
 c00d028:	4880022c 	andhi	r2,r9,8
 c00d02c:	1000041e 	bne	r2,zero,c00d040 <__subdf3+0x804>
 c00d030:	300cd0fa 	srli	r6,r6,3
 c00d034:	2804977a 	slli	r2,r5,29
 c00d038:	4809883a 	mov	r4,r9
 c00d03c:	11a2b03a 	or	r17,r2,r6
 c00d040:	8806d77a 	srli	r3,r17,29
 c00d044:	200890fa 	slli	r4,r4,3
 c00d048:	882290fa 	slli	r17,r17,3
 c00d04c:	3825883a 	mov	r18,r7
 c00d050:	1906b03a 	or	r3,r3,r4
 c00d054:	0401ffc4 	movi	r16,2047
 c00d058:	003e1906 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00d05c:	000b883a 	mov	r5,zero
 c00d060:	0005883a 	mov	r2,zero
 c00d064:	003e2e06 	br	c00c920 <__alt_data_end+0xfc00c920>
 c00d068:	0401ffc4 	movi	r16,2047
 c00d06c:	003e1406 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00d070:	0005883a 	mov	r2,zero
 c00d074:	003f7506 	br	c00ce4c <__alt_data_end+0xfc00ce4c>
 c00d078:	0005883a 	mov	r2,zero
 c00d07c:	0009883a 	mov	r4,zero
 c00d080:	003e7806 	br	c00ca64 <__alt_data_end+0xfc00ca64>
 c00d084:	123ff804 	addi	r8,r2,-32
 c00d088:	01000804 	movi	r4,32
 c00d08c:	1a10d83a 	srl	r8,r3,r8
 c00d090:	11002526 	beq	r2,r4,c00d128 <__subdf3+0x8ec>
 c00d094:	01001004 	movi	r4,64
 c00d098:	2085c83a 	sub	r2,r4,r2
 c00d09c:	1884983a 	sll	r2,r3,r2
 c00d0a0:	1444b03a 	or	r2,r2,r17
 c00d0a4:	1004c03a 	cmpne	r2,r2,zero
 c00d0a8:	40a2b03a 	or	r17,r8,r2
 c00d0ac:	0005883a 	mov	r2,zero
 c00d0b0:	003f1606 	br	c00cd0c <__alt_data_end+0xfc00cd0c>
 c00d0b4:	02000434 	movhi	r8,16
 c00d0b8:	0009883a 	mov	r4,zero
 c00d0bc:	423fffc4 	addi	r8,r8,-1
 c00d0c0:	00bfffc4 	movi	r2,-1
 c00d0c4:	0401ffc4 	movi	r16,2047
 c00d0c8:	003e6606 	br	c00ca64 <__alt_data_end+0xfc00ca64>
 c00d0cc:	1c62b03a 	or	r17,r3,r17
 c00d0d0:	8822c03a 	cmpne	r17,r17,zero
 c00d0d4:	0005883a 	mov	r2,zero
 c00d0d8:	003f9906 	br	c00cf40 <__alt_data_end+0xfc00cf40>
 c00d0dc:	2807883a 	mov	r3,r5
 c00d0e0:	3023883a 	mov	r17,r6
 c00d0e4:	0401ffc4 	movi	r16,2047
 c00d0e8:	003df506 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00d0ec:	2807883a 	mov	r3,r5
 c00d0f0:	3023883a 	mov	r17,r6
 c00d0f4:	003df206 	br	c00c8c0 <__alt_data_end+0xfc00c8c0>
 c00d0f8:	123ff804 	addi	r8,r2,-32
 c00d0fc:	01000804 	movi	r4,32
 c00d100:	1a10d83a 	srl	r8,r3,r8
 c00d104:	11000a26 	beq	r2,r4,c00d130 <__subdf3+0x8f4>
 c00d108:	01001004 	movi	r4,64
 c00d10c:	2085c83a 	sub	r2,r4,r2
 c00d110:	1884983a 	sll	r2,r3,r2
 c00d114:	1444b03a 	or	r2,r2,r17
 c00d118:	1004c03a 	cmpne	r2,r2,zero
 c00d11c:	40a2b03a 	or	r17,r8,r2
 c00d120:	0005883a 	mov	r2,zero
 c00d124:	003f8606 	br	c00cf40 <__alt_data_end+0xfc00cf40>
 c00d128:	0005883a 	mov	r2,zero
 c00d12c:	003fdc06 	br	c00d0a0 <__alt_data_end+0xfc00d0a0>
 c00d130:	0005883a 	mov	r2,zero
 c00d134:	003ff706 	br	c00d114 <__alt_data_end+0xfc00d114>

0c00d138 <__fixdfsi>:
 c00d138:	280cd53a 	srli	r6,r5,20
 c00d13c:	00c00434 	movhi	r3,16
 c00d140:	18ffffc4 	addi	r3,r3,-1
 c00d144:	3181ffcc 	andi	r6,r6,2047
 c00d148:	01c0ff84 	movi	r7,1022
 c00d14c:	28c6703a 	and	r3,r5,r3
 c00d150:	280ad7fa 	srli	r5,r5,31
 c00d154:	3980120e 	bge	r7,r6,c00d1a0 <__fixdfsi+0x68>
 c00d158:	00810744 	movi	r2,1053
 c00d15c:	11800c16 	blt	r2,r6,c00d190 <__fixdfsi+0x58>
 c00d160:	00810cc4 	movi	r2,1075
 c00d164:	1185c83a 	sub	r2,r2,r6
 c00d168:	01c007c4 	movi	r7,31
 c00d16c:	18c00434 	orhi	r3,r3,16
 c00d170:	38800d16 	blt	r7,r2,c00d1a8 <__fixdfsi+0x70>
 c00d174:	31befb44 	addi	r6,r6,-1043
 c00d178:	2084d83a 	srl	r2,r4,r2
 c00d17c:	1986983a 	sll	r3,r3,r6
 c00d180:	1884b03a 	or	r2,r3,r2
 c00d184:	28000726 	beq	r5,zero,c00d1a4 <__fixdfsi+0x6c>
 c00d188:	0085c83a 	sub	r2,zero,r2
 c00d18c:	f800283a 	ret
 c00d190:	00a00034 	movhi	r2,32768
 c00d194:	10bfffc4 	addi	r2,r2,-1
 c00d198:	2885883a 	add	r2,r5,r2
 c00d19c:	f800283a 	ret
 c00d1a0:	0005883a 	mov	r2,zero
 c00d1a4:	f800283a 	ret
 c00d1a8:	008104c4 	movi	r2,1043
 c00d1ac:	1185c83a 	sub	r2,r2,r6
 c00d1b0:	1884d83a 	srl	r2,r3,r2
 c00d1b4:	003ff306 	br	c00d184 <__alt_data_end+0xfc00d184>

0c00d1b8 <__floatsidf>:
 c00d1b8:	defffd04 	addi	sp,sp,-12
 c00d1bc:	dfc00215 	stw	ra,8(sp)
 c00d1c0:	dc400115 	stw	r17,4(sp)
 c00d1c4:	dc000015 	stw	r16,0(sp)
 c00d1c8:	20002b26 	beq	r4,zero,c00d278 <__floatsidf+0xc0>
 c00d1cc:	2023883a 	mov	r17,r4
 c00d1d0:	2020d7fa 	srli	r16,r4,31
 c00d1d4:	20002d16 	blt	r4,zero,c00d28c <__floatsidf+0xd4>
 c00d1d8:	8809883a 	mov	r4,r17
 c00d1dc:	c00d33c0 	call	c00d33c <__clzsi2>
 c00d1e0:	01410784 	movi	r5,1054
 c00d1e4:	288bc83a 	sub	r5,r5,r2
 c00d1e8:	01010cc4 	movi	r4,1075
 c00d1ec:	2149c83a 	sub	r4,r4,r5
 c00d1f0:	00c007c4 	movi	r3,31
 c00d1f4:	1900160e 	bge	r3,r4,c00d250 <__floatsidf+0x98>
 c00d1f8:	00c104c4 	movi	r3,1043
 c00d1fc:	1947c83a 	sub	r3,r3,r5
 c00d200:	88c6983a 	sll	r3,r17,r3
 c00d204:	00800434 	movhi	r2,16
 c00d208:	10bfffc4 	addi	r2,r2,-1
 c00d20c:	1886703a 	and	r3,r3,r2
 c00d210:	2941ffcc 	andi	r5,r5,2047
 c00d214:	800d883a 	mov	r6,r16
 c00d218:	0005883a 	mov	r2,zero
 c00d21c:	280a953a 	slli	r5,r5,20
 c00d220:	31803fcc 	andi	r6,r6,255
 c00d224:	01000434 	movhi	r4,16
 c00d228:	300c97fa 	slli	r6,r6,31
 c00d22c:	213fffc4 	addi	r4,r4,-1
 c00d230:	1906703a 	and	r3,r3,r4
 c00d234:	1946b03a 	or	r3,r3,r5
 c00d238:	1986b03a 	or	r3,r3,r6
 c00d23c:	dfc00217 	ldw	ra,8(sp)
 c00d240:	dc400117 	ldw	r17,4(sp)
 c00d244:	dc000017 	ldw	r16,0(sp)
 c00d248:	dec00304 	addi	sp,sp,12
 c00d24c:	f800283a 	ret
 c00d250:	00c002c4 	movi	r3,11
 c00d254:	1887c83a 	sub	r3,r3,r2
 c00d258:	88c6d83a 	srl	r3,r17,r3
 c00d25c:	8904983a 	sll	r2,r17,r4
 c00d260:	01000434 	movhi	r4,16
 c00d264:	213fffc4 	addi	r4,r4,-1
 c00d268:	2941ffcc 	andi	r5,r5,2047
 c00d26c:	1906703a 	and	r3,r3,r4
 c00d270:	800d883a 	mov	r6,r16
 c00d274:	003fe906 	br	c00d21c <__alt_data_end+0xfc00d21c>
 c00d278:	000d883a 	mov	r6,zero
 c00d27c:	000b883a 	mov	r5,zero
 c00d280:	0007883a 	mov	r3,zero
 c00d284:	0005883a 	mov	r2,zero
 c00d288:	003fe406 	br	c00d21c <__alt_data_end+0xfc00d21c>
 c00d28c:	0123c83a 	sub	r17,zero,r4
 c00d290:	003fd106 	br	c00d1d8 <__alt_data_end+0xfc00d1d8>

0c00d294 <__floatunsidf>:
 c00d294:	defffe04 	addi	sp,sp,-8
 c00d298:	dc000015 	stw	r16,0(sp)
 c00d29c:	dfc00115 	stw	ra,4(sp)
 c00d2a0:	2021883a 	mov	r16,r4
 c00d2a4:	20002226 	beq	r4,zero,c00d330 <__floatunsidf+0x9c>
 c00d2a8:	c00d33c0 	call	c00d33c <__clzsi2>
 c00d2ac:	01010784 	movi	r4,1054
 c00d2b0:	2089c83a 	sub	r4,r4,r2
 c00d2b4:	01810cc4 	movi	r6,1075
 c00d2b8:	310dc83a 	sub	r6,r6,r4
 c00d2bc:	00c007c4 	movi	r3,31
 c00d2c0:	1980120e 	bge	r3,r6,c00d30c <__floatunsidf+0x78>
 c00d2c4:	00c104c4 	movi	r3,1043
 c00d2c8:	1907c83a 	sub	r3,r3,r4
 c00d2cc:	80ca983a 	sll	r5,r16,r3
 c00d2d0:	00800434 	movhi	r2,16
 c00d2d4:	10bfffc4 	addi	r2,r2,-1
 c00d2d8:	2101ffcc 	andi	r4,r4,2047
 c00d2dc:	0021883a 	mov	r16,zero
 c00d2e0:	288a703a 	and	r5,r5,r2
 c00d2e4:	2008953a 	slli	r4,r4,20
 c00d2e8:	00c00434 	movhi	r3,16
 c00d2ec:	18ffffc4 	addi	r3,r3,-1
 c00d2f0:	28c6703a 	and	r3,r5,r3
 c00d2f4:	8005883a 	mov	r2,r16
 c00d2f8:	1906b03a 	or	r3,r3,r4
 c00d2fc:	dfc00117 	ldw	ra,4(sp)
 c00d300:	dc000017 	ldw	r16,0(sp)
 c00d304:	dec00204 	addi	sp,sp,8
 c00d308:	f800283a 	ret
 c00d30c:	00c002c4 	movi	r3,11
 c00d310:	188bc83a 	sub	r5,r3,r2
 c00d314:	814ad83a 	srl	r5,r16,r5
 c00d318:	00c00434 	movhi	r3,16
 c00d31c:	18ffffc4 	addi	r3,r3,-1
 c00d320:	81a0983a 	sll	r16,r16,r6
 c00d324:	2101ffcc 	andi	r4,r4,2047
 c00d328:	28ca703a 	and	r5,r5,r3
 c00d32c:	003fed06 	br	c00d2e4 <__alt_data_end+0xfc00d2e4>
 c00d330:	0009883a 	mov	r4,zero
 c00d334:	000b883a 	mov	r5,zero
 c00d338:	003fea06 	br	c00d2e4 <__alt_data_end+0xfc00d2e4>

0c00d33c <__clzsi2>:
 c00d33c:	00bfffd4 	movui	r2,65535
 c00d340:	11000536 	bltu	r2,r4,c00d358 <__clzsi2+0x1c>
 c00d344:	00803fc4 	movi	r2,255
 c00d348:	11000f36 	bltu	r2,r4,c00d388 <__clzsi2+0x4c>
 c00d34c:	00800804 	movi	r2,32
 c00d350:	0007883a 	mov	r3,zero
 c00d354:	00000506 	br	c00d36c <__clzsi2+0x30>
 c00d358:	00804034 	movhi	r2,256
 c00d35c:	10bfffc4 	addi	r2,r2,-1
 c00d360:	11000c2e 	bgeu	r2,r4,c00d394 <__clzsi2+0x58>
 c00d364:	00800204 	movi	r2,8
 c00d368:	00c00604 	movi	r3,24
 c00d36c:	20c8d83a 	srl	r4,r4,r3
 c00d370:	00c30074 	movhi	r3,3073
 c00d374:	18ff5b04 	addi	r3,r3,-660
 c00d378:	1909883a 	add	r4,r3,r4
 c00d37c:	20c00003 	ldbu	r3,0(r4)
 c00d380:	10c5c83a 	sub	r2,r2,r3
 c00d384:	f800283a 	ret
 c00d388:	00800604 	movi	r2,24
 c00d38c:	00c00204 	movi	r3,8
 c00d390:	003ff606 	br	c00d36c <__alt_data_end+0xfc00d36c>
 c00d394:	00800404 	movi	r2,16
 c00d398:	1007883a 	mov	r3,r2
 c00d39c:	003ff306 	br	c00d36c <__alt_data_end+0xfc00d36c>

0c00d3a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00d3a0:	defffe04 	addi	sp,sp,-8
 c00d3a4:	dfc00115 	stw	ra,4(sp)
 c00d3a8:	df000015 	stw	fp,0(sp)
 c00d3ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00d3b0:	d0a00d17 	ldw	r2,-32716(gp)
 c00d3b4:	10000326 	beq	r2,zero,c00d3c4 <alt_get_errno+0x24>
 c00d3b8:	d0a00d17 	ldw	r2,-32716(gp)
 c00d3bc:	103ee83a 	callr	r2
 c00d3c0:	00000106 	br	c00d3c8 <alt_get_errno+0x28>
 c00d3c4:	d0a6d504 	addi	r2,gp,-25772
}
 c00d3c8:	e037883a 	mov	sp,fp
 c00d3cc:	dfc00117 	ldw	ra,4(sp)
 c00d3d0:	df000017 	ldw	fp,0(sp)
 c00d3d4:	dec00204 	addi	sp,sp,8
 c00d3d8:	f800283a 	ret

0c00d3dc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 c00d3dc:	defffb04 	addi	sp,sp,-20
 c00d3e0:	dfc00415 	stw	ra,16(sp)
 c00d3e4:	df000315 	stw	fp,12(sp)
 c00d3e8:	df000304 	addi	fp,sp,12
 c00d3ec:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 c00d3f0:	e0bfff17 	ldw	r2,-4(fp)
 c00d3f4:	10000816 	blt	r2,zero,c00d418 <close+0x3c>
 c00d3f8:	01400304 	movi	r5,12
 c00d3fc:	e13fff17 	ldw	r4,-4(fp)
 c00d400:	c0005340 	call	c000534 <__mulsi3>
 c00d404:	1007883a 	mov	r3,r2
 c00d408:	00830074 	movhi	r2,3073
 c00d40c:	1081db04 	addi	r2,r2,1900
 c00d410:	1885883a 	add	r2,r3,r2
 c00d414:	00000106 	br	c00d41c <close+0x40>
 c00d418:	0005883a 	mov	r2,zero
 c00d41c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 c00d420:	e0bffd17 	ldw	r2,-12(fp)
 c00d424:	10001926 	beq	r2,zero,c00d48c <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 c00d428:	e0bffd17 	ldw	r2,-12(fp)
 c00d42c:	10800017 	ldw	r2,0(r2)
 c00d430:	10800417 	ldw	r2,16(r2)
 c00d434:	10000626 	beq	r2,zero,c00d450 <close+0x74>
 c00d438:	e0bffd17 	ldw	r2,-12(fp)
 c00d43c:	10800017 	ldw	r2,0(r2)
 c00d440:	10800417 	ldw	r2,16(r2)
 c00d444:	e13ffd17 	ldw	r4,-12(fp)
 c00d448:	103ee83a 	callr	r2
 c00d44c:	00000106 	br	c00d454 <close+0x78>
 c00d450:	0005883a 	mov	r2,zero
 c00d454:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 c00d458:	e13fff17 	ldw	r4,-4(fp)
 c00d45c:	c00dac40 	call	c00dac4 <alt_release_fd>
    if (rval < 0)
 c00d460:	e0bffe17 	ldw	r2,-8(fp)
 c00d464:	1000070e 	bge	r2,zero,c00d484 <close+0xa8>
    {
      ALT_ERRNO = -rval;
 c00d468:	c00d3a00 	call	c00d3a0 <alt_get_errno>
 c00d46c:	1007883a 	mov	r3,r2
 c00d470:	e0bffe17 	ldw	r2,-8(fp)
 c00d474:	0085c83a 	sub	r2,zero,r2
 c00d478:	18800015 	stw	r2,0(r3)
      return -1;
 c00d47c:	00bfffc4 	movi	r2,-1
 c00d480:	00000706 	br	c00d4a0 <close+0xc4>
    }
    return 0;
 c00d484:	0005883a 	mov	r2,zero
 c00d488:	00000506 	br	c00d4a0 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c00d48c:	c00d3a00 	call	c00d3a0 <alt_get_errno>
 c00d490:	1007883a 	mov	r3,r2
 c00d494:	00801444 	movi	r2,81
 c00d498:	18800015 	stw	r2,0(r3)
    return -1;
 c00d49c:	00bfffc4 	movi	r2,-1
  }
}
 c00d4a0:	e037883a 	mov	sp,fp
 c00d4a4:	dfc00117 	ldw	ra,4(sp)
 c00d4a8:	df000017 	ldw	fp,0(sp)
 c00d4ac:	dec00204 	addi	sp,sp,8
 c00d4b0:	f800283a 	ret

0c00d4b4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 c00d4b4:	defffc04 	addi	sp,sp,-16
 c00d4b8:	df000315 	stw	fp,12(sp)
 c00d4bc:	df000304 	addi	fp,sp,12
 c00d4c0:	e13ffd15 	stw	r4,-12(fp)
 c00d4c4:	e17ffe15 	stw	r5,-8(fp)
 c00d4c8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 c00d4cc:	e0bfff17 	ldw	r2,-4(fp)
}
 c00d4d0:	e037883a 	mov	sp,fp
 c00d4d4:	df000017 	ldw	fp,0(sp)
 c00d4d8:	dec00104 	addi	sp,sp,4
 c00d4dc:	f800283a 	ret

0c00d4e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00d4e0:	defffe04 	addi	sp,sp,-8
 c00d4e4:	dfc00115 	stw	ra,4(sp)
 c00d4e8:	df000015 	stw	fp,0(sp)
 c00d4ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00d4f0:	d0a00d17 	ldw	r2,-32716(gp)
 c00d4f4:	10000326 	beq	r2,zero,c00d504 <alt_get_errno+0x24>
 c00d4f8:	d0a00d17 	ldw	r2,-32716(gp)
 c00d4fc:	103ee83a 	callr	r2
 c00d500:	00000106 	br	c00d508 <alt_get_errno+0x28>
 c00d504:	d0a6d504 	addi	r2,gp,-25772
}
 c00d508:	e037883a 	mov	sp,fp
 c00d50c:	dfc00117 	ldw	ra,4(sp)
 c00d510:	df000017 	ldw	fp,0(sp)
 c00d514:	dec00204 	addi	sp,sp,8
 c00d518:	f800283a 	ret

0c00d51c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 c00d51c:	defffb04 	addi	sp,sp,-20
 c00d520:	dfc00415 	stw	ra,16(sp)
 c00d524:	df000315 	stw	fp,12(sp)
 c00d528:	df000304 	addi	fp,sp,12
 c00d52c:	e13ffe15 	stw	r4,-8(fp)
 c00d530:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c00d534:	e0bffe17 	ldw	r2,-8(fp)
 c00d538:	10000816 	blt	r2,zero,c00d55c <fstat+0x40>
 c00d53c:	01400304 	movi	r5,12
 c00d540:	e13ffe17 	ldw	r4,-8(fp)
 c00d544:	c0005340 	call	c000534 <__mulsi3>
 c00d548:	1007883a 	mov	r3,r2
 c00d54c:	00830074 	movhi	r2,3073
 c00d550:	1081db04 	addi	r2,r2,1900
 c00d554:	1885883a 	add	r2,r3,r2
 c00d558:	00000106 	br	c00d560 <fstat+0x44>
 c00d55c:	0005883a 	mov	r2,zero
 c00d560:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 c00d564:	e0bffd17 	ldw	r2,-12(fp)
 c00d568:	10001026 	beq	r2,zero,c00d5ac <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 c00d56c:	e0bffd17 	ldw	r2,-12(fp)
 c00d570:	10800017 	ldw	r2,0(r2)
 c00d574:	10800817 	ldw	r2,32(r2)
 c00d578:	10000726 	beq	r2,zero,c00d598 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 c00d57c:	e0bffd17 	ldw	r2,-12(fp)
 c00d580:	10800017 	ldw	r2,0(r2)
 c00d584:	10800817 	ldw	r2,32(r2)
 c00d588:	e17fff17 	ldw	r5,-4(fp)
 c00d58c:	e13ffd17 	ldw	r4,-12(fp)
 c00d590:	103ee83a 	callr	r2
 c00d594:	00000a06 	br	c00d5c0 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 c00d598:	e0bfff17 	ldw	r2,-4(fp)
 c00d59c:	00c80004 	movi	r3,8192
 c00d5a0:	10c00115 	stw	r3,4(r2)
      return 0;
 c00d5a4:	0005883a 	mov	r2,zero
 c00d5a8:	00000506 	br	c00d5c0 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c00d5ac:	c00d4e00 	call	c00d4e0 <alt_get_errno>
 c00d5b0:	1007883a 	mov	r3,r2
 c00d5b4:	00801444 	movi	r2,81
 c00d5b8:	18800015 	stw	r2,0(r3)
    return -1;
 c00d5bc:	00bfffc4 	movi	r2,-1
  }
}
 c00d5c0:	e037883a 	mov	sp,fp
 c00d5c4:	dfc00117 	ldw	ra,4(sp)
 c00d5c8:	df000017 	ldw	fp,0(sp)
 c00d5cc:	dec00204 	addi	sp,sp,8
 c00d5d0:	f800283a 	ret

0c00d5d4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00d5d4:	defffe04 	addi	sp,sp,-8
 c00d5d8:	dfc00115 	stw	ra,4(sp)
 c00d5dc:	df000015 	stw	fp,0(sp)
 c00d5e0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00d5e4:	d0a00d17 	ldw	r2,-32716(gp)
 c00d5e8:	10000326 	beq	r2,zero,c00d5f8 <alt_get_errno+0x24>
 c00d5ec:	d0a00d17 	ldw	r2,-32716(gp)
 c00d5f0:	103ee83a 	callr	r2
 c00d5f4:	00000106 	br	c00d5fc <alt_get_errno+0x28>
 c00d5f8:	d0a6d504 	addi	r2,gp,-25772
}
 c00d5fc:	e037883a 	mov	sp,fp
 c00d600:	dfc00117 	ldw	ra,4(sp)
 c00d604:	df000017 	ldw	fp,0(sp)
 c00d608:	dec00204 	addi	sp,sp,8
 c00d60c:	f800283a 	ret

0c00d610 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 c00d610:	deffed04 	addi	sp,sp,-76
 c00d614:	dfc01215 	stw	ra,72(sp)
 c00d618:	df001115 	stw	fp,68(sp)
 c00d61c:	df001104 	addi	fp,sp,68
 c00d620:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c00d624:	e0bfff17 	ldw	r2,-4(fp)
 c00d628:	10000816 	blt	r2,zero,c00d64c <isatty+0x3c>
 c00d62c:	01400304 	movi	r5,12
 c00d630:	e13fff17 	ldw	r4,-4(fp)
 c00d634:	c0005340 	call	c000534 <__mulsi3>
 c00d638:	1007883a 	mov	r3,r2
 c00d63c:	00830074 	movhi	r2,3073
 c00d640:	1081db04 	addi	r2,r2,1900
 c00d644:	1885883a 	add	r2,r3,r2
 c00d648:	00000106 	br	c00d650 <isatty+0x40>
 c00d64c:	0005883a 	mov	r2,zero
 c00d650:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 c00d654:	e0bfef17 	ldw	r2,-68(fp)
 c00d658:	10000e26 	beq	r2,zero,c00d694 <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 c00d65c:	e0bfef17 	ldw	r2,-68(fp)
 c00d660:	10800017 	ldw	r2,0(r2)
 c00d664:	10800817 	ldw	r2,32(r2)
 c00d668:	1000021e 	bne	r2,zero,c00d674 <isatty+0x64>
    {
      return 1;
 c00d66c:	00800044 	movi	r2,1
 c00d670:	00000d06 	br	c00d6a8 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 c00d674:	e0bff004 	addi	r2,fp,-64
 c00d678:	100b883a 	mov	r5,r2
 c00d67c:	e13fff17 	ldw	r4,-4(fp)
 c00d680:	c00d51c0 	call	c00d51c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 c00d684:	e0bff117 	ldw	r2,-60(fp)
 c00d688:	10880020 	cmpeqi	r2,r2,8192
 c00d68c:	10803fcc 	andi	r2,r2,255
 c00d690:	00000506 	br	c00d6a8 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 c00d694:	c00d5d40 	call	c00d5d4 <alt_get_errno>
 c00d698:	1007883a 	mov	r3,r2
 c00d69c:	00801444 	movi	r2,81
 c00d6a0:	18800015 	stw	r2,0(r3)
    return 0;
 c00d6a4:	0005883a 	mov	r2,zero
  }
}
 c00d6a8:	e037883a 	mov	sp,fp
 c00d6ac:	dfc00117 	ldw	ra,4(sp)
 c00d6b0:	df000017 	ldw	fp,0(sp)
 c00d6b4:	dec00204 	addi	sp,sp,8
 c00d6b8:	f800283a 	ret

0c00d6bc <alt_load_section>:
 c00d6bc:	defffc04 	addi	sp,sp,-16
 c00d6c0:	df000315 	stw	fp,12(sp)
 c00d6c4:	df000304 	addi	fp,sp,12
 c00d6c8:	e13ffd15 	stw	r4,-12(fp)
 c00d6cc:	e17ffe15 	stw	r5,-8(fp)
 c00d6d0:	e1bfff15 	stw	r6,-4(fp)
 c00d6d4:	e0fffe17 	ldw	r3,-8(fp)
 c00d6d8:	e0bffd17 	ldw	r2,-12(fp)
 c00d6dc:	18800c26 	beq	r3,r2,c00d710 <alt_load_section+0x54>
 c00d6e0:	00000806 	br	c00d704 <alt_load_section+0x48>
 c00d6e4:	e0bffe17 	ldw	r2,-8(fp)
 c00d6e8:	10c00104 	addi	r3,r2,4
 c00d6ec:	e0fffe15 	stw	r3,-8(fp)
 c00d6f0:	e0fffd17 	ldw	r3,-12(fp)
 c00d6f4:	19000104 	addi	r4,r3,4
 c00d6f8:	e13ffd15 	stw	r4,-12(fp)
 c00d6fc:	18c00017 	ldw	r3,0(r3)
 c00d700:	10c00015 	stw	r3,0(r2)
 c00d704:	e0fffe17 	ldw	r3,-8(fp)
 c00d708:	e0bfff17 	ldw	r2,-4(fp)
 c00d70c:	18bff51e 	bne	r3,r2,c00d6e4 <__alt_data_end+0xfc00d6e4>
 c00d710:	0001883a 	nop
 c00d714:	e037883a 	mov	sp,fp
 c00d718:	df000017 	ldw	fp,0(sp)
 c00d71c:	dec00104 	addi	sp,sp,4
 c00d720:	f800283a 	ret

0c00d724 <alt_load>:
 c00d724:	defffe04 	addi	sp,sp,-8
 c00d728:	dfc00115 	stw	ra,4(sp)
 c00d72c:	df000015 	stw	fp,0(sp)
 c00d730:	d839883a 	mov	fp,sp
 c00d734:	01830074 	movhi	r6,3073
 c00d738:	31866504 	addi	r6,r6,6548
 c00d73c:	01430074 	movhi	r5,3073
 c00d740:	297fa804 	addi	r5,r5,-352
 c00d744:	01030074 	movhi	r4,3073
 c00d748:	21066504 	addi	r4,r4,6548
 c00d74c:	c00d6bc0 	call	c00d6bc <alt_load_section>
 c00d750:	01830034 	movhi	r6,3072
 c00d754:	31808c04 	addi	r6,r6,560
 c00d758:	01430034 	movhi	r5,3072
 c00d75c:	29400804 	addi	r5,r5,32
 c00d760:	01030034 	movhi	r4,3072
 c00d764:	21000804 	addi	r4,r4,32
 c00d768:	c00d6bc0 	call	c00d6bc <alt_load_section>
 c00d76c:	01830074 	movhi	r6,3073
 c00d770:	31bfa804 	addi	r6,r6,-352
 c00d774:	01430074 	movhi	r5,3073
 c00d778:	297ed104 	addi	r5,r5,-1212
 c00d77c:	01030074 	movhi	r4,3073
 c00d780:	213ed104 	addi	r4,r4,-1212
 c00d784:	c00d6bc0 	call	c00d6bc <alt_load_section>
 c00d788:	c00ea8c0 	call	c00ea8c <alt_dcache_flush_all>
 c00d78c:	c00ec4c0 	call	c00ec4c <alt_icache_flush_all>
 c00d790:	0001883a 	nop
 c00d794:	e037883a 	mov	sp,fp
 c00d798:	dfc00117 	ldw	ra,4(sp)
 c00d79c:	df000017 	ldw	fp,0(sp)
 c00d7a0:	dec00204 	addi	sp,sp,8
 c00d7a4:	f800283a 	ret

0c00d7a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00d7a8:	defffe04 	addi	sp,sp,-8
 c00d7ac:	dfc00115 	stw	ra,4(sp)
 c00d7b0:	df000015 	stw	fp,0(sp)
 c00d7b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00d7b8:	d0a00d17 	ldw	r2,-32716(gp)
 c00d7bc:	10000326 	beq	r2,zero,c00d7cc <alt_get_errno+0x24>
 c00d7c0:	d0a00d17 	ldw	r2,-32716(gp)
 c00d7c4:	103ee83a 	callr	r2
 c00d7c8:	00000106 	br	c00d7d0 <alt_get_errno+0x28>
 c00d7cc:	d0a6d504 	addi	r2,gp,-25772
}
 c00d7d0:	e037883a 	mov	sp,fp
 c00d7d4:	dfc00117 	ldw	ra,4(sp)
 c00d7d8:	df000017 	ldw	fp,0(sp)
 c00d7dc:	dec00204 	addi	sp,sp,8
 c00d7e0:	f800283a 	ret

0c00d7e4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 c00d7e4:	defff904 	addi	sp,sp,-28
 c00d7e8:	dfc00615 	stw	ra,24(sp)
 c00d7ec:	df000515 	stw	fp,20(sp)
 c00d7f0:	df000504 	addi	fp,sp,20
 c00d7f4:	e13ffd15 	stw	r4,-12(fp)
 c00d7f8:	e17ffe15 	stw	r5,-8(fp)
 c00d7fc:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 c00d800:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c00d804:	e0bffd17 	ldw	r2,-12(fp)
 c00d808:	10000816 	blt	r2,zero,c00d82c <lseek+0x48>
 c00d80c:	01400304 	movi	r5,12
 c00d810:	e13ffd17 	ldw	r4,-12(fp)
 c00d814:	c0005340 	call	c000534 <__mulsi3>
 c00d818:	1007883a 	mov	r3,r2
 c00d81c:	00830074 	movhi	r2,3073
 c00d820:	1081db04 	addi	r2,r2,1900
 c00d824:	1885883a 	add	r2,r3,r2
 c00d828:	00000106 	br	c00d830 <lseek+0x4c>
 c00d82c:	0005883a 	mov	r2,zero
 c00d830:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 c00d834:	e0bffc17 	ldw	r2,-16(fp)
 c00d838:	10001026 	beq	r2,zero,c00d87c <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 c00d83c:	e0bffc17 	ldw	r2,-16(fp)
 c00d840:	10800017 	ldw	r2,0(r2)
 c00d844:	10800717 	ldw	r2,28(r2)
 c00d848:	10000926 	beq	r2,zero,c00d870 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 c00d84c:	e0bffc17 	ldw	r2,-16(fp)
 c00d850:	10800017 	ldw	r2,0(r2)
 c00d854:	10800717 	ldw	r2,28(r2)
 c00d858:	e1bfff17 	ldw	r6,-4(fp)
 c00d85c:	e17ffe17 	ldw	r5,-8(fp)
 c00d860:	e13ffc17 	ldw	r4,-16(fp)
 c00d864:	103ee83a 	callr	r2
 c00d868:	e0bffb15 	stw	r2,-20(fp)
 c00d86c:	00000506 	br	c00d884 <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 c00d870:	00bfde84 	movi	r2,-134
 c00d874:	e0bffb15 	stw	r2,-20(fp)
 c00d878:	00000206 	br	c00d884 <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 c00d87c:	00bfebc4 	movi	r2,-81
 c00d880:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 c00d884:	e0bffb17 	ldw	r2,-20(fp)
 c00d888:	1000070e 	bge	r2,zero,c00d8a8 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 c00d88c:	c00d7a80 	call	c00d7a8 <alt_get_errno>
 c00d890:	1007883a 	mov	r3,r2
 c00d894:	e0bffb17 	ldw	r2,-20(fp)
 c00d898:	0085c83a 	sub	r2,zero,r2
 c00d89c:	18800015 	stw	r2,0(r3)
    rc = -1;
 c00d8a0:	00bfffc4 	movi	r2,-1
 c00d8a4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 c00d8a8:	e0bffb17 	ldw	r2,-20(fp)
}
 c00d8ac:	e037883a 	mov	sp,fp
 c00d8b0:	dfc00117 	ldw	ra,4(sp)
 c00d8b4:	df000017 	ldw	fp,0(sp)
 c00d8b8:	dec00204 	addi	sp,sp,8
 c00d8bc:	f800283a 	ret

0c00d8c0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 c00d8c0:	defffd04 	addi	sp,sp,-12
 c00d8c4:	dfc00215 	stw	ra,8(sp)
 c00d8c8:	df000115 	stw	fp,4(sp)
 c00d8cc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 c00d8d0:	0009883a 	mov	r4,zero
 c00d8d4:	c00dd680 	call	c00dd68 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 c00d8d8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 c00d8dc:	c00dda00 	call	c00dda0 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 c00d8e0:	01830074 	movhi	r6,3073
 c00d8e4:	31bf9e04 	addi	r6,r6,-392
 c00d8e8:	01430074 	movhi	r5,3073
 c00d8ec:	297f9e04 	addi	r5,r5,-392
 c00d8f0:	01030074 	movhi	r4,3073
 c00d8f4:	213f9e04 	addi	r4,r4,-392
 c00d8f8:	c00eff00 	call	c00eff0 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 c00d8fc:	c00eb8c0 	call	c00eb8c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 c00d900:	01030074 	movhi	r4,3073
 c00d904:	213afb04 	addi	r4,r4,-5140
 c00d908:	c00f7b00 	call	c00f7b0 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 c00d90c:	d0a6d617 	ldw	r2,-25768(gp)
 c00d910:	d0e6d717 	ldw	r3,-25764(gp)
 c00d914:	d126d817 	ldw	r4,-25760(gp)
 c00d918:	200d883a 	mov	r6,r4
 c00d91c:	180b883a 	mov	r5,r3
 c00d920:	1009883a 	mov	r4,r2
 c00d924:	c00026c0 	call	c00026c <main>
 c00d928:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 c00d92c:	01000044 	movi	r4,1
 c00d930:	c00d3dc0 	call	c00d3dc <close>
  exit (result);
 c00d934:	e13fff17 	ldw	r4,-4(fp)
 c00d938:	c00f7c40 	call	c00f7c4 <exit>

0c00d93c <__malloc_lock>:
 c00d93c:	defffe04 	addi	sp,sp,-8
 c00d940:	df000115 	stw	fp,4(sp)
 c00d944:	df000104 	addi	fp,sp,4
 c00d948:	e13fff15 	stw	r4,-4(fp)
 c00d94c:	0001883a 	nop
 c00d950:	e037883a 	mov	sp,fp
 c00d954:	df000017 	ldw	fp,0(sp)
 c00d958:	dec00104 	addi	sp,sp,4
 c00d95c:	f800283a 	ret

0c00d960 <__malloc_unlock>:
 c00d960:	defffe04 	addi	sp,sp,-8
 c00d964:	df000115 	stw	fp,4(sp)
 c00d968:	df000104 	addi	fp,sp,4
 c00d96c:	e13fff15 	stw	r4,-4(fp)
 c00d970:	0001883a 	nop
 c00d974:	e037883a 	mov	sp,fp
 c00d978:	df000017 	ldw	fp,0(sp)
 c00d97c:	dec00104 	addi	sp,sp,4
 c00d980:	f800283a 	ret

0c00d984 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00d984:	defffe04 	addi	sp,sp,-8
 c00d988:	dfc00115 	stw	ra,4(sp)
 c00d98c:	df000015 	stw	fp,0(sp)
 c00d990:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00d994:	d0a00d17 	ldw	r2,-32716(gp)
 c00d998:	10000326 	beq	r2,zero,c00d9a8 <alt_get_errno+0x24>
 c00d99c:	d0a00d17 	ldw	r2,-32716(gp)
 c00d9a0:	103ee83a 	callr	r2
 c00d9a4:	00000106 	br	c00d9ac <alt_get_errno+0x28>
 c00d9a8:	d0a6d504 	addi	r2,gp,-25772
}
 c00d9ac:	e037883a 	mov	sp,fp
 c00d9b0:	dfc00117 	ldw	ra,4(sp)
 c00d9b4:	df000017 	ldw	fp,0(sp)
 c00d9b8:	dec00204 	addi	sp,sp,8
 c00d9bc:	f800283a 	ret

0c00d9c0 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 c00d9c0:	defff904 	addi	sp,sp,-28
 c00d9c4:	dfc00615 	stw	ra,24(sp)
 c00d9c8:	df000515 	stw	fp,20(sp)
 c00d9cc:	df000504 	addi	fp,sp,20
 c00d9d0:	e13ffd15 	stw	r4,-12(fp)
 c00d9d4:	e17ffe15 	stw	r5,-8(fp)
 c00d9d8:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c00d9dc:	e0bffd17 	ldw	r2,-12(fp)
 c00d9e0:	10000816 	blt	r2,zero,c00da04 <read+0x44>
 c00d9e4:	01400304 	movi	r5,12
 c00d9e8:	e13ffd17 	ldw	r4,-12(fp)
 c00d9ec:	c0005340 	call	c000534 <__mulsi3>
 c00d9f0:	1007883a 	mov	r3,r2
 c00d9f4:	00830074 	movhi	r2,3073
 c00d9f8:	1081db04 	addi	r2,r2,1900
 c00d9fc:	1885883a 	add	r2,r3,r2
 c00da00:	00000106 	br	c00da08 <read+0x48>
 c00da04:	0005883a 	mov	r2,zero
 c00da08:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 c00da0c:	e0bffb17 	ldw	r2,-20(fp)
 c00da10:	10002226 	beq	r2,zero,c00da9c <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 c00da14:	e0bffb17 	ldw	r2,-20(fp)
 c00da18:	10800217 	ldw	r2,8(r2)
 c00da1c:	108000cc 	andi	r2,r2,3
 c00da20:	10800060 	cmpeqi	r2,r2,1
 c00da24:	1000181e 	bne	r2,zero,c00da88 <read+0xc8>
        (fd->dev->read))
 c00da28:	e0bffb17 	ldw	r2,-20(fp)
 c00da2c:	10800017 	ldw	r2,0(r2)
 c00da30:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 c00da34:	10001426 	beq	r2,zero,c00da88 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 c00da38:	e0bffb17 	ldw	r2,-20(fp)
 c00da3c:	10800017 	ldw	r2,0(r2)
 c00da40:	10800517 	ldw	r2,20(r2)
 c00da44:	e0ffff17 	ldw	r3,-4(fp)
 c00da48:	180d883a 	mov	r6,r3
 c00da4c:	e17ffe17 	ldw	r5,-8(fp)
 c00da50:	e13ffb17 	ldw	r4,-20(fp)
 c00da54:	103ee83a 	callr	r2
 c00da58:	e0bffc15 	stw	r2,-16(fp)
 c00da5c:	e0bffc17 	ldw	r2,-16(fp)
 c00da60:	1000070e 	bge	r2,zero,c00da80 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 c00da64:	c00d9840 	call	c00d984 <alt_get_errno>
 c00da68:	1007883a 	mov	r3,r2
 c00da6c:	e0bffc17 	ldw	r2,-16(fp)
 c00da70:	0085c83a 	sub	r2,zero,r2
 c00da74:	18800015 	stw	r2,0(r3)
          return -1;
 c00da78:	00bfffc4 	movi	r2,-1
 c00da7c:	00000c06 	br	c00dab0 <read+0xf0>
        }
        return rval;
 c00da80:	e0bffc17 	ldw	r2,-16(fp)
 c00da84:	00000a06 	br	c00dab0 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 c00da88:	c00d9840 	call	c00d984 <alt_get_errno>
 c00da8c:	1007883a 	mov	r3,r2
 c00da90:	00800344 	movi	r2,13
 c00da94:	18800015 	stw	r2,0(r3)
 c00da98:	00000406 	br	c00daac <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 c00da9c:	c00d9840 	call	c00d984 <alt_get_errno>
 c00daa0:	1007883a 	mov	r3,r2
 c00daa4:	00801444 	movi	r2,81
 c00daa8:	18800015 	stw	r2,0(r3)
  }
  return -1;
 c00daac:	00bfffc4 	movi	r2,-1
}
 c00dab0:	e037883a 	mov	sp,fp
 c00dab4:	dfc00117 	ldw	ra,4(sp)
 c00dab8:	df000017 	ldw	fp,0(sp)
 c00dabc:	dec00204 	addi	sp,sp,8
 c00dac0:	f800283a 	ret

0c00dac4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 c00dac4:	defffc04 	addi	sp,sp,-16
 c00dac8:	dfc00315 	stw	ra,12(sp)
 c00dacc:	df000215 	stw	fp,8(sp)
 c00dad0:	dc000115 	stw	r16,4(sp)
 c00dad4:	df000204 	addi	fp,sp,8
 c00dad8:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 c00dadc:	e0bffe17 	ldw	r2,-8(fp)
 c00dae0:	108000d0 	cmplti	r2,r2,3
 c00dae4:	1000111e 	bne	r2,zero,c00db2c <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 c00dae8:	04030074 	movhi	r16,3073
 c00daec:	8401db04 	addi	r16,r16,1900
 c00daf0:	e0bffe17 	ldw	r2,-8(fp)
 c00daf4:	01400304 	movi	r5,12
 c00daf8:	1009883a 	mov	r4,r2
 c00dafc:	c0005340 	call	c000534 <__mulsi3>
 c00db00:	8085883a 	add	r2,r16,r2
 c00db04:	10800204 	addi	r2,r2,8
 c00db08:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 c00db0c:	04030074 	movhi	r16,3073
 c00db10:	8401db04 	addi	r16,r16,1900
 c00db14:	e0bffe17 	ldw	r2,-8(fp)
 c00db18:	01400304 	movi	r5,12
 c00db1c:	1009883a 	mov	r4,r2
 c00db20:	c0005340 	call	c000534 <__mulsi3>
 c00db24:	8085883a 	add	r2,r16,r2
 c00db28:	10000015 	stw	zero,0(r2)
  }
}
 c00db2c:	0001883a 	nop
 c00db30:	e6ffff04 	addi	sp,fp,-4
 c00db34:	dfc00217 	ldw	ra,8(sp)
 c00db38:	df000117 	ldw	fp,4(sp)
 c00db3c:	dc000017 	ldw	r16,0(sp)
 c00db40:	dec00304 	addi	sp,sp,12
 c00db44:	f800283a 	ret

0c00db48 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 c00db48:	defff904 	addi	sp,sp,-28
 c00db4c:	df000615 	stw	fp,24(sp)
 c00db50:	df000604 	addi	fp,sp,24
 c00db54:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00db58:	0005303a 	rdctl	r2,status
 c00db5c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00db60:	e0fffe17 	ldw	r3,-8(fp)
 c00db64:	00bfff84 	movi	r2,-2
 c00db68:	1884703a 	and	r2,r3,r2
 c00db6c:	1001703a 	wrctl	status,r2
  
  return context;
 c00db70:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 c00db74:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 c00db78:	d0a00e17 	ldw	r2,-32712(gp)
 c00db7c:	10c000c4 	addi	r3,r2,3
 c00db80:	00bfff04 	movi	r2,-4
 c00db84:	1884703a 	and	r2,r3,r2
 c00db88:	d0a00e15 	stw	r2,-32712(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 c00db8c:	d0e00e17 	ldw	r3,-32712(gp)
 c00db90:	e0bfff17 	ldw	r2,-4(fp)
 c00db94:	1887883a 	add	r3,r3,r2
 c00db98:	00840034 	movhi	r2,4096
 c00db9c:	10800004 	addi	r2,r2,0
 c00dba0:	10c0062e 	bgeu	r2,r3,c00dbbc <sbrk+0x74>
 c00dba4:	e0bffb17 	ldw	r2,-20(fp)
 c00dba8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00dbac:	e0bffa17 	ldw	r2,-24(fp)
 c00dbb0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 c00dbb4:	00bfffc4 	movi	r2,-1
 c00dbb8:	00000b06 	br	c00dbe8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 c00dbbc:	d0a00e17 	ldw	r2,-32712(gp)
 c00dbc0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 c00dbc4:	d0e00e17 	ldw	r3,-32712(gp)
 c00dbc8:	e0bfff17 	ldw	r2,-4(fp)
 c00dbcc:	1885883a 	add	r2,r3,r2
 c00dbd0:	d0a00e15 	stw	r2,-32712(gp)
 c00dbd4:	e0bffb17 	ldw	r2,-20(fp)
 c00dbd8:	e0bffc15 	stw	r2,-16(fp)
 c00dbdc:	e0bffc17 	ldw	r2,-16(fp)
 c00dbe0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 c00dbe4:	e0bffd17 	ldw	r2,-12(fp)
} 
 c00dbe8:	e037883a 	mov	sp,fp
 c00dbec:	df000017 	ldw	fp,0(sp)
 c00dbf0:	dec00104 	addi	sp,sp,4
 c00dbf4:	f800283a 	ret

0c00dbf8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00dbf8:	defffe04 	addi	sp,sp,-8
 c00dbfc:	dfc00115 	stw	ra,4(sp)
 c00dc00:	df000015 	stw	fp,0(sp)
 c00dc04:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00dc08:	d0a00d17 	ldw	r2,-32716(gp)
 c00dc0c:	10000326 	beq	r2,zero,c00dc1c <alt_get_errno+0x24>
 c00dc10:	d0a00d17 	ldw	r2,-32716(gp)
 c00dc14:	103ee83a 	callr	r2
 c00dc18:	00000106 	br	c00dc20 <alt_get_errno+0x28>
 c00dc1c:	d0a6d504 	addi	r2,gp,-25772
}
 c00dc20:	e037883a 	mov	sp,fp
 c00dc24:	dfc00117 	ldw	ra,4(sp)
 c00dc28:	df000017 	ldw	fp,0(sp)
 c00dc2c:	dec00204 	addi	sp,sp,8
 c00dc30:	f800283a 	ret

0c00dc34 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 c00dc34:	defff904 	addi	sp,sp,-28
 c00dc38:	dfc00615 	stw	ra,24(sp)
 c00dc3c:	df000515 	stw	fp,20(sp)
 c00dc40:	df000504 	addi	fp,sp,20
 c00dc44:	e13ffd15 	stw	r4,-12(fp)
 c00dc48:	e17ffe15 	stw	r5,-8(fp)
 c00dc4c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 c00dc50:	e0bffd17 	ldw	r2,-12(fp)
 c00dc54:	10000816 	blt	r2,zero,c00dc78 <write+0x44>
 c00dc58:	01400304 	movi	r5,12
 c00dc5c:	e13ffd17 	ldw	r4,-12(fp)
 c00dc60:	c0005340 	call	c000534 <__mulsi3>
 c00dc64:	1007883a 	mov	r3,r2
 c00dc68:	00830074 	movhi	r2,3073
 c00dc6c:	1081db04 	addi	r2,r2,1900
 c00dc70:	1885883a 	add	r2,r3,r2
 c00dc74:	00000106 	br	c00dc7c <write+0x48>
 c00dc78:	0005883a 	mov	r2,zero
 c00dc7c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 c00dc80:	e0bffb17 	ldw	r2,-20(fp)
 c00dc84:	10002126 	beq	r2,zero,c00dd0c <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 c00dc88:	e0bffb17 	ldw	r2,-20(fp)
 c00dc8c:	10800217 	ldw	r2,8(r2)
 c00dc90:	108000cc 	andi	r2,r2,3
 c00dc94:	10001826 	beq	r2,zero,c00dcf8 <write+0xc4>
 c00dc98:	e0bffb17 	ldw	r2,-20(fp)
 c00dc9c:	10800017 	ldw	r2,0(r2)
 c00dca0:	10800617 	ldw	r2,24(r2)
 c00dca4:	10001426 	beq	r2,zero,c00dcf8 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 c00dca8:	e0bffb17 	ldw	r2,-20(fp)
 c00dcac:	10800017 	ldw	r2,0(r2)
 c00dcb0:	10800617 	ldw	r2,24(r2)
 c00dcb4:	e0ffff17 	ldw	r3,-4(fp)
 c00dcb8:	180d883a 	mov	r6,r3
 c00dcbc:	e17ffe17 	ldw	r5,-8(fp)
 c00dcc0:	e13ffb17 	ldw	r4,-20(fp)
 c00dcc4:	103ee83a 	callr	r2
 c00dcc8:	e0bffc15 	stw	r2,-16(fp)
 c00dccc:	e0bffc17 	ldw	r2,-16(fp)
 c00dcd0:	1000070e 	bge	r2,zero,c00dcf0 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 c00dcd4:	c00dbf80 	call	c00dbf8 <alt_get_errno>
 c00dcd8:	1007883a 	mov	r3,r2
 c00dcdc:	e0bffc17 	ldw	r2,-16(fp)
 c00dce0:	0085c83a 	sub	r2,zero,r2
 c00dce4:	18800015 	stw	r2,0(r3)
        return -1;
 c00dce8:	00bfffc4 	movi	r2,-1
 c00dcec:	00000c06 	br	c00dd20 <write+0xec>
      }
      return rval;
 c00dcf0:	e0bffc17 	ldw	r2,-16(fp)
 c00dcf4:	00000a06 	br	c00dd20 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 c00dcf8:	c00dbf80 	call	c00dbf8 <alt_get_errno>
 c00dcfc:	1007883a 	mov	r3,r2
 c00dd00:	00800344 	movi	r2,13
 c00dd04:	18800015 	stw	r2,0(r3)
 c00dd08:	00000406 	br	c00dd1c <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 c00dd0c:	c00dbf80 	call	c00dbf8 <alt_get_errno>
 c00dd10:	1007883a 	mov	r3,r2
 c00dd14:	00801444 	movi	r2,81
 c00dd18:	18800015 	stw	r2,0(r3)
  }
  return -1;
 c00dd1c:	00bfffc4 	movi	r2,-1
}
 c00dd20:	e037883a 	mov	sp,fp
 c00dd24:	dfc00117 	ldw	ra,4(sp)
 c00dd28:	df000017 	ldw	fp,0(sp)
 c00dd2c:	dec00204 	addi	sp,sp,8
 c00dd30:	f800283a 	ret

0c00dd34 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 c00dd34:	defffd04 	addi	sp,sp,-12
 c00dd38:	dfc00215 	stw	ra,8(sp)
 c00dd3c:	df000115 	stw	fp,4(sp)
 c00dd40:	df000104 	addi	fp,sp,4
 c00dd44:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 c00dd48:	d1600a04 	addi	r5,gp,-32728
 c00dd4c:	e13fff17 	ldw	r4,-4(fp)
 c00dd50:	c00eae80 	call	c00eae8 <alt_dev_llist_insert>
}
 c00dd54:	e037883a 	mov	sp,fp
 c00dd58:	dfc00117 	ldw	ra,4(sp)
 c00dd5c:	df000017 	ldw	fp,0(sp)
 c00dd60:	dec00204 	addi	sp,sp,8
 c00dd64:	f800283a 	ret

0c00dd68 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 c00dd68:	defffd04 	addi	sp,sp,-12
 c00dd6c:	dfc00215 	stw	ra,8(sp)
 c00dd70:	df000115 	stw	fp,4(sp)
 c00dd74:	df000104 	addi	fp,sp,4
 c00dd78:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 c00dd7c:	c00f4940 	call	c00f494 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 c00dd80:	00800044 	movi	r2,1
 c00dd84:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 c00dd88:	0001883a 	nop
 c00dd8c:	e037883a 	mov	sp,fp
 c00dd90:	dfc00117 	ldw	ra,4(sp)
 c00dd94:	df000017 	ldw	fp,0(sp)
 c00dd98:	dec00204 	addi	sp,sp,8
 c00dd9c:	f800283a 	ret

0c00dda0 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 c00dda0:	defffe04 	addi	sp,sp,-8
 c00dda4:	dfc00115 	stw	ra,4(sp)
 c00dda8:	df000015 	stw	fp,0(sp)
 c00ddac:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER_0, timer_0);
 c00ddb0:	01c0fa04 	movi	r7,1000
 c00ddb4:	01800084 	movi	r6,2
 c00ddb8:	000b883a 	mov	r5,zero
 c00ddbc:	01002004 	movi	r4,128
 c00ddc0:	c00e8e40 	call	c00e8e4 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
 c00ddc4:	01800044 	movi	r6,1
 c00ddc8:	000b883a 	mov	r5,zero
 c00ddcc:	01030074 	movhi	r4,3073
 c00ddd0:	21024504 	addi	r4,r4,2324
 c00ddd4:	c00df680 	call	c00df68 <altera_avalon_jtag_uart_init>
 c00ddd8:	01030074 	movhi	r4,3073
 c00dddc:	21023b04 	addi	r4,r4,2284
 c00dde0:	c00dd340 	call	c00dd34 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI_0, spi_0);
 c00dde4:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
 c00dde8:	0001883a 	nop
}
 c00ddec:	0001883a 	nop
 c00ddf0:	e037883a 	mov	sp,fp
 c00ddf4:	dfc00117 	ldw	ra,4(sp)
 c00ddf8:	df000017 	ldw	fp,0(sp)
 c00ddfc:	dec00204 	addi	sp,sp,8
 c00de00:	f800283a 	ret

0c00de04 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 c00de04:	defffa04 	addi	sp,sp,-24
 c00de08:	dfc00515 	stw	ra,20(sp)
 c00de0c:	df000415 	stw	fp,16(sp)
 c00de10:	df000404 	addi	fp,sp,16
 c00de14:	e13ffd15 	stw	r4,-12(fp)
 c00de18:	e17ffe15 	stw	r5,-8(fp)
 c00de1c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c00de20:	e0bffd17 	ldw	r2,-12(fp)
 c00de24:	10800017 	ldw	r2,0(r2)
 c00de28:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 c00de2c:	e0bffc17 	ldw	r2,-16(fp)
 c00de30:	10c00a04 	addi	r3,r2,40
 c00de34:	e0bffd17 	ldw	r2,-12(fp)
 c00de38:	10800217 	ldw	r2,8(r2)
 c00de3c:	100f883a 	mov	r7,r2
 c00de40:	e1bfff17 	ldw	r6,-4(fp)
 c00de44:	e17ffe17 	ldw	r5,-8(fp)
 c00de48:	1809883a 	mov	r4,r3
 c00de4c:	c00e42c0 	call	c00e42c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 c00de50:	e037883a 	mov	sp,fp
 c00de54:	dfc00117 	ldw	ra,4(sp)
 c00de58:	df000017 	ldw	fp,0(sp)
 c00de5c:	dec00204 	addi	sp,sp,8
 c00de60:	f800283a 	ret

0c00de64 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 c00de64:	defffa04 	addi	sp,sp,-24
 c00de68:	dfc00515 	stw	ra,20(sp)
 c00de6c:	df000415 	stw	fp,16(sp)
 c00de70:	df000404 	addi	fp,sp,16
 c00de74:	e13ffd15 	stw	r4,-12(fp)
 c00de78:	e17ffe15 	stw	r5,-8(fp)
 c00de7c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c00de80:	e0bffd17 	ldw	r2,-12(fp)
 c00de84:	10800017 	ldw	r2,0(r2)
 c00de88:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 c00de8c:	e0bffc17 	ldw	r2,-16(fp)
 c00de90:	10c00a04 	addi	r3,r2,40
 c00de94:	e0bffd17 	ldw	r2,-12(fp)
 c00de98:	10800217 	ldw	r2,8(r2)
 c00de9c:	100f883a 	mov	r7,r2
 c00dea0:	e1bfff17 	ldw	r6,-4(fp)
 c00dea4:	e17ffe17 	ldw	r5,-8(fp)
 c00dea8:	1809883a 	mov	r4,r3
 c00deac:	c00e6480 	call	c00e648 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 c00deb0:	e037883a 	mov	sp,fp
 c00deb4:	dfc00117 	ldw	ra,4(sp)
 c00deb8:	df000017 	ldw	fp,0(sp)
 c00debc:	dec00204 	addi	sp,sp,8
 c00dec0:	f800283a 	ret

0c00dec4 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 c00dec4:	defffc04 	addi	sp,sp,-16
 c00dec8:	dfc00315 	stw	ra,12(sp)
 c00decc:	df000215 	stw	fp,8(sp)
 c00ded0:	df000204 	addi	fp,sp,8
 c00ded4:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 c00ded8:	e0bfff17 	ldw	r2,-4(fp)
 c00dedc:	10800017 	ldw	r2,0(r2)
 c00dee0:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 c00dee4:	e0bffe17 	ldw	r2,-8(fp)
 c00dee8:	10c00a04 	addi	r3,r2,40
 c00deec:	e0bfff17 	ldw	r2,-4(fp)
 c00def0:	10800217 	ldw	r2,8(r2)
 c00def4:	100b883a 	mov	r5,r2
 c00def8:	1809883a 	mov	r4,r3
 c00defc:	c00e2d40 	call	c00e2d4 <altera_avalon_jtag_uart_close>
}
 c00df00:	e037883a 	mov	sp,fp
 c00df04:	dfc00117 	ldw	ra,4(sp)
 c00df08:	df000017 	ldw	fp,0(sp)
 c00df0c:	dec00204 	addi	sp,sp,8
 c00df10:	f800283a 	ret

0c00df14 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 c00df14:	defffa04 	addi	sp,sp,-24
 c00df18:	dfc00515 	stw	ra,20(sp)
 c00df1c:	df000415 	stw	fp,16(sp)
 c00df20:	df000404 	addi	fp,sp,16
 c00df24:	e13ffd15 	stw	r4,-12(fp)
 c00df28:	e17ffe15 	stw	r5,-8(fp)
 c00df2c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 c00df30:	e0bffd17 	ldw	r2,-12(fp)
 c00df34:	10800017 	ldw	r2,0(r2)
 c00df38:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 c00df3c:	e0bffc17 	ldw	r2,-16(fp)
 c00df40:	10800a04 	addi	r2,r2,40
 c00df44:	e1bfff17 	ldw	r6,-4(fp)
 c00df48:	e17ffe17 	ldw	r5,-8(fp)
 c00df4c:	1009883a 	mov	r4,r2
 c00df50:	c00e33c0 	call	c00e33c <altera_avalon_jtag_uart_ioctl>
}
 c00df54:	e037883a 	mov	sp,fp
 c00df58:	dfc00117 	ldw	ra,4(sp)
 c00df5c:	df000017 	ldw	fp,0(sp)
 c00df60:	dec00204 	addi	sp,sp,8
 c00df64:	f800283a 	ret

0c00df68 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 c00df68:	defffa04 	addi	sp,sp,-24
 c00df6c:	dfc00515 	stw	ra,20(sp)
 c00df70:	df000415 	stw	fp,16(sp)
 c00df74:	df000404 	addi	fp,sp,16
 c00df78:	e13ffd15 	stw	r4,-12(fp)
 c00df7c:	e17ffe15 	stw	r5,-8(fp)
 c00df80:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c00df84:	e0bffd17 	ldw	r2,-12(fp)
 c00df88:	00c00044 	movi	r3,1
 c00df8c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 c00df90:	e0bffd17 	ldw	r2,-12(fp)
 c00df94:	10800017 	ldw	r2,0(r2)
 c00df98:	10800104 	addi	r2,r2,4
 c00df9c:	1007883a 	mov	r3,r2
 c00dfa0:	e0bffd17 	ldw	r2,-12(fp)
 c00dfa4:	10800817 	ldw	r2,32(r2)
 c00dfa8:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 c00dfac:	e0bffe17 	ldw	r2,-8(fp)
 c00dfb0:	e0ffff17 	ldw	r3,-4(fp)
 c00dfb4:	d8000015 	stw	zero,0(sp)
 c00dfb8:	e1fffd17 	ldw	r7,-12(fp)
 c00dfbc:	01830074 	movhi	r6,3073
 c00dfc0:	31b80a04 	addi	r6,r6,-8152
 c00dfc4:	180b883a 	mov	r5,r3
 c00dfc8:	1009883a 	mov	r4,r2
 c00dfcc:	c00ec6c0 	call	c00ec6c <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 c00dfd0:	e0bffd17 	ldw	r2,-12(fp)
 c00dfd4:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 c00dfd8:	e0bffd17 	ldw	r2,-12(fp)
 c00dfdc:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 c00dfe0:	d0e6da17 	ldw	r3,-25752(gp)
 c00dfe4:	e1fffd17 	ldw	r7,-12(fp)
 c00dfe8:	01830074 	movhi	r6,3073
 c00dfec:	31b88d04 	addi	r6,r6,-7628
 c00dff0:	180b883a 	mov	r5,r3
 c00dff4:	1009883a 	mov	r4,r2
 c00dff8:	c00e9600 	call	c00e960 <alt_alarm_start>
 c00dffc:	1000040e 	bge	r2,zero,c00e010 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 c00e000:	e0fffd17 	ldw	r3,-12(fp)
 c00e004:	00a00034 	movhi	r2,32768
 c00e008:	10bfffc4 	addi	r2,r2,-1
 c00e00c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 c00e010:	0001883a 	nop
 c00e014:	e037883a 	mov	sp,fp
 c00e018:	dfc00117 	ldw	ra,4(sp)
 c00e01c:	df000017 	ldw	fp,0(sp)
 c00e020:	dec00204 	addi	sp,sp,8
 c00e024:	f800283a 	ret

0c00e028 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 c00e028:	defff804 	addi	sp,sp,-32
 c00e02c:	df000715 	stw	fp,28(sp)
 c00e030:	df000704 	addi	fp,sp,28
 c00e034:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 c00e038:	e0bfff17 	ldw	r2,-4(fp)
 c00e03c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 c00e040:	e0bffb17 	ldw	r2,-20(fp)
 c00e044:	10800017 	ldw	r2,0(r2)
 c00e048:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c00e04c:	e0bffc17 	ldw	r2,-16(fp)
 c00e050:	10800104 	addi	r2,r2,4
 c00e054:	10800037 	ldwio	r2,0(r2)
 c00e058:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 c00e05c:	e0bffd17 	ldw	r2,-12(fp)
 c00e060:	1080c00c 	andi	r2,r2,768
 c00e064:	10006d26 	beq	r2,zero,c00e21c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 c00e068:	e0bffd17 	ldw	r2,-12(fp)
 c00e06c:	1080400c 	andi	r2,r2,256
 c00e070:	10003526 	beq	r2,zero,c00e148 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 c00e074:	00800074 	movhi	r2,1
 c00e078:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c00e07c:	e0bffb17 	ldw	r2,-20(fp)
 c00e080:	10800a17 	ldw	r2,40(r2)
 c00e084:	10800044 	addi	r2,r2,1
 c00e088:	1081ffcc 	andi	r2,r2,2047
 c00e08c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 c00e090:	e0bffb17 	ldw	r2,-20(fp)
 c00e094:	10c00b17 	ldw	r3,44(r2)
 c00e098:	e0bffe17 	ldw	r2,-8(fp)
 c00e09c:	18801526 	beq	r3,r2,c00e0f4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 c00e0a0:	e0bffc17 	ldw	r2,-16(fp)
 c00e0a4:	10800037 	ldwio	r2,0(r2)
 c00e0a8:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 c00e0ac:	e0bff917 	ldw	r2,-28(fp)
 c00e0b0:	10a0000c 	andi	r2,r2,32768
 c00e0b4:	10001126 	beq	r2,zero,c00e0fc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 c00e0b8:	e0bffb17 	ldw	r2,-20(fp)
 c00e0bc:	10800a17 	ldw	r2,40(r2)
 c00e0c0:	e0fff917 	ldw	r3,-28(fp)
 c00e0c4:	1809883a 	mov	r4,r3
 c00e0c8:	e0fffb17 	ldw	r3,-20(fp)
 c00e0cc:	1885883a 	add	r2,r3,r2
 c00e0d0:	10800e04 	addi	r2,r2,56
 c00e0d4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c00e0d8:	e0bffb17 	ldw	r2,-20(fp)
 c00e0dc:	10800a17 	ldw	r2,40(r2)
 c00e0e0:	10800044 	addi	r2,r2,1
 c00e0e4:	10c1ffcc 	andi	r3,r2,2047
 c00e0e8:	e0bffb17 	ldw	r2,-20(fp)
 c00e0ec:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 c00e0f0:	003fe206 	br	c00e07c <__alt_data_end+0xfc00e07c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 c00e0f4:	0001883a 	nop
 c00e0f8:	00000106 	br	c00e100 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 c00e0fc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 c00e100:	e0bff917 	ldw	r2,-28(fp)
 c00e104:	10bfffec 	andhi	r2,r2,65535
 c00e108:	10000f26 	beq	r2,zero,c00e148 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c00e10c:	e0bffb17 	ldw	r2,-20(fp)
 c00e110:	10c00817 	ldw	r3,32(r2)
 c00e114:	00bfff84 	movi	r2,-2
 c00e118:	1886703a 	and	r3,r3,r2
 c00e11c:	e0bffb17 	ldw	r2,-20(fp)
 c00e120:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 c00e124:	e0bffc17 	ldw	r2,-16(fp)
 c00e128:	10800104 	addi	r2,r2,4
 c00e12c:	1007883a 	mov	r3,r2
 c00e130:	e0bffb17 	ldw	r2,-20(fp)
 c00e134:	10800817 	ldw	r2,32(r2)
 c00e138:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c00e13c:	e0bffc17 	ldw	r2,-16(fp)
 c00e140:	10800104 	addi	r2,r2,4
 c00e144:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 c00e148:	e0bffd17 	ldw	r2,-12(fp)
 c00e14c:	1080800c 	andi	r2,r2,512
 c00e150:	103fbe26 	beq	r2,zero,c00e04c <__alt_data_end+0xfc00e04c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 c00e154:	e0bffd17 	ldw	r2,-12(fp)
 c00e158:	1004d43a 	srli	r2,r2,16
 c00e15c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 c00e160:	00001406 	br	c00e1b4 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 c00e164:	e0bffc17 	ldw	r2,-16(fp)
 c00e168:	e0fffb17 	ldw	r3,-20(fp)
 c00e16c:	18c00d17 	ldw	r3,52(r3)
 c00e170:	e13ffb17 	ldw	r4,-20(fp)
 c00e174:	20c7883a 	add	r3,r4,r3
 c00e178:	18c20e04 	addi	r3,r3,2104
 c00e17c:	18c00003 	ldbu	r3,0(r3)
 c00e180:	18c03fcc 	andi	r3,r3,255
 c00e184:	18c0201c 	xori	r3,r3,128
 c00e188:	18ffe004 	addi	r3,r3,-128
 c00e18c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c00e190:	e0bffb17 	ldw	r2,-20(fp)
 c00e194:	10800d17 	ldw	r2,52(r2)
 c00e198:	10800044 	addi	r2,r2,1
 c00e19c:	10c1ffcc 	andi	r3,r2,2047
 c00e1a0:	e0bffb17 	ldw	r2,-20(fp)
 c00e1a4:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 c00e1a8:	e0bffa17 	ldw	r2,-24(fp)
 c00e1ac:	10bfffc4 	addi	r2,r2,-1
 c00e1b0:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 c00e1b4:	e0bffa17 	ldw	r2,-24(fp)
 c00e1b8:	10000526 	beq	r2,zero,c00e1d0 <altera_avalon_jtag_uart_irq+0x1a8>
 c00e1bc:	e0bffb17 	ldw	r2,-20(fp)
 c00e1c0:	10c00d17 	ldw	r3,52(r2)
 c00e1c4:	e0bffb17 	ldw	r2,-20(fp)
 c00e1c8:	10800c17 	ldw	r2,48(r2)
 c00e1cc:	18bfe51e 	bne	r3,r2,c00e164 <__alt_data_end+0xfc00e164>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 c00e1d0:	e0bffa17 	ldw	r2,-24(fp)
 c00e1d4:	103f9d26 	beq	r2,zero,c00e04c <__alt_data_end+0xfc00e04c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 c00e1d8:	e0bffb17 	ldw	r2,-20(fp)
 c00e1dc:	10c00817 	ldw	r3,32(r2)
 c00e1e0:	00bfff44 	movi	r2,-3
 c00e1e4:	1886703a 	and	r3,r3,r2
 c00e1e8:	e0bffb17 	ldw	r2,-20(fp)
 c00e1ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c00e1f0:	e0bffb17 	ldw	r2,-20(fp)
 c00e1f4:	10800017 	ldw	r2,0(r2)
 c00e1f8:	10800104 	addi	r2,r2,4
 c00e1fc:	1007883a 	mov	r3,r2
 c00e200:	e0bffb17 	ldw	r2,-20(fp)
 c00e204:	10800817 	ldw	r2,32(r2)
 c00e208:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 c00e20c:	e0bffc17 	ldw	r2,-16(fp)
 c00e210:	10800104 	addi	r2,r2,4
 c00e214:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 c00e218:	003f8c06 	br	c00e04c <__alt_data_end+0xfc00e04c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 c00e21c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 c00e220:	0001883a 	nop
 c00e224:	e037883a 	mov	sp,fp
 c00e228:	df000017 	ldw	fp,0(sp)
 c00e22c:	dec00104 	addi	sp,sp,4
 c00e230:	f800283a 	ret

0c00e234 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 c00e234:	defff804 	addi	sp,sp,-32
 c00e238:	df000715 	stw	fp,28(sp)
 c00e23c:	df000704 	addi	fp,sp,28
 c00e240:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 c00e244:	e0bffb17 	ldw	r2,-20(fp)
 c00e248:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 c00e24c:	e0bff917 	ldw	r2,-28(fp)
 c00e250:	10800017 	ldw	r2,0(r2)
 c00e254:	10800104 	addi	r2,r2,4
 c00e258:	10800037 	ldwio	r2,0(r2)
 c00e25c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 c00e260:	e0bffa17 	ldw	r2,-24(fp)
 c00e264:	1081000c 	andi	r2,r2,1024
 c00e268:	10000b26 	beq	r2,zero,c00e298 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 c00e26c:	e0bff917 	ldw	r2,-28(fp)
 c00e270:	10800017 	ldw	r2,0(r2)
 c00e274:	10800104 	addi	r2,r2,4
 c00e278:	1007883a 	mov	r3,r2
 c00e27c:	e0bff917 	ldw	r2,-28(fp)
 c00e280:	10800817 	ldw	r2,32(r2)
 c00e284:	10810014 	ori	r2,r2,1024
 c00e288:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 c00e28c:	e0bff917 	ldw	r2,-28(fp)
 c00e290:	10000915 	stw	zero,36(r2)
 c00e294:	00000a06 	br	c00e2c0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 c00e298:	e0bff917 	ldw	r2,-28(fp)
 c00e29c:	10c00917 	ldw	r3,36(r2)
 c00e2a0:	00a00034 	movhi	r2,32768
 c00e2a4:	10bfff04 	addi	r2,r2,-4
 c00e2a8:	10c00536 	bltu	r2,r3,c00e2c0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 c00e2ac:	e0bff917 	ldw	r2,-28(fp)
 c00e2b0:	10800917 	ldw	r2,36(r2)
 c00e2b4:	10c00044 	addi	r3,r2,1
 c00e2b8:	e0bff917 	ldw	r2,-28(fp)
 c00e2bc:	10c00915 	stw	r3,36(r2)
 c00e2c0:	d0a6da17 	ldw	r2,-25752(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 c00e2c4:	e037883a 	mov	sp,fp
 c00e2c8:	df000017 	ldw	fp,0(sp)
 c00e2cc:	dec00104 	addi	sp,sp,4
 c00e2d0:	f800283a 	ret

0c00e2d4 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 c00e2d4:	defffd04 	addi	sp,sp,-12
 c00e2d8:	df000215 	stw	fp,8(sp)
 c00e2dc:	df000204 	addi	fp,sp,8
 c00e2e0:	e13ffe15 	stw	r4,-8(fp)
 c00e2e4:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 c00e2e8:	00000506 	br	c00e300 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 c00e2ec:	e0bfff17 	ldw	r2,-4(fp)
 c00e2f0:	1090000c 	andi	r2,r2,16384
 c00e2f4:	10000226 	beq	r2,zero,c00e300 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 c00e2f8:	00bffd44 	movi	r2,-11
 c00e2fc:	00000b06 	br	c00e32c <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 c00e300:	e0bffe17 	ldw	r2,-8(fp)
 c00e304:	10c00d17 	ldw	r3,52(r2)
 c00e308:	e0bffe17 	ldw	r2,-8(fp)
 c00e30c:	10800c17 	ldw	r2,48(r2)
 c00e310:	18800526 	beq	r3,r2,c00e328 <altera_avalon_jtag_uart_close+0x54>
 c00e314:	e0bffe17 	ldw	r2,-8(fp)
 c00e318:	10c00917 	ldw	r3,36(r2)
 c00e31c:	e0bffe17 	ldw	r2,-8(fp)
 c00e320:	10800117 	ldw	r2,4(r2)
 c00e324:	18bff136 	bltu	r3,r2,c00e2ec <__alt_data_end+0xfc00e2ec>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 c00e328:	0005883a 	mov	r2,zero
}
 c00e32c:	e037883a 	mov	sp,fp
 c00e330:	df000017 	ldw	fp,0(sp)
 c00e334:	dec00104 	addi	sp,sp,4
 c00e338:	f800283a 	ret

0c00e33c <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 c00e33c:	defffa04 	addi	sp,sp,-24
 c00e340:	df000515 	stw	fp,20(sp)
 c00e344:	df000504 	addi	fp,sp,20
 c00e348:	e13ffd15 	stw	r4,-12(fp)
 c00e34c:	e17ffe15 	stw	r5,-8(fp)
 c00e350:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 c00e354:	00bff9c4 	movi	r2,-25
 c00e358:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 c00e35c:	e0bffe17 	ldw	r2,-8(fp)
 c00e360:	10da8060 	cmpeqi	r3,r2,27137
 c00e364:	1800031e 	bne	r3,zero,c00e374 <altera_avalon_jtag_uart_ioctl+0x38>
 c00e368:	109a80a0 	cmpeqi	r2,r2,27138
 c00e36c:	1000181e 	bne	r2,zero,c00e3d0 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 c00e370:	00002906 	br	c00e418 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 c00e374:	e0bffd17 	ldw	r2,-12(fp)
 c00e378:	10c00117 	ldw	r3,4(r2)
 c00e37c:	00a00034 	movhi	r2,32768
 c00e380:	10bfffc4 	addi	r2,r2,-1
 c00e384:	18802126 	beq	r3,r2,c00e40c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 c00e388:	e0bfff17 	ldw	r2,-4(fp)
 c00e38c:	10800017 	ldw	r2,0(r2)
 c00e390:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 c00e394:	e0bffc17 	ldw	r2,-16(fp)
 c00e398:	10800090 	cmplti	r2,r2,2
 c00e39c:	1000061e 	bne	r2,zero,c00e3b8 <altera_avalon_jtag_uart_ioctl+0x7c>
 c00e3a0:	e0fffc17 	ldw	r3,-16(fp)
 c00e3a4:	00a00034 	movhi	r2,32768
 c00e3a8:	10bfffc4 	addi	r2,r2,-1
 c00e3ac:	18800226 	beq	r3,r2,c00e3b8 <altera_avalon_jtag_uart_ioctl+0x7c>
 c00e3b0:	e0bffc17 	ldw	r2,-16(fp)
 c00e3b4:	00000206 	br	c00e3c0 <altera_avalon_jtag_uart_ioctl+0x84>
 c00e3b8:	00a00034 	movhi	r2,32768
 c00e3bc:	10bfff84 	addi	r2,r2,-2
 c00e3c0:	e0fffd17 	ldw	r3,-12(fp)
 c00e3c4:	18800115 	stw	r2,4(r3)
      rc = 0;
 c00e3c8:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 c00e3cc:	00000f06 	br	c00e40c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 c00e3d0:	e0bffd17 	ldw	r2,-12(fp)
 c00e3d4:	10c00117 	ldw	r3,4(r2)
 c00e3d8:	00a00034 	movhi	r2,32768
 c00e3dc:	10bfffc4 	addi	r2,r2,-1
 c00e3e0:	18800c26 	beq	r3,r2,c00e414 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 c00e3e4:	e0bffd17 	ldw	r2,-12(fp)
 c00e3e8:	10c00917 	ldw	r3,36(r2)
 c00e3ec:	e0bffd17 	ldw	r2,-12(fp)
 c00e3f0:	10800117 	ldw	r2,4(r2)
 c00e3f4:	1885803a 	cmpltu	r2,r3,r2
 c00e3f8:	10c03fcc 	andi	r3,r2,255
 c00e3fc:	e0bfff17 	ldw	r2,-4(fp)
 c00e400:	10c00015 	stw	r3,0(r2)
      rc = 0;
 c00e404:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 c00e408:	00000206 	br	c00e414 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 c00e40c:	0001883a 	nop
 c00e410:	00000106 	br	c00e418 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 c00e414:	0001883a 	nop

  default:
    break;
  }

  return rc;
 c00e418:	e0bffb17 	ldw	r2,-20(fp)
}
 c00e41c:	e037883a 	mov	sp,fp
 c00e420:	df000017 	ldw	fp,0(sp)
 c00e424:	dec00104 	addi	sp,sp,4
 c00e428:	f800283a 	ret

0c00e42c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 c00e42c:	defff304 	addi	sp,sp,-52
 c00e430:	dfc00c15 	stw	ra,48(sp)
 c00e434:	df000b15 	stw	fp,44(sp)
 c00e438:	df000b04 	addi	fp,sp,44
 c00e43c:	e13ffc15 	stw	r4,-16(fp)
 c00e440:	e17ffd15 	stw	r5,-12(fp)
 c00e444:	e1bffe15 	stw	r6,-8(fp)
 c00e448:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 c00e44c:	e0bffd17 	ldw	r2,-12(fp)
 c00e450:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 c00e454:	00004706 	br	c00e574 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 c00e458:	e0bffc17 	ldw	r2,-16(fp)
 c00e45c:	10800a17 	ldw	r2,40(r2)
 c00e460:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 c00e464:	e0bffc17 	ldw	r2,-16(fp)
 c00e468:	10800b17 	ldw	r2,44(r2)
 c00e46c:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 c00e470:	e0fff717 	ldw	r3,-36(fp)
 c00e474:	e0bff817 	ldw	r2,-32(fp)
 c00e478:	18800536 	bltu	r3,r2,c00e490 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 c00e47c:	e0fff717 	ldw	r3,-36(fp)
 c00e480:	e0bff817 	ldw	r2,-32(fp)
 c00e484:	1885c83a 	sub	r2,r3,r2
 c00e488:	e0bff615 	stw	r2,-40(fp)
 c00e48c:	00000406 	br	c00e4a0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 c00e490:	00c20004 	movi	r3,2048
 c00e494:	e0bff817 	ldw	r2,-32(fp)
 c00e498:	1885c83a 	sub	r2,r3,r2
 c00e49c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 c00e4a0:	e0bff617 	ldw	r2,-40(fp)
 c00e4a4:	10001e26 	beq	r2,zero,c00e520 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 c00e4a8:	e0fffe17 	ldw	r3,-8(fp)
 c00e4ac:	e0bff617 	ldw	r2,-40(fp)
 c00e4b0:	1880022e 	bgeu	r3,r2,c00e4bc <altera_avalon_jtag_uart_read+0x90>
        n = space;
 c00e4b4:	e0bffe17 	ldw	r2,-8(fp)
 c00e4b8:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 c00e4bc:	e0bffc17 	ldw	r2,-16(fp)
 c00e4c0:	10c00e04 	addi	r3,r2,56
 c00e4c4:	e0bff817 	ldw	r2,-32(fp)
 c00e4c8:	1885883a 	add	r2,r3,r2
 c00e4cc:	e1bff617 	ldw	r6,-40(fp)
 c00e4d0:	100b883a 	mov	r5,r2
 c00e4d4:	e13ff517 	ldw	r4,-44(fp)
 c00e4d8:	c005b1c0 	call	c005b1c <memcpy>
      ptr   += n;
 c00e4dc:	e0fff517 	ldw	r3,-44(fp)
 c00e4e0:	e0bff617 	ldw	r2,-40(fp)
 c00e4e4:	1885883a 	add	r2,r3,r2
 c00e4e8:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 c00e4ec:	e0fffe17 	ldw	r3,-8(fp)
 c00e4f0:	e0bff617 	ldw	r2,-40(fp)
 c00e4f4:	1885c83a 	sub	r2,r3,r2
 c00e4f8:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c00e4fc:	e0fff817 	ldw	r3,-32(fp)
 c00e500:	e0bff617 	ldw	r2,-40(fp)
 c00e504:	1885883a 	add	r2,r3,r2
 c00e508:	10c1ffcc 	andi	r3,r2,2047
 c00e50c:	e0bffc17 	ldw	r2,-16(fp)
 c00e510:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 c00e514:	e0bffe17 	ldw	r2,-8(fp)
 c00e518:	00bfcf16 	blt	zero,r2,c00e458 <__alt_data_end+0xfc00e458>
 c00e51c:	00000106 	br	c00e524 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 c00e520:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 c00e524:	e0fff517 	ldw	r3,-44(fp)
 c00e528:	e0bffd17 	ldw	r2,-12(fp)
 c00e52c:	1880141e 	bne	r3,r2,c00e580 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 c00e530:	e0bfff17 	ldw	r2,-4(fp)
 c00e534:	1090000c 	andi	r2,r2,16384
 c00e538:	1000131e 	bne	r2,zero,c00e588 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 c00e53c:	0001883a 	nop
 c00e540:	e0bffc17 	ldw	r2,-16(fp)
 c00e544:	10c00a17 	ldw	r3,40(r2)
 c00e548:	e0bff717 	ldw	r2,-36(fp)
 c00e54c:	1880051e 	bne	r3,r2,c00e564 <altera_avalon_jtag_uart_read+0x138>
 c00e550:	e0bffc17 	ldw	r2,-16(fp)
 c00e554:	10c00917 	ldw	r3,36(r2)
 c00e558:	e0bffc17 	ldw	r2,-16(fp)
 c00e55c:	10800117 	ldw	r2,4(r2)
 c00e560:	18bff736 	bltu	r3,r2,c00e540 <__alt_data_end+0xfc00e540>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 c00e564:	e0bffc17 	ldw	r2,-16(fp)
 c00e568:	10c00a17 	ldw	r3,40(r2)
 c00e56c:	e0bff717 	ldw	r2,-36(fp)
 c00e570:	18800726 	beq	r3,r2,c00e590 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 c00e574:	e0bffe17 	ldw	r2,-8(fp)
 c00e578:	00bfb716 	blt	zero,r2,c00e458 <__alt_data_end+0xfc00e458>
 c00e57c:	00000506 	br	c00e594 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 c00e580:	0001883a 	nop
 c00e584:	00000306 	br	c00e594 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 c00e588:	0001883a 	nop
 c00e58c:	00000106 	br	c00e594 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 c00e590:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 c00e594:	e0fff517 	ldw	r3,-44(fp)
 c00e598:	e0bffd17 	ldw	r2,-12(fp)
 c00e59c:	18801826 	beq	r3,r2,c00e600 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00e5a0:	0005303a 	rdctl	r2,status
 c00e5a4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00e5a8:	e0fffb17 	ldw	r3,-20(fp)
 c00e5ac:	00bfff84 	movi	r2,-2
 c00e5b0:	1884703a 	and	r2,r3,r2
 c00e5b4:	1001703a 	wrctl	status,r2
  
  return context;
 c00e5b8:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 c00e5bc:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 c00e5c0:	e0bffc17 	ldw	r2,-16(fp)
 c00e5c4:	10800817 	ldw	r2,32(r2)
 c00e5c8:	10c00054 	ori	r3,r2,1
 c00e5cc:	e0bffc17 	ldw	r2,-16(fp)
 c00e5d0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c00e5d4:	e0bffc17 	ldw	r2,-16(fp)
 c00e5d8:	10800017 	ldw	r2,0(r2)
 c00e5dc:	10800104 	addi	r2,r2,4
 c00e5e0:	1007883a 	mov	r3,r2
 c00e5e4:	e0bffc17 	ldw	r2,-16(fp)
 c00e5e8:	10800817 	ldw	r2,32(r2)
 c00e5ec:	18800035 	stwio	r2,0(r3)
 c00e5f0:	e0bffa17 	ldw	r2,-24(fp)
 c00e5f4:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00e5f8:	e0bff917 	ldw	r2,-28(fp)
 c00e5fc:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 c00e600:	e0fff517 	ldw	r3,-44(fp)
 c00e604:	e0bffd17 	ldw	r2,-12(fp)
 c00e608:	18800426 	beq	r3,r2,c00e61c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 c00e60c:	e0fff517 	ldw	r3,-44(fp)
 c00e610:	e0bffd17 	ldw	r2,-12(fp)
 c00e614:	1885c83a 	sub	r2,r3,r2
 c00e618:	00000606 	br	c00e634 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 c00e61c:	e0bfff17 	ldw	r2,-4(fp)
 c00e620:	1090000c 	andi	r2,r2,16384
 c00e624:	10000226 	beq	r2,zero,c00e630 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 c00e628:	00bffd44 	movi	r2,-11
 c00e62c:	00000106 	br	c00e634 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 c00e630:	00bffec4 	movi	r2,-5
}
 c00e634:	e037883a 	mov	sp,fp
 c00e638:	dfc00117 	ldw	ra,4(sp)
 c00e63c:	df000017 	ldw	fp,0(sp)
 c00e640:	dec00204 	addi	sp,sp,8
 c00e644:	f800283a 	ret

0c00e648 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 c00e648:	defff304 	addi	sp,sp,-52
 c00e64c:	dfc00c15 	stw	ra,48(sp)
 c00e650:	df000b15 	stw	fp,44(sp)
 c00e654:	df000b04 	addi	fp,sp,44
 c00e658:	e13ffc15 	stw	r4,-16(fp)
 c00e65c:	e17ffd15 	stw	r5,-12(fp)
 c00e660:	e1bffe15 	stw	r6,-8(fp)
 c00e664:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 c00e668:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 c00e66c:	e0bffd17 	ldw	r2,-12(fp)
 c00e670:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 c00e674:	00003706 	br	c00e754 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 c00e678:	e0bffc17 	ldw	r2,-16(fp)
 c00e67c:	10800c17 	ldw	r2,48(r2)
 c00e680:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 c00e684:	e0bffc17 	ldw	r2,-16(fp)
 c00e688:	10800d17 	ldw	r2,52(r2)
 c00e68c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 c00e690:	e0fff917 	ldw	r3,-28(fp)
 c00e694:	e0bff517 	ldw	r2,-44(fp)
 c00e698:	1880062e 	bgeu	r3,r2,c00e6b4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 c00e69c:	e0fff517 	ldw	r3,-44(fp)
 c00e6a0:	e0bff917 	ldw	r2,-28(fp)
 c00e6a4:	1885c83a 	sub	r2,r3,r2
 c00e6a8:	10bfffc4 	addi	r2,r2,-1
 c00e6ac:	e0bff615 	stw	r2,-40(fp)
 c00e6b0:	00000b06 	br	c00e6e0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 c00e6b4:	e0bff517 	ldw	r2,-44(fp)
 c00e6b8:	10000526 	beq	r2,zero,c00e6d0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 c00e6bc:	00c20004 	movi	r3,2048
 c00e6c0:	e0bff917 	ldw	r2,-28(fp)
 c00e6c4:	1885c83a 	sub	r2,r3,r2
 c00e6c8:	e0bff615 	stw	r2,-40(fp)
 c00e6cc:	00000406 	br	c00e6e0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 c00e6d0:	00c1ffc4 	movi	r3,2047
 c00e6d4:	e0bff917 	ldw	r2,-28(fp)
 c00e6d8:	1885c83a 	sub	r2,r3,r2
 c00e6dc:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 c00e6e0:	e0bff617 	ldw	r2,-40(fp)
 c00e6e4:	10001e26 	beq	r2,zero,c00e760 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 c00e6e8:	e0fffe17 	ldw	r3,-8(fp)
 c00e6ec:	e0bff617 	ldw	r2,-40(fp)
 c00e6f0:	1880022e 	bgeu	r3,r2,c00e6fc <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 c00e6f4:	e0bffe17 	ldw	r2,-8(fp)
 c00e6f8:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 c00e6fc:	e0bffc17 	ldw	r2,-16(fp)
 c00e700:	10c20e04 	addi	r3,r2,2104
 c00e704:	e0bff917 	ldw	r2,-28(fp)
 c00e708:	1885883a 	add	r2,r3,r2
 c00e70c:	e1bff617 	ldw	r6,-40(fp)
 c00e710:	e17ffd17 	ldw	r5,-12(fp)
 c00e714:	1009883a 	mov	r4,r2
 c00e718:	c005b1c0 	call	c005b1c <memcpy>
      ptr   += n;
 c00e71c:	e0fffd17 	ldw	r3,-12(fp)
 c00e720:	e0bff617 	ldw	r2,-40(fp)
 c00e724:	1885883a 	add	r2,r3,r2
 c00e728:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 c00e72c:	e0fffe17 	ldw	r3,-8(fp)
 c00e730:	e0bff617 	ldw	r2,-40(fp)
 c00e734:	1885c83a 	sub	r2,r3,r2
 c00e738:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 c00e73c:	e0fff917 	ldw	r3,-28(fp)
 c00e740:	e0bff617 	ldw	r2,-40(fp)
 c00e744:	1885883a 	add	r2,r3,r2
 c00e748:	10c1ffcc 	andi	r3,r2,2047
 c00e74c:	e0bffc17 	ldw	r2,-16(fp)
 c00e750:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 c00e754:	e0bffe17 	ldw	r2,-8(fp)
 c00e758:	00bfc716 	blt	zero,r2,c00e678 <__alt_data_end+0xfc00e678>
 c00e75c:	00000106 	br	c00e764 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 c00e760:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00e764:	0005303a 	rdctl	r2,status
 c00e768:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00e76c:	e0fffb17 	ldw	r3,-20(fp)
 c00e770:	00bfff84 	movi	r2,-2
 c00e774:	1884703a 	and	r2,r3,r2
 c00e778:	1001703a 	wrctl	status,r2
  
  return context;
 c00e77c:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 c00e780:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 c00e784:	e0bffc17 	ldw	r2,-16(fp)
 c00e788:	10800817 	ldw	r2,32(r2)
 c00e78c:	10c00094 	ori	r3,r2,2
 c00e790:	e0bffc17 	ldw	r2,-16(fp)
 c00e794:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 c00e798:	e0bffc17 	ldw	r2,-16(fp)
 c00e79c:	10800017 	ldw	r2,0(r2)
 c00e7a0:	10800104 	addi	r2,r2,4
 c00e7a4:	1007883a 	mov	r3,r2
 c00e7a8:	e0bffc17 	ldw	r2,-16(fp)
 c00e7ac:	10800817 	ldw	r2,32(r2)
 c00e7b0:	18800035 	stwio	r2,0(r3)
 c00e7b4:	e0bffa17 	ldw	r2,-24(fp)
 c00e7b8:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00e7bc:	e0bff817 	ldw	r2,-32(fp)
 c00e7c0:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 c00e7c4:	e0bffe17 	ldw	r2,-8(fp)
 c00e7c8:	0080100e 	bge	zero,r2,c00e80c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 c00e7cc:	e0bfff17 	ldw	r2,-4(fp)
 c00e7d0:	1090000c 	andi	r2,r2,16384
 c00e7d4:	1000101e 	bne	r2,zero,c00e818 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 c00e7d8:	0001883a 	nop
 c00e7dc:	e0bffc17 	ldw	r2,-16(fp)
 c00e7e0:	10c00d17 	ldw	r3,52(r2)
 c00e7e4:	e0bff517 	ldw	r2,-44(fp)
 c00e7e8:	1880051e 	bne	r3,r2,c00e800 <altera_avalon_jtag_uart_write+0x1b8>
 c00e7ec:	e0bffc17 	ldw	r2,-16(fp)
 c00e7f0:	10c00917 	ldw	r3,36(r2)
 c00e7f4:	e0bffc17 	ldw	r2,-16(fp)
 c00e7f8:	10800117 	ldw	r2,4(r2)
 c00e7fc:	18bff736 	bltu	r3,r2,c00e7dc <__alt_data_end+0xfc00e7dc>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 c00e800:	e0bffc17 	ldw	r2,-16(fp)
 c00e804:	10800917 	ldw	r2,36(r2)
 c00e808:	1000051e 	bne	r2,zero,c00e820 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 c00e80c:	e0bffe17 	ldw	r2,-8(fp)
 c00e810:	00bfd016 	blt	zero,r2,c00e754 <__alt_data_end+0xfc00e754>
 c00e814:	00000306 	br	c00e824 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 c00e818:	0001883a 	nop
 c00e81c:	00000106 	br	c00e824 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 c00e820:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 c00e824:	e0fffd17 	ldw	r3,-12(fp)
 c00e828:	e0bff717 	ldw	r2,-36(fp)
 c00e82c:	18800426 	beq	r3,r2,c00e840 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 c00e830:	e0fffd17 	ldw	r3,-12(fp)
 c00e834:	e0bff717 	ldw	r2,-36(fp)
 c00e838:	1885c83a 	sub	r2,r3,r2
 c00e83c:	00000606 	br	c00e858 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 c00e840:	e0bfff17 	ldw	r2,-4(fp)
 c00e844:	1090000c 	andi	r2,r2,16384
 c00e848:	10000226 	beq	r2,zero,c00e854 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 c00e84c:	00bffd44 	movi	r2,-11
 c00e850:	00000106 	br	c00e858 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 c00e854:	00bffec4 	movi	r2,-5
}
 c00e858:	e037883a 	mov	sp,fp
 c00e85c:	dfc00117 	ldw	ra,4(sp)
 c00e860:	df000017 	ldw	fp,0(sp)
 c00e864:	dec00204 	addi	sp,sp,8
 c00e868:	f800283a 	ret

0c00e86c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 c00e86c:	defffa04 	addi	sp,sp,-24
 c00e870:	dfc00515 	stw	ra,20(sp)
 c00e874:	df000415 	stw	fp,16(sp)
 c00e878:	df000404 	addi	fp,sp,16
 c00e87c:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 c00e880:	0007883a 	mov	r3,zero
 c00e884:	e0bfff17 	ldw	r2,-4(fp)
 c00e888:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 c00e88c:	e0bfff17 	ldw	r2,-4(fp)
 c00e890:	10800104 	addi	r2,r2,4
 c00e894:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00e898:	0005303a 	rdctl	r2,status
 c00e89c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00e8a0:	e0fffd17 	ldw	r3,-12(fp)
 c00e8a4:	00bfff84 	movi	r2,-2
 c00e8a8:	1884703a 	and	r2,r3,r2
 c00e8ac:	1001703a 	wrctl	status,r2
  
  return context;
 c00e8b0:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 c00e8b4:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 c00e8b8:	c00f38c0 	call	c00f38c <alt_tick>
 c00e8bc:	e0bffc17 	ldw	r2,-16(fp)
 c00e8c0:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00e8c4:	e0bffe17 	ldw	r2,-8(fp)
 c00e8c8:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 c00e8cc:	0001883a 	nop
 c00e8d0:	e037883a 	mov	sp,fp
 c00e8d4:	dfc00117 	ldw	ra,4(sp)
 c00e8d8:	df000017 	ldw	fp,0(sp)
 c00e8dc:	dec00204 	addi	sp,sp,8
 c00e8e0:	f800283a 	ret

0c00e8e4 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 c00e8e4:	defff804 	addi	sp,sp,-32
 c00e8e8:	dfc00715 	stw	ra,28(sp)
 c00e8ec:	df000615 	stw	fp,24(sp)
 c00e8f0:	df000604 	addi	fp,sp,24
 c00e8f4:	e13ffc15 	stw	r4,-16(fp)
 c00e8f8:	e17ffd15 	stw	r5,-12(fp)
 c00e8fc:	e1bffe15 	stw	r6,-8(fp)
 c00e900:	e1ffff15 	stw	r7,-4(fp)
 c00e904:	e0bfff17 	ldw	r2,-4(fp)
 c00e908:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 c00e90c:	d0a6da17 	ldw	r2,-25752(gp)
 c00e910:	1000021e 	bne	r2,zero,c00e91c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 c00e914:	e0bffb17 	ldw	r2,-20(fp)
 c00e918:	d0a6da15 	stw	r2,-25752(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 c00e91c:	e0bffc17 	ldw	r2,-16(fp)
 c00e920:	10800104 	addi	r2,r2,4
 c00e924:	00c001c4 	movi	r3,7
 c00e928:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 c00e92c:	d8000015 	stw	zero,0(sp)
 c00e930:	e1fffc17 	ldw	r7,-16(fp)
 c00e934:	01830074 	movhi	r6,3073
 c00e938:	31ba1b04 	addi	r6,r6,-6036
 c00e93c:	e17ffe17 	ldw	r5,-8(fp)
 c00e940:	e13ffd17 	ldw	r4,-12(fp)
 c00e944:	c00ec6c0 	call	c00ec6c <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 c00e948:	0001883a 	nop
 c00e94c:	e037883a 	mov	sp,fp
 c00e950:	dfc00117 	ldw	ra,4(sp)
 c00e954:	df000017 	ldw	fp,0(sp)
 c00e958:	dec00204 	addi	sp,sp,8
 c00e95c:	f800283a 	ret

0c00e960 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 c00e960:	defff504 	addi	sp,sp,-44
 c00e964:	df000a15 	stw	fp,40(sp)
 c00e968:	df000a04 	addi	fp,sp,40
 c00e96c:	e13ffc15 	stw	r4,-16(fp)
 c00e970:	e17ffd15 	stw	r5,-12(fp)
 c00e974:	e1bffe15 	stw	r6,-8(fp)
 c00e978:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 c00e97c:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 c00e980:	d0a6da17 	ldw	r2,-25752(gp)
  
  if (alt_ticks_per_second ())
 c00e984:	10003c26 	beq	r2,zero,c00ea78 <alt_alarm_start+0x118>
  {
    if (alarm)
 c00e988:	e0bffc17 	ldw	r2,-16(fp)
 c00e98c:	10003826 	beq	r2,zero,c00ea70 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 c00e990:	e0bffc17 	ldw	r2,-16(fp)
 c00e994:	e0fffe17 	ldw	r3,-8(fp)
 c00e998:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 c00e99c:	e0bffc17 	ldw	r2,-16(fp)
 c00e9a0:	e0ffff17 	ldw	r3,-4(fp)
 c00e9a4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00e9a8:	0005303a 	rdctl	r2,status
 c00e9ac:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00e9b0:	e0fff917 	ldw	r3,-28(fp)
 c00e9b4:	00bfff84 	movi	r2,-2
 c00e9b8:	1884703a 	and	r2,r3,r2
 c00e9bc:	1001703a 	wrctl	status,r2
  
  return context;
 c00e9c0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 c00e9c4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 c00e9c8:	d0a6db17 	ldw	r2,-25748(gp)
      
      current_nticks = alt_nticks();
 c00e9cc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 c00e9d0:	e0fffd17 	ldw	r3,-12(fp)
 c00e9d4:	e0bff617 	ldw	r2,-40(fp)
 c00e9d8:	1885883a 	add	r2,r3,r2
 c00e9dc:	10c00044 	addi	r3,r2,1
 c00e9e0:	e0bffc17 	ldw	r2,-16(fp)
 c00e9e4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 c00e9e8:	e0bffc17 	ldw	r2,-16(fp)
 c00e9ec:	10c00217 	ldw	r3,8(r2)
 c00e9f0:	e0bff617 	ldw	r2,-40(fp)
 c00e9f4:	1880042e 	bgeu	r3,r2,c00ea08 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 c00e9f8:	e0bffc17 	ldw	r2,-16(fp)
 c00e9fc:	00c00044 	movi	r3,1
 c00ea00:	10c00405 	stb	r3,16(r2)
 c00ea04:	00000206 	br	c00ea10 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 c00ea08:	e0bffc17 	ldw	r2,-16(fp)
 c00ea0c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 c00ea10:	e0bffc17 	ldw	r2,-16(fp)
 c00ea14:	d0e01004 	addi	r3,gp,-32704
 c00ea18:	e0fffa15 	stw	r3,-24(fp)
 c00ea1c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 c00ea20:	e0bffb17 	ldw	r2,-20(fp)
 c00ea24:	e0fffa17 	ldw	r3,-24(fp)
 c00ea28:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 c00ea2c:	e0bffa17 	ldw	r2,-24(fp)
 c00ea30:	10c00017 	ldw	r3,0(r2)
 c00ea34:	e0bffb17 	ldw	r2,-20(fp)
 c00ea38:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 c00ea3c:	e0bffa17 	ldw	r2,-24(fp)
 c00ea40:	10800017 	ldw	r2,0(r2)
 c00ea44:	e0fffb17 	ldw	r3,-20(fp)
 c00ea48:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 c00ea4c:	e0bffa17 	ldw	r2,-24(fp)
 c00ea50:	e0fffb17 	ldw	r3,-20(fp)
 c00ea54:	10c00015 	stw	r3,0(r2)
 c00ea58:	e0bff817 	ldw	r2,-32(fp)
 c00ea5c:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00ea60:	e0bff717 	ldw	r2,-36(fp)
 c00ea64:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 c00ea68:	0005883a 	mov	r2,zero
 c00ea6c:	00000306 	br	c00ea7c <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 c00ea70:	00bffa84 	movi	r2,-22
 c00ea74:	00000106 	br	c00ea7c <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 c00ea78:	00bfde84 	movi	r2,-134
  }
}
 c00ea7c:	e037883a 	mov	sp,fp
 c00ea80:	df000017 	ldw	fp,0(sp)
 c00ea84:	dec00104 	addi	sp,sp,4
 c00ea88:	f800283a 	ret

0c00ea8c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 c00ea8c:	deffff04 	addi	sp,sp,-4
 c00ea90:	df000015 	stw	fp,0(sp)
 c00ea94:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 c00ea98:	0001883a 	nop
 c00ea9c:	e037883a 	mov	sp,fp
 c00eaa0:	df000017 	ldw	fp,0(sp)
 c00eaa4:	dec00104 	addi	sp,sp,4
 c00eaa8:	f800283a 	ret

0c00eaac <alt_get_errno>:
 c00eaac:	defffe04 	addi	sp,sp,-8
 c00eab0:	dfc00115 	stw	ra,4(sp)
 c00eab4:	df000015 	stw	fp,0(sp)
 c00eab8:	d839883a 	mov	fp,sp
 c00eabc:	d0a00d17 	ldw	r2,-32716(gp)
 c00eac0:	10000326 	beq	r2,zero,c00ead0 <alt_get_errno+0x24>
 c00eac4:	d0a00d17 	ldw	r2,-32716(gp)
 c00eac8:	103ee83a 	callr	r2
 c00eacc:	00000106 	br	c00ead4 <alt_get_errno+0x28>
 c00ead0:	d0a6d504 	addi	r2,gp,-25772
 c00ead4:	e037883a 	mov	sp,fp
 c00ead8:	dfc00117 	ldw	ra,4(sp)
 c00eadc:	df000017 	ldw	fp,0(sp)
 c00eae0:	dec00204 	addi	sp,sp,8
 c00eae4:	f800283a 	ret

0c00eae8 <alt_dev_llist_insert>:
 c00eae8:	defffa04 	addi	sp,sp,-24
 c00eaec:	dfc00515 	stw	ra,20(sp)
 c00eaf0:	df000415 	stw	fp,16(sp)
 c00eaf4:	df000404 	addi	fp,sp,16
 c00eaf8:	e13ffe15 	stw	r4,-8(fp)
 c00eafc:	e17fff15 	stw	r5,-4(fp)
 c00eb00:	e0bffe17 	ldw	r2,-8(fp)
 c00eb04:	10000326 	beq	r2,zero,c00eb14 <alt_dev_llist_insert+0x2c>
 c00eb08:	e0bffe17 	ldw	r2,-8(fp)
 c00eb0c:	10800217 	ldw	r2,8(r2)
 c00eb10:	1000061e 	bne	r2,zero,c00eb2c <alt_dev_llist_insert+0x44>
 c00eb14:	c00eaac0 	call	c00eaac <alt_get_errno>
 c00eb18:	1007883a 	mov	r3,r2
 c00eb1c:	00800584 	movi	r2,22
 c00eb20:	18800015 	stw	r2,0(r3)
 c00eb24:	00bffa84 	movi	r2,-22
 c00eb28:	00001306 	br	c00eb78 <alt_dev_llist_insert+0x90>
 c00eb2c:	e0bffe17 	ldw	r2,-8(fp)
 c00eb30:	e0ffff17 	ldw	r3,-4(fp)
 c00eb34:	e0fffc15 	stw	r3,-16(fp)
 c00eb38:	e0bffd15 	stw	r2,-12(fp)
 c00eb3c:	e0bffd17 	ldw	r2,-12(fp)
 c00eb40:	e0fffc17 	ldw	r3,-16(fp)
 c00eb44:	10c00115 	stw	r3,4(r2)
 c00eb48:	e0bffc17 	ldw	r2,-16(fp)
 c00eb4c:	10c00017 	ldw	r3,0(r2)
 c00eb50:	e0bffd17 	ldw	r2,-12(fp)
 c00eb54:	10c00015 	stw	r3,0(r2)
 c00eb58:	e0bffc17 	ldw	r2,-16(fp)
 c00eb5c:	10800017 	ldw	r2,0(r2)
 c00eb60:	e0fffd17 	ldw	r3,-12(fp)
 c00eb64:	10c00115 	stw	r3,4(r2)
 c00eb68:	e0bffc17 	ldw	r2,-16(fp)
 c00eb6c:	e0fffd17 	ldw	r3,-12(fp)
 c00eb70:	10c00015 	stw	r3,0(r2)
 c00eb74:	0005883a 	mov	r2,zero
 c00eb78:	e037883a 	mov	sp,fp
 c00eb7c:	dfc00117 	ldw	ra,4(sp)
 c00eb80:	df000017 	ldw	fp,0(sp)
 c00eb84:	dec00204 	addi	sp,sp,8
 c00eb88:	f800283a 	ret

0c00eb8c <_do_ctors>:
 c00eb8c:	defffd04 	addi	sp,sp,-12
 c00eb90:	dfc00215 	stw	ra,8(sp)
 c00eb94:	df000115 	stw	fp,4(sp)
 c00eb98:	df000104 	addi	fp,sp,4
 c00eb9c:	00830074 	movhi	r2,3073
 c00eba0:	10bed004 	addi	r2,r2,-1216
 c00eba4:	e0bfff15 	stw	r2,-4(fp)
 c00eba8:	00000606 	br	c00ebc4 <_do_ctors+0x38>
 c00ebac:	e0bfff17 	ldw	r2,-4(fp)
 c00ebb0:	10800017 	ldw	r2,0(r2)
 c00ebb4:	103ee83a 	callr	r2
 c00ebb8:	e0bfff17 	ldw	r2,-4(fp)
 c00ebbc:	10bfff04 	addi	r2,r2,-4
 c00ebc0:	e0bfff15 	stw	r2,-4(fp)
 c00ebc4:	e0ffff17 	ldw	r3,-4(fp)
 c00ebc8:	00830074 	movhi	r2,3073
 c00ebcc:	10bed104 	addi	r2,r2,-1212
 c00ebd0:	18bff62e 	bgeu	r3,r2,c00ebac <__alt_data_end+0xfc00ebac>
 c00ebd4:	0001883a 	nop
 c00ebd8:	e037883a 	mov	sp,fp
 c00ebdc:	dfc00117 	ldw	ra,4(sp)
 c00ebe0:	df000017 	ldw	fp,0(sp)
 c00ebe4:	dec00204 	addi	sp,sp,8
 c00ebe8:	f800283a 	ret

0c00ebec <_do_dtors>:
 c00ebec:	defffd04 	addi	sp,sp,-12
 c00ebf0:	dfc00215 	stw	ra,8(sp)
 c00ebf4:	df000115 	stw	fp,4(sp)
 c00ebf8:	df000104 	addi	fp,sp,4
 c00ebfc:	00830074 	movhi	r2,3073
 c00ec00:	10bed004 	addi	r2,r2,-1216
 c00ec04:	e0bfff15 	stw	r2,-4(fp)
 c00ec08:	00000606 	br	c00ec24 <_do_dtors+0x38>
 c00ec0c:	e0bfff17 	ldw	r2,-4(fp)
 c00ec10:	10800017 	ldw	r2,0(r2)
 c00ec14:	103ee83a 	callr	r2
 c00ec18:	e0bfff17 	ldw	r2,-4(fp)
 c00ec1c:	10bfff04 	addi	r2,r2,-4
 c00ec20:	e0bfff15 	stw	r2,-4(fp)
 c00ec24:	e0ffff17 	ldw	r3,-4(fp)
 c00ec28:	00830074 	movhi	r2,3073
 c00ec2c:	10bed104 	addi	r2,r2,-1212
 c00ec30:	18bff62e 	bgeu	r3,r2,c00ec0c <__alt_data_end+0xfc00ec0c>
 c00ec34:	0001883a 	nop
 c00ec38:	e037883a 	mov	sp,fp
 c00ec3c:	dfc00117 	ldw	ra,4(sp)
 c00ec40:	df000017 	ldw	fp,0(sp)
 c00ec44:	dec00204 	addi	sp,sp,8
 c00ec48:	f800283a 	ret

0c00ec4c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 c00ec4c:	deffff04 	addi	sp,sp,-4
 c00ec50:	df000015 	stw	fp,0(sp)
 c00ec54:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 c00ec58:	0001883a 	nop
 c00ec5c:	e037883a 	mov	sp,fp
 c00ec60:	df000017 	ldw	fp,0(sp)
 c00ec64:	dec00104 	addi	sp,sp,4
 c00ec68:	f800283a 	ret

0c00ec6c <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 c00ec6c:	defff904 	addi	sp,sp,-28
 c00ec70:	dfc00615 	stw	ra,24(sp)
 c00ec74:	df000515 	stw	fp,20(sp)
 c00ec78:	df000504 	addi	fp,sp,20
 c00ec7c:	e13ffc15 	stw	r4,-16(fp)
 c00ec80:	e17ffd15 	stw	r5,-12(fp)
 c00ec84:	e1bffe15 	stw	r6,-8(fp)
 c00ec88:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 c00ec8c:	e0800217 	ldw	r2,8(fp)
 c00ec90:	d8800015 	stw	r2,0(sp)
 c00ec94:	e1ffff17 	ldw	r7,-4(fp)
 c00ec98:	e1bffe17 	ldw	r6,-8(fp)
 c00ec9c:	e17ffd17 	ldw	r5,-12(fp)
 c00eca0:	e13ffc17 	ldw	r4,-16(fp)
 c00eca4:	c00ee1c0 	call	c00ee1c <alt_iic_isr_register>
}  
 c00eca8:	e037883a 	mov	sp,fp
 c00ecac:	dfc00117 	ldw	ra,4(sp)
 c00ecb0:	df000017 	ldw	fp,0(sp)
 c00ecb4:	dec00204 	addi	sp,sp,8
 c00ecb8:	f800283a 	ret

0c00ecbc <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 c00ecbc:	defff904 	addi	sp,sp,-28
 c00ecc0:	df000615 	stw	fp,24(sp)
 c00ecc4:	df000604 	addi	fp,sp,24
 c00ecc8:	e13ffe15 	stw	r4,-8(fp)
 c00eccc:	e17fff15 	stw	r5,-4(fp)
 c00ecd0:	e0bfff17 	ldw	r2,-4(fp)
 c00ecd4:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00ecd8:	0005303a 	rdctl	r2,status
 c00ecdc:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00ece0:	e0fffb17 	ldw	r3,-20(fp)
 c00ece4:	00bfff84 	movi	r2,-2
 c00ece8:	1884703a 	and	r2,r3,r2
 c00ecec:	1001703a 	wrctl	status,r2
  
  return context;
 c00ecf0:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 c00ecf4:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 c00ecf8:	00c00044 	movi	r3,1
 c00ecfc:	e0bffa17 	ldw	r2,-24(fp)
 c00ed00:	1884983a 	sll	r2,r3,r2
 c00ed04:	1007883a 	mov	r3,r2
 c00ed08:	d0a6d917 	ldw	r2,-25756(gp)
 c00ed0c:	1884b03a 	or	r2,r3,r2
 c00ed10:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 c00ed14:	d0a6d917 	ldw	r2,-25756(gp)
 c00ed18:	100170fa 	wrctl	ienable,r2
 c00ed1c:	e0bffc17 	ldw	r2,-16(fp)
 c00ed20:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00ed24:	e0bffd17 	ldw	r2,-12(fp)
 c00ed28:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 c00ed2c:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 c00ed30:	0001883a 	nop
}
 c00ed34:	e037883a 	mov	sp,fp
 c00ed38:	df000017 	ldw	fp,0(sp)
 c00ed3c:	dec00104 	addi	sp,sp,4
 c00ed40:	f800283a 	ret

0c00ed44 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 c00ed44:	defff904 	addi	sp,sp,-28
 c00ed48:	df000615 	stw	fp,24(sp)
 c00ed4c:	df000604 	addi	fp,sp,24
 c00ed50:	e13ffe15 	stw	r4,-8(fp)
 c00ed54:	e17fff15 	stw	r5,-4(fp)
 c00ed58:	e0bfff17 	ldw	r2,-4(fp)
 c00ed5c:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00ed60:	0005303a 	rdctl	r2,status
 c00ed64:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00ed68:	e0fffb17 	ldw	r3,-20(fp)
 c00ed6c:	00bfff84 	movi	r2,-2
 c00ed70:	1884703a 	and	r2,r3,r2
 c00ed74:	1001703a 	wrctl	status,r2
  
  return context;
 c00ed78:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 c00ed7c:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 c00ed80:	00c00044 	movi	r3,1
 c00ed84:	e0bffa17 	ldw	r2,-24(fp)
 c00ed88:	1884983a 	sll	r2,r3,r2
 c00ed8c:	0084303a 	nor	r2,zero,r2
 c00ed90:	1007883a 	mov	r3,r2
 c00ed94:	d0a6d917 	ldw	r2,-25756(gp)
 c00ed98:	1884703a 	and	r2,r3,r2
 c00ed9c:	d0a6d915 	stw	r2,-25756(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 c00eda0:	d0a6d917 	ldw	r2,-25756(gp)
 c00eda4:	100170fa 	wrctl	ienable,r2
 c00eda8:	e0bffc17 	ldw	r2,-16(fp)
 c00edac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00edb0:	e0bffd17 	ldw	r2,-12(fp)
 c00edb4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 c00edb8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 c00edbc:	0001883a 	nop
}
 c00edc0:	e037883a 	mov	sp,fp
 c00edc4:	df000017 	ldw	fp,0(sp)
 c00edc8:	dec00104 	addi	sp,sp,4
 c00edcc:	f800283a 	ret

0c00edd0 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 c00edd0:	defffc04 	addi	sp,sp,-16
 c00edd4:	df000315 	stw	fp,12(sp)
 c00edd8:	df000304 	addi	fp,sp,12
 c00eddc:	e13ffe15 	stw	r4,-8(fp)
 c00ede0:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 c00ede4:	000530fa 	rdctl	r2,ienable
 c00ede8:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 c00edec:	00c00044 	movi	r3,1
 c00edf0:	e0bfff17 	ldw	r2,-4(fp)
 c00edf4:	1884983a 	sll	r2,r3,r2
 c00edf8:	1007883a 	mov	r3,r2
 c00edfc:	e0bffd17 	ldw	r2,-12(fp)
 c00ee00:	1884703a 	and	r2,r3,r2
 c00ee04:	1004c03a 	cmpne	r2,r2,zero
 c00ee08:	10803fcc 	andi	r2,r2,255
}
 c00ee0c:	e037883a 	mov	sp,fp
 c00ee10:	df000017 	ldw	fp,0(sp)
 c00ee14:	dec00104 	addi	sp,sp,4
 c00ee18:	f800283a 	ret

0c00ee1c <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 c00ee1c:	defff504 	addi	sp,sp,-44
 c00ee20:	dfc00a15 	stw	ra,40(sp)
 c00ee24:	df000915 	stw	fp,36(sp)
 c00ee28:	df000904 	addi	fp,sp,36
 c00ee2c:	e13ffc15 	stw	r4,-16(fp)
 c00ee30:	e17ffd15 	stw	r5,-12(fp)
 c00ee34:	e1bffe15 	stw	r6,-8(fp)
 c00ee38:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 c00ee3c:	00bffa84 	movi	r2,-22
 c00ee40:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 c00ee44:	e0bffd17 	ldw	r2,-12(fp)
 c00ee48:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 c00ee4c:	e0bff817 	ldw	r2,-32(fp)
 c00ee50:	10800808 	cmpgei	r2,r2,32
 c00ee54:	1000271e 	bne	r2,zero,c00eef4 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00ee58:	0005303a 	rdctl	r2,status
 c00ee5c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00ee60:	e0fffb17 	ldw	r3,-20(fp)
 c00ee64:	00bfff84 	movi	r2,-2
 c00ee68:	1884703a 	and	r2,r3,r2
 c00ee6c:	1001703a 	wrctl	status,r2
  
  return context;
 c00ee70:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 c00ee74:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 c00ee78:	00830074 	movhi	r2,3073
 c00ee7c:	108d3a04 	addi	r2,r2,13544
 c00ee80:	e0fff817 	ldw	r3,-32(fp)
 c00ee84:	180690fa 	slli	r3,r3,3
 c00ee88:	10c5883a 	add	r2,r2,r3
 c00ee8c:	e0fffe17 	ldw	r3,-8(fp)
 c00ee90:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 c00ee94:	00830074 	movhi	r2,3073
 c00ee98:	108d3a04 	addi	r2,r2,13544
 c00ee9c:	e0fff817 	ldw	r3,-32(fp)
 c00eea0:	180690fa 	slli	r3,r3,3
 c00eea4:	10c5883a 	add	r2,r2,r3
 c00eea8:	10800104 	addi	r2,r2,4
 c00eeac:	e0ffff17 	ldw	r3,-4(fp)
 c00eeb0:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 c00eeb4:	e0bffe17 	ldw	r2,-8(fp)
 c00eeb8:	10000526 	beq	r2,zero,c00eed0 <alt_iic_isr_register+0xb4>
 c00eebc:	e0bff817 	ldw	r2,-32(fp)
 c00eec0:	100b883a 	mov	r5,r2
 c00eec4:	e13ffc17 	ldw	r4,-16(fp)
 c00eec8:	c00ecbc0 	call	c00ecbc <alt_ic_irq_enable>
 c00eecc:	00000406 	br	c00eee0 <alt_iic_isr_register+0xc4>
 c00eed0:	e0bff817 	ldw	r2,-32(fp)
 c00eed4:	100b883a 	mov	r5,r2
 c00eed8:	e13ffc17 	ldw	r4,-16(fp)
 c00eedc:	c00ed440 	call	c00ed44 <alt_ic_irq_disable>
 c00eee0:	e0bff715 	stw	r2,-36(fp)
 c00eee4:	e0bffa17 	ldw	r2,-24(fp)
 c00eee8:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00eeec:	e0bff917 	ldw	r2,-28(fp)
 c00eef0:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 c00eef4:	e0bff717 	ldw	r2,-36(fp)
}
 c00eef8:	e037883a 	mov	sp,fp
 c00eefc:	dfc00117 	ldw	ra,4(sp)
 c00ef00:	df000017 	ldw	fp,0(sp)
 c00ef04:	dec00204 	addi	sp,sp,8
 c00ef08:	f800283a 	ret

0c00ef0c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 c00ef0c:	defff804 	addi	sp,sp,-32
 c00ef10:	dfc00715 	stw	ra,28(sp)
 c00ef14:	df000615 	stw	fp,24(sp)
 c00ef18:	dc000515 	stw	r16,20(sp)
 c00ef1c:	df000604 	addi	fp,sp,24
 c00ef20:	e13ffb15 	stw	r4,-20(fp)
 c00ef24:	e17ffc15 	stw	r5,-16(fp)
 c00ef28:	e1bffd15 	stw	r6,-12(fp)
 c00ef2c:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 c00ef30:	e1bffe17 	ldw	r6,-8(fp)
 c00ef34:	e17ffd17 	ldw	r5,-12(fp)
 c00ef38:	e13ffc17 	ldw	r4,-16(fp)
 c00ef3c:	c00f1940 	call	c00f194 <open>
 c00ef40:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 c00ef44:	e0bffa17 	ldw	r2,-24(fp)
 c00ef48:	10002216 	blt	r2,zero,c00efd4 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 c00ef4c:	04030074 	movhi	r16,3073
 c00ef50:	8401db04 	addi	r16,r16,1900
 c00ef54:	e0bffa17 	ldw	r2,-24(fp)
 c00ef58:	01400304 	movi	r5,12
 c00ef5c:	1009883a 	mov	r4,r2
 c00ef60:	c0005340 	call	c000534 <__mulsi3>
 c00ef64:	8085883a 	add	r2,r16,r2
 c00ef68:	10c00017 	ldw	r3,0(r2)
 c00ef6c:	e0bffb17 	ldw	r2,-20(fp)
 c00ef70:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 c00ef74:	04030074 	movhi	r16,3073
 c00ef78:	8401db04 	addi	r16,r16,1900
 c00ef7c:	e0bffa17 	ldw	r2,-24(fp)
 c00ef80:	01400304 	movi	r5,12
 c00ef84:	1009883a 	mov	r4,r2
 c00ef88:	c0005340 	call	c000534 <__mulsi3>
 c00ef8c:	8085883a 	add	r2,r16,r2
 c00ef90:	10800104 	addi	r2,r2,4
 c00ef94:	10c00017 	ldw	r3,0(r2)
 c00ef98:	e0bffb17 	ldw	r2,-20(fp)
 c00ef9c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 c00efa0:	04030074 	movhi	r16,3073
 c00efa4:	8401db04 	addi	r16,r16,1900
 c00efa8:	e0bffa17 	ldw	r2,-24(fp)
 c00efac:	01400304 	movi	r5,12
 c00efb0:	1009883a 	mov	r4,r2
 c00efb4:	c0005340 	call	c000534 <__mulsi3>
 c00efb8:	8085883a 	add	r2,r16,r2
 c00efbc:	10800204 	addi	r2,r2,8
 c00efc0:	10c00017 	ldw	r3,0(r2)
 c00efc4:	e0bffb17 	ldw	r2,-20(fp)
 c00efc8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 c00efcc:	e13ffa17 	ldw	r4,-24(fp)
 c00efd0:	c00dac40 	call	c00dac4 <alt_release_fd>
  }
} 
 c00efd4:	0001883a 	nop
 c00efd8:	e6ffff04 	addi	sp,fp,-4
 c00efdc:	dfc00217 	ldw	ra,8(sp)
 c00efe0:	df000117 	ldw	fp,4(sp)
 c00efe4:	dc000017 	ldw	r16,0(sp)
 c00efe8:	dec00304 	addi	sp,sp,12
 c00efec:	f800283a 	ret

0c00eff0 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 c00eff0:	defffb04 	addi	sp,sp,-20
 c00eff4:	dfc00415 	stw	ra,16(sp)
 c00eff8:	df000315 	stw	fp,12(sp)
 c00effc:	df000304 	addi	fp,sp,12
 c00f000:	e13ffd15 	stw	r4,-12(fp)
 c00f004:	e17ffe15 	stw	r5,-8(fp)
 c00f008:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 c00f00c:	01c07fc4 	movi	r7,511
 c00f010:	01800044 	movi	r6,1
 c00f014:	e17ffd17 	ldw	r5,-12(fp)
 c00f018:	01030074 	movhi	r4,3073
 c00f01c:	2101de04 	addi	r4,r4,1912
 c00f020:	c00ef0c0 	call	c00ef0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 c00f024:	01c07fc4 	movi	r7,511
 c00f028:	000d883a 	mov	r6,zero
 c00f02c:	e17ffe17 	ldw	r5,-8(fp)
 c00f030:	01030074 	movhi	r4,3073
 c00f034:	2101db04 	addi	r4,r4,1900
 c00f038:	c00ef0c0 	call	c00ef0c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 c00f03c:	01c07fc4 	movi	r7,511
 c00f040:	01800044 	movi	r6,1
 c00f044:	e17fff17 	ldw	r5,-4(fp)
 c00f048:	01030074 	movhi	r4,3073
 c00f04c:	2101e104 	addi	r4,r4,1924
 c00f050:	c00ef0c0 	call	c00ef0c <alt_open_fd>
}  
 c00f054:	0001883a 	nop
 c00f058:	e037883a 	mov	sp,fp
 c00f05c:	dfc00117 	ldw	ra,4(sp)
 c00f060:	df000017 	ldw	fp,0(sp)
 c00f064:	dec00204 	addi	sp,sp,8
 c00f068:	f800283a 	ret

0c00f06c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 c00f06c:	defffe04 	addi	sp,sp,-8
 c00f070:	dfc00115 	stw	ra,4(sp)
 c00f074:	df000015 	stw	fp,0(sp)
 c00f078:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 c00f07c:	d0a00d17 	ldw	r2,-32716(gp)
 c00f080:	10000326 	beq	r2,zero,c00f090 <alt_get_errno+0x24>
 c00f084:	d0a00d17 	ldw	r2,-32716(gp)
 c00f088:	103ee83a 	callr	r2
 c00f08c:	00000106 	br	c00f094 <alt_get_errno+0x28>
 c00f090:	d0a6d504 	addi	r2,gp,-25772
}
 c00f094:	e037883a 	mov	sp,fp
 c00f098:	dfc00117 	ldw	ra,4(sp)
 c00f09c:	df000017 	ldw	fp,0(sp)
 c00f0a0:	dec00204 	addi	sp,sp,8
 c00f0a4:	f800283a 	ret

0c00f0a8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 c00f0a8:	defffb04 	addi	sp,sp,-20
 c00f0ac:	dfc00415 	stw	ra,16(sp)
 c00f0b0:	df000315 	stw	fp,12(sp)
 c00f0b4:	dc000215 	stw	r16,8(sp)
 c00f0b8:	df000304 	addi	fp,sp,12
 c00f0bc:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 c00f0c0:	e0bffe17 	ldw	r2,-8(fp)
 c00f0c4:	10800217 	ldw	r2,8(r2)
 c00f0c8:	10d00034 	orhi	r3,r2,16384
 c00f0cc:	e0bffe17 	ldw	r2,-8(fp)
 c00f0d0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 c00f0d4:	e03ffd15 	stw	zero,-12(fp)
 c00f0d8:	00002306 	br	c00f168 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 c00f0dc:	04030074 	movhi	r16,3073
 c00f0e0:	8401db04 	addi	r16,r16,1900
 c00f0e4:	e0bffd17 	ldw	r2,-12(fp)
 c00f0e8:	01400304 	movi	r5,12
 c00f0ec:	1009883a 	mov	r4,r2
 c00f0f0:	c0005340 	call	c000534 <__mulsi3>
 c00f0f4:	8085883a 	add	r2,r16,r2
 c00f0f8:	10c00017 	ldw	r3,0(r2)
 c00f0fc:	e0bffe17 	ldw	r2,-8(fp)
 c00f100:	10800017 	ldw	r2,0(r2)
 c00f104:	1880151e 	bne	r3,r2,c00f15c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 c00f108:	04030074 	movhi	r16,3073
 c00f10c:	8401db04 	addi	r16,r16,1900
 c00f110:	e0bffd17 	ldw	r2,-12(fp)
 c00f114:	01400304 	movi	r5,12
 c00f118:	1009883a 	mov	r4,r2
 c00f11c:	c0005340 	call	c000534 <__mulsi3>
 c00f120:	8085883a 	add	r2,r16,r2
 c00f124:	10800204 	addi	r2,r2,8
 c00f128:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 c00f12c:	10000b0e 	bge	r2,zero,c00f15c <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 c00f130:	01400304 	movi	r5,12
 c00f134:	e13ffd17 	ldw	r4,-12(fp)
 c00f138:	c0005340 	call	c000534 <__mulsi3>
 c00f13c:	1007883a 	mov	r3,r2
 c00f140:	00830074 	movhi	r2,3073
 c00f144:	1081db04 	addi	r2,r2,1900
 c00f148:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 c00f14c:	e0bffe17 	ldw	r2,-8(fp)
 c00f150:	18800226 	beq	r3,r2,c00f15c <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 c00f154:	00bffcc4 	movi	r2,-13
 c00f158:	00000806 	br	c00f17c <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 c00f15c:	e0bffd17 	ldw	r2,-12(fp)
 c00f160:	10800044 	addi	r2,r2,1
 c00f164:	e0bffd15 	stw	r2,-12(fp)
 c00f168:	d0a00c17 	ldw	r2,-32720(gp)
 c00f16c:	1007883a 	mov	r3,r2
 c00f170:	e0bffd17 	ldw	r2,-12(fp)
 c00f174:	18bfd92e 	bgeu	r3,r2,c00f0dc <__alt_data_end+0xfc00f0dc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 c00f178:	0005883a 	mov	r2,zero
}
 c00f17c:	e6ffff04 	addi	sp,fp,-4
 c00f180:	dfc00217 	ldw	ra,8(sp)
 c00f184:	df000117 	ldw	fp,4(sp)
 c00f188:	dc000017 	ldw	r16,0(sp)
 c00f18c:	dec00304 	addi	sp,sp,12
 c00f190:	f800283a 	ret

0c00f194 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 c00f194:	defff604 	addi	sp,sp,-40
 c00f198:	dfc00915 	stw	ra,36(sp)
 c00f19c:	df000815 	stw	fp,32(sp)
 c00f1a0:	df000804 	addi	fp,sp,32
 c00f1a4:	e13ffd15 	stw	r4,-12(fp)
 c00f1a8:	e17ffe15 	stw	r5,-8(fp)
 c00f1ac:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 c00f1b0:	00bfffc4 	movi	r2,-1
 c00f1b4:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 c00f1b8:	00bffb44 	movi	r2,-19
 c00f1bc:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 c00f1c0:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 c00f1c4:	d1600a04 	addi	r5,gp,-32728
 c00f1c8:	e13ffd17 	ldw	r4,-12(fp)
 c00f1cc:	c00f4b80 	call	c00f4b8 <alt_find_dev>
 c00f1d0:	e0bff815 	stw	r2,-32(fp)
 c00f1d4:	e0bff817 	ldw	r2,-32(fp)
 c00f1d8:	1000051e 	bne	r2,zero,c00f1f0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 c00f1dc:	e13ffd17 	ldw	r4,-12(fp)
 c00f1e0:	c00f5480 	call	c00f548 <alt_find_file>
 c00f1e4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 c00f1e8:	00800044 	movi	r2,1
 c00f1ec:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 c00f1f0:	e0bff817 	ldw	r2,-32(fp)
 c00f1f4:	10002b26 	beq	r2,zero,c00f2a4 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 c00f1f8:	e13ff817 	ldw	r4,-32(fp)
 c00f1fc:	c00f6500 	call	c00f650 <alt_get_fd>
 c00f200:	e0bff915 	stw	r2,-28(fp)
 c00f204:	e0bff917 	ldw	r2,-28(fp)
 c00f208:	1000030e 	bge	r2,zero,c00f218 <open+0x84>
    {
      status = index;
 c00f20c:	e0bff917 	ldw	r2,-28(fp)
 c00f210:	e0bffa15 	stw	r2,-24(fp)
 c00f214:	00002506 	br	c00f2ac <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 c00f218:	01400304 	movi	r5,12
 c00f21c:	e13ff917 	ldw	r4,-28(fp)
 c00f220:	c0005340 	call	c000534 <__mulsi3>
 c00f224:	1007883a 	mov	r3,r2
 c00f228:	00830074 	movhi	r2,3073
 c00f22c:	1081db04 	addi	r2,r2,1900
 c00f230:	1885883a 	add	r2,r3,r2
 c00f234:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 c00f238:	e0fffe17 	ldw	r3,-8(fp)
 c00f23c:	00900034 	movhi	r2,16384
 c00f240:	10bfffc4 	addi	r2,r2,-1
 c00f244:	1886703a 	and	r3,r3,r2
 c00f248:	e0bffc17 	ldw	r2,-16(fp)
 c00f24c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 c00f250:	e0bffb17 	ldw	r2,-20(fp)
 c00f254:	1000051e 	bne	r2,zero,c00f26c <open+0xd8>
 c00f258:	e13ffc17 	ldw	r4,-16(fp)
 c00f25c:	c00f0a80 	call	c00f0a8 <alt_file_locked>
 c00f260:	e0bffa15 	stw	r2,-24(fp)
 c00f264:	e0bffa17 	ldw	r2,-24(fp)
 c00f268:	10001016 	blt	r2,zero,c00f2ac <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 c00f26c:	e0bff817 	ldw	r2,-32(fp)
 c00f270:	10800317 	ldw	r2,12(r2)
 c00f274:	10000826 	beq	r2,zero,c00f298 <open+0x104>
 c00f278:	e0bff817 	ldw	r2,-32(fp)
 c00f27c:	10800317 	ldw	r2,12(r2)
 c00f280:	e1ffff17 	ldw	r7,-4(fp)
 c00f284:	e1bffe17 	ldw	r6,-8(fp)
 c00f288:	e17ffd17 	ldw	r5,-12(fp)
 c00f28c:	e13ffc17 	ldw	r4,-16(fp)
 c00f290:	103ee83a 	callr	r2
 c00f294:	00000106 	br	c00f29c <open+0x108>
 c00f298:	0005883a 	mov	r2,zero
 c00f29c:	e0bffa15 	stw	r2,-24(fp)
 c00f2a0:	00000206 	br	c00f2ac <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 c00f2a4:	00bffb44 	movi	r2,-19
 c00f2a8:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 c00f2ac:	e0bffa17 	ldw	r2,-24(fp)
 c00f2b0:	1000090e 	bge	r2,zero,c00f2d8 <open+0x144>
  {
    alt_release_fd (index);  
 c00f2b4:	e13ff917 	ldw	r4,-28(fp)
 c00f2b8:	c00dac40 	call	c00dac4 <alt_release_fd>
    ALT_ERRNO = -status;
 c00f2bc:	c00f06c0 	call	c00f06c <alt_get_errno>
 c00f2c0:	1007883a 	mov	r3,r2
 c00f2c4:	e0bffa17 	ldw	r2,-24(fp)
 c00f2c8:	0085c83a 	sub	r2,zero,r2
 c00f2cc:	18800015 	stw	r2,0(r3)
    return -1;
 c00f2d0:	00bfffc4 	movi	r2,-1
 c00f2d4:	00000106 	br	c00f2dc <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 c00f2d8:	e0bff917 	ldw	r2,-28(fp)
}
 c00f2dc:	e037883a 	mov	sp,fp
 c00f2e0:	dfc00117 	ldw	ra,4(sp)
 c00f2e4:	df000017 	ldw	fp,0(sp)
 c00f2e8:	dec00204 	addi	sp,sp,8
 c00f2ec:	f800283a 	ret

0c00f2f0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 c00f2f0:	defffa04 	addi	sp,sp,-24
 c00f2f4:	df000515 	stw	fp,20(sp)
 c00f2f8:	df000504 	addi	fp,sp,20
 c00f2fc:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 c00f300:	0005303a 	rdctl	r2,status
 c00f304:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 c00f308:	e0fffc17 	ldw	r3,-16(fp)
 c00f30c:	00bfff84 	movi	r2,-2
 c00f310:	1884703a 	and	r2,r3,r2
 c00f314:	1001703a 	wrctl	status,r2
  
  return context;
 c00f318:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 c00f31c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 c00f320:	e0bfff17 	ldw	r2,-4(fp)
 c00f324:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 c00f328:	e0bffd17 	ldw	r2,-12(fp)
 c00f32c:	10800017 	ldw	r2,0(r2)
 c00f330:	e0fffd17 	ldw	r3,-12(fp)
 c00f334:	18c00117 	ldw	r3,4(r3)
 c00f338:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 c00f33c:	e0bffd17 	ldw	r2,-12(fp)
 c00f340:	10800117 	ldw	r2,4(r2)
 c00f344:	e0fffd17 	ldw	r3,-12(fp)
 c00f348:	18c00017 	ldw	r3,0(r3)
 c00f34c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 c00f350:	e0bffd17 	ldw	r2,-12(fp)
 c00f354:	e0fffd17 	ldw	r3,-12(fp)
 c00f358:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 c00f35c:	e0bffd17 	ldw	r2,-12(fp)
 c00f360:	e0fffd17 	ldw	r3,-12(fp)
 c00f364:	10c00015 	stw	r3,0(r2)
 c00f368:	e0bffb17 	ldw	r2,-20(fp)
 c00f36c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 c00f370:	e0bffe17 	ldw	r2,-8(fp)
 c00f374:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 c00f378:	0001883a 	nop
 c00f37c:	e037883a 	mov	sp,fp
 c00f380:	df000017 	ldw	fp,0(sp)
 c00f384:	dec00104 	addi	sp,sp,4
 c00f388:	f800283a 	ret

0c00f38c <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 c00f38c:	defffb04 	addi	sp,sp,-20
 c00f390:	dfc00415 	stw	ra,16(sp)
 c00f394:	df000315 	stw	fp,12(sp)
 c00f398:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 c00f39c:	d0a01017 	ldw	r2,-32704(gp)
 c00f3a0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 c00f3a4:	d0a6db17 	ldw	r2,-25748(gp)
 c00f3a8:	10800044 	addi	r2,r2,1
 c00f3ac:	d0a6db15 	stw	r2,-25748(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 c00f3b0:	00002e06 	br	c00f46c <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 c00f3b4:	e0bffd17 	ldw	r2,-12(fp)
 c00f3b8:	10800017 	ldw	r2,0(r2)
 c00f3bc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 c00f3c0:	e0bffd17 	ldw	r2,-12(fp)
 c00f3c4:	10800403 	ldbu	r2,16(r2)
 c00f3c8:	10803fcc 	andi	r2,r2,255
 c00f3cc:	10000426 	beq	r2,zero,c00f3e0 <alt_tick+0x54>
 c00f3d0:	d0a6db17 	ldw	r2,-25748(gp)
 c00f3d4:	1000021e 	bne	r2,zero,c00f3e0 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 c00f3d8:	e0bffd17 	ldw	r2,-12(fp)
 c00f3dc:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 c00f3e0:	e0bffd17 	ldw	r2,-12(fp)
 c00f3e4:	10800217 	ldw	r2,8(r2)
 c00f3e8:	d0e6db17 	ldw	r3,-25748(gp)
 c00f3ec:	18801d36 	bltu	r3,r2,c00f464 <alt_tick+0xd8>
 c00f3f0:	e0bffd17 	ldw	r2,-12(fp)
 c00f3f4:	10800403 	ldbu	r2,16(r2)
 c00f3f8:	10803fcc 	andi	r2,r2,255
 c00f3fc:	1000191e 	bne	r2,zero,c00f464 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 c00f400:	e0bffd17 	ldw	r2,-12(fp)
 c00f404:	10800317 	ldw	r2,12(r2)
 c00f408:	e0fffd17 	ldw	r3,-12(fp)
 c00f40c:	18c00517 	ldw	r3,20(r3)
 c00f410:	1809883a 	mov	r4,r3
 c00f414:	103ee83a 	callr	r2
 c00f418:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 c00f41c:	e0bfff17 	ldw	r2,-4(fp)
 c00f420:	1000031e 	bne	r2,zero,c00f430 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 c00f424:	e13ffd17 	ldw	r4,-12(fp)
 c00f428:	c00f2f00 	call	c00f2f0 <alt_alarm_stop>
 c00f42c:	00000d06 	br	c00f464 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 c00f430:	e0bffd17 	ldw	r2,-12(fp)
 c00f434:	10c00217 	ldw	r3,8(r2)
 c00f438:	e0bfff17 	ldw	r2,-4(fp)
 c00f43c:	1887883a 	add	r3,r3,r2
 c00f440:	e0bffd17 	ldw	r2,-12(fp)
 c00f444:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 c00f448:	e0bffd17 	ldw	r2,-12(fp)
 c00f44c:	10c00217 	ldw	r3,8(r2)
 c00f450:	d0a6db17 	ldw	r2,-25748(gp)
 c00f454:	1880032e 	bgeu	r3,r2,c00f464 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 c00f458:	e0bffd17 	ldw	r2,-12(fp)
 c00f45c:	00c00044 	movi	r3,1
 c00f460:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 c00f464:	e0bffe17 	ldw	r2,-8(fp)
 c00f468:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 c00f46c:	e0fffd17 	ldw	r3,-12(fp)
 c00f470:	d0a01004 	addi	r2,gp,-32704
 c00f474:	18bfcf1e 	bne	r3,r2,c00f3b4 <__alt_data_end+0xfc00f3b4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 c00f478:	0001883a 	nop
}
 c00f47c:	0001883a 	nop
 c00f480:	e037883a 	mov	sp,fp
 c00f484:	dfc00117 	ldw	ra,4(sp)
 c00f488:	df000017 	ldw	fp,0(sp)
 c00f48c:	dec00204 	addi	sp,sp,8
 c00f490:	f800283a 	ret

0c00f494 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 c00f494:	deffff04 	addi	sp,sp,-4
 c00f498:	df000015 	stw	fp,0(sp)
 c00f49c:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 c00f4a0:	000170fa 	wrctl	ienable,zero
}
 c00f4a4:	0001883a 	nop
 c00f4a8:	e037883a 	mov	sp,fp
 c00f4ac:	df000017 	ldw	fp,0(sp)
 c00f4b0:	dec00104 	addi	sp,sp,4
 c00f4b4:	f800283a 	ret

0c00f4b8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 c00f4b8:	defffa04 	addi	sp,sp,-24
 c00f4bc:	dfc00515 	stw	ra,20(sp)
 c00f4c0:	df000415 	stw	fp,16(sp)
 c00f4c4:	df000404 	addi	fp,sp,16
 c00f4c8:	e13ffe15 	stw	r4,-8(fp)
 c00f4cc:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 c00f4d0:	e0bfff17 	ldw	r2,-4(fp)
 c00f4d4:	10800017 	ldw	r2,0(r2)
 c00f4d8:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 c00f4dc:	e13ffe17 	ldw	r4,-8(fp)
 c00f4e0:	c0071240 	call	c007124 <strlen>
 c00f4e4:	10800044 	addi	r2,r2,1
 c00f4e8:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 c00f4ec:	00000d06 	br	c00f524 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 c00f4f0:	e0bffc17 	ldw	r2,-16(fp)
 c00f4f4:	10800217 	ldw	r2,8(r2)
 c00f4f8:	e0fffd17 	ldw	r3,-12(fp)
 c00f4fc:	180d883a 	mov	r6,r3
 c00f500:	e17ffe17 	ldw	r5,-8(fp)
 c00f504:	1009883a 	mov	r4,r2
 c00f508:	c00f7fc0 	call	c00f7fc <memcmp>
 c00f50c:	1000021e 	bne	r2,zero,c00f518 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 c00f510:	e0bffc17 	ldw	r2,-16(fp)
 c00f514:	00000706 	br	c00f534 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 c00f518:	e0bffc17 	ldw	r2,-16(fp)
 c00f51c:	10800017 	ldw	r2,0(r2)
 c00f520:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 c00f524:	e0fffc17 	ldw	r3,-16(fp)
 c00f528:	e0bfff17 	ldw	r2,-4(fp)
 c00f52c:	18bff01e 	bne	r3,r2,c00f4f0 <__alt_data_end+0xfc00f4f0>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 c00f530:	0005883a 	mov	r2,zero
}
 c00f534:	e037883a 	mov	sp,fp
 c00f538:	dfc00117 	ldw	ra,4(sp)
 c00f53c:	df000017 	ldw	fp,0(sp)
 c00f540:	dec00204 	addi	sp,sp,8
 c00f544:	f800283a 	ret

0c00f548 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 c00f548:	defffb04 	addi	sp,sp,-20
 c00f54c:	dfc00415 	stw	ra,16(sp)
 c00f550:	df000315 	stw	fp,12(sp)
 c00f554:	df000304 	addi	fp,sp,12
 c00f558:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 c00f55c:	d0a00817 	ldw	r2,-32736(gp)
 c00f560:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 c00f564:	00003106 	br	c00f62c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 c00f568:	e0bffd17 	ldw	r2,-12(fp)
 c00f56c:	10800217 	ldw	r2,8(r2)
 c00f570:	1009883a 	mov	r4,r2
 c00f574:	c0071240 	call	c007124 <strlen>
 c00f578:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 c00f57c:	e0bffd17 	ldw	r2,-12(fp)
 c00f580:	10c00217 	ldw	r3,8(r2)
 c00f584:	e0bffe17 	ldw	r2,-8(fp)
 c00f588:	10bfffc4 	addi	r2,r2,-1
 c00f58c:	1885883a 	add	r2,r3,r2
 c00f590:	10800003 	ldbu	r2,0(r2)
 c00f594:	10803fcc 	andi	r2,r2,255
 c00f598:	1080201c 	xori	r2,r2,128
 c00f59c:	10bfe004 	addi	r2,r2,-128
 c00f5a0:	10800bd8 	cmpnei	r2,r2,47
 c00f5a4:	1000031e 	bne	r2,zero,c00f5b4 <alt_find_file+0x6c>
    {
      len -= 1;
 c00f5a8:	e0bffe17 	ldw	r2,-8(fp)
 c00f5ac:	10bfffc4 	addi	r2,r2,-1
 c00f5b0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 c00f5b4:	e0bffe17 	ldw	r2,-8(fp)
 c00f5b8:	e0ffff17 	ldw	r3,-4(fp)
 c00f5bc:	1885883a 	add	r2,r3,r2
 c00f5c0:	10800003 	ldbu	r2,0(r2)
 c00f5c4:	10803fcc 	andi	r2,r2,255
 c00f5c8:	1080201c 	xori	r2,r2,128
 c00f5cc:	10bfe004 	addi	r2,r2,-128
 c00f5d0:	10800be0 	cmpeqi	r2,r2,47
 c00f5d4:	1000081e 	bne	r2,zero,c00f5f8 <alt_find_file+0xb0>
 c00f5d8:	e0bffe17 	ldw	r2,-8(fp)
 c00f5dc:	e0ffff17 	ldw	r3,-4(fp)
 c00f5e0:	1885883a 	add	r2,r3,r2
 c00f5e4:	10800003 	ldbu	r2,0(r2)
 c00f5e8:	10803fcc 	andi	r2,r2,255
 c00f5ec:	1080201c 	xori	r2,r2,128
 c00f5f0:	10bfe004 	addi	r2,r2,-128
 c00f5f4:	10000a1e 	bne	r2,zero,c00f620 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 c00f5f8:	e0bffd17 	ldw	r2,-12(fp)
 c00f5fc:	10800217 	ldw	r2,8(r2)
 c00f600:	e0fffe17 	ldw	r3,-8(fp)
 c00f604:	180d883a 	mov	r6,r3
 c00f608:	e17fff17 	ldw	r5,-4(fp)
 c00f60c:	1009883a 	mov	r4,r2
 c00f610:	c00f7fc0 	call	c00f7fc <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 c00f614:	1000021e 	bne	r2,zero,c00f620 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 c00f618:	e0bffd17 	ldw	r2,-12(fp)
 c00f61c:	00000706 	br	c00f63c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 c00f620:	e0bffd17 	ldw	r2,-12(fp)
 c00f624:	10800017 	ldw	r2,0(r2)
 c00f628:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 c00f62c:	e0fffd17 	ldw	r3,-12(fp)
 c00f630:	d0a00804 	addi	r2,gp,-32736
 c00f634:	18bfcc1e 	bne	r3,r2,c00f568 <__alt_data_end+0xfc00f568>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 c00f638:	0005883a 	mov	r2,zero
}
 c00f63c:	e037883a 	mov	sp,fp
 c00f640:	dfc00117 	ldw	ra,4(sp)
 c00f644:	df000017 	ldw	fp,0(sp)
 c00f648:	dec00204 	addi	sp,sp,8
 c00f64c:	f800283a 	ret

0c00f650 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 c00f650:	defffa04 	addi	sp,sp,-24
 c00f654:	dfc00515 	stw	ra,20(sp)
 c00f658:	df000415 	stw	fp,16(sp)
 c00f65c:	dc000315 	stw	r16,12(sp)
 c00f660:	df000404 	addi	fp,sp,16
 c00f664:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 c00f668:	00bffa04 	movi	r2,-24
 c00f66c:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 c00f670:	e03ffc15 	stw	zero,-16(fp)
 c00f674:	00001d06 	br	c00f6ec <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 c00f678:	04030074 	movhi	r16,3073
 c00f67c:	8401db04 	addi	r16,r16,1900
 c00f680:	e0bffc17 	ldw	r2,-16(fp)
 c00f684:	01400304 	movi	r5,12
 c00f688:	1009883a 	mov	r4,r2
 c00f68c:	c0005340 	call	c000534 <__mulsi3>
 c00f690:	8085883a 	add	r2,r16,r2
 c00f694:	10800017 	ldw	r2,0(r2)
 c00f698:	1000111e 	bne	r2,zero,c00f6e0 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 c00f69c:	04030074 	movhi	r16,3073
 c00f6a0:	8401db04 	addi	r16,r16,1900
 c00f6a4:	e0bffc17 	ldw	r2,-16(fp)
 c00f6a8:	01400304 	movi	r5,12
 c00f6ac:	1009883a 	mov	r4,r2
 c00f6b0:	c0005340 	call	c000534 <__mulsi3>
 c00f6b4:	8085883a 	add	r2,r16,r2
 c00f6b8:	e0fffe17 	ldw	r3,-8(fp)
 c00f6bc:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 c00f6c0:	d0e00c17 	ldw	r3,-32720(gp)
 c00f6c4:	e0bffc17 	ldw	r2,-16(fp)
 c00f6c8:	1880020e 	bge	r3,r2,c00f6d4 <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 c00f6cc:	e0bffc17 	ldw	r2,-16(fp)
 c00f6d0:	d0a00c15 	stw	r2,-32720(gp)
      }
      rc = i;
 c00f6d4:	e0bffc17 	ldw	r2,-16(fp)
 c00f6d8:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 c00f6dc:	00000606 	br	c00f6f8 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 c00f6e0:	e0bffc17 	ldw	r2,-16(fp)
 c00f6e4:	10800044 	addi	r2,r2,1
 c00f6e8:	e0bffc15 	stw	r2,-16(fp)
 c00f6ec:	e0bffc17 	ldw	r2,-16(fp)
 c00f6f0:	10800810 	cmplti	r2,r2,32
 c00f6f4:	103fe01e 	bne	r2,zero,c00f678 <__alt_data_end+0xfc00f678>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 c00f6f8:	e0bffd17 	ldw	r2,-12(fp)
}
 c00f6fc:	e6ffff04 	addi	sp,fp,-4
 c00f700:	dfc00217 	ldw	ra,8(sp)
 c00f704:	df000117 	ldw	fp,4(sp)
 c00f708:	dc000017 	ldw	r16,0(sp)
 c00f70c:	dec00304 	addi	sp,sp,12
 c00f710:	f800283a 	ret

0c00f714 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 c00f714:	defffe04 	addi	sp,sp,-8
 c00f718:	df000115 	stw	fp,4(sp)
 c00f71c:	df000104 	addi	fp,sp,4
 c00f720:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 c00f724:	e0bfff17 	ldw	r2,-4(fp)
 c00f728:	10bffe84 	addi	r2,r2,-6
 c00f72c:	10c00428 	cmpgeui	r3,r2,16
 c00f730:	18001a1e 	bne	r3,zero,c00f79c <alt_exception_cause_generated_bad_addr+0x88>
 c00f734:	100690ba 	slli	r3,r2,2
 c00f738:	00830074 	movhi	r2,3073
 c00f73c:	10bdd304 	addi	r2,r2,-2228
 c00f740:	1885883a 	add	r2,r3,r2
 c00f744:	10800017 	ldw	r2,0(r2)
 c00f748:	1000683a 	jmp	r2
 c00f74c:	0c00f78c 	andi	r16,at,990
 c00f750:	0c00f78c 	andi	r16,at,990
 c00f754:	0c00f79c 	xori	r16,at,990
 c00f758:	0c00f79c 	xori	r16,at,990
 c00f75c:	0c00f79c 	xori	r16,at,990
 c00f760:	0c00f78c 	andi	r16,at,990
 c00f764:	0c00f794 	ori	r16,at,990
 c00f768:	0c00f79c 	xori	r16,at,990
 c00f76c:	0c00f78c 	andi	r16,at,990
 c00f770:	0c00f78c 	andi	r16,at,990
 c00f774:	0c00f79c 	xori	r16,at,990
 c00f778:	0c00f78c 	andi	r16,at,990
 c00f77c:	0c00f794 	ori	r16,at,990
 c00f780:	0c00f79c 	xori	r16,at,990
 c00f784:	0c00f79c 	xori	r16,at,990
 c00f788:	0c00f78c 	andi	r16,at,990
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 c00f78c:	00800044 	movi	r2,1
 c00f790:	00000306 	br	c00f7a0 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 c00f794:	0005883a 	mov	r2,zero
 c00f798:	00000106 	br	c00f7a0 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 c00f79c:	0005883a 	mov	r2,zero
  }
}
 c00f7a0:	e037883a 	mov	sp,fp
 c00f7a4:	df000017 	ldw	fp,0(sp)
 c00f7a8:	dec00104 	addi	sp,sp,4
 c00f7ac:	f800283a 	ret

0c00f7b0 <atexit>:
 c00f7b0:	200b883a 	mov	r5,r4
 c00f7b4:	000f883a 	mov	r7,zero
 c00f7b8:	000d883a 	mov	r6,zero
 c00f7bc:	0009883a 	mov	r4,zero
 c00f7c0:	c00f8781 	jmpi	c00f878 <__register_exitproc>

0c00f7c4 <exit>:
 c00f7c4:	defffe04 	addi	sp,sp,-8
 c00f7c8:	000b883a 	mov	r5,zero
 c00f7cc:	dc000015 	stw	r16,0(sp)
 c00f7d0:	dfc00115 	stw	ra,4(sp)
 c00f7d4:	2021883a 	mov	r16,r4
 c00f7d8:	c00f9900 	call	c00f990 <__call_exitprocs>
 c00f7dc:	00830074 	movhi	r2,3073
 c00f7e0:	10865504 	addi	r2,r2,6484
 c00f7e4:	11000017 	ldw	r4,0(r2)
 c00f7e8:	20800f17 	ldw	r2,60(r4)
 c00f7ec:	10000126 	beq	r2,zero,c00f7f4 <exit+0x30>
 c00f7f0:	103ee83a 	callr	r2
 c00f7f4:	8009883a 	mov	r4,r16
 c00f7f8:	c00fb100 	call	c00fb10 <_exit>

0c00f7fc <memcmp>:
 c00f7fc:	01c000c4 	movi	r7,3
 c00f800:	3980192e 	bgeu	r7,r6,c00f868 <memcmp+0x6c>
 c00f804:	2144b03a 	or	r2,r4,r5
 c00f808:	11c4703a 	and	r2,r2,r7
 c00f80c:	10000f26 	beq	r2,zero,c00f84c <memcmp+0x50>
 c00f810:	20800003 	ldbu	r2,0(r4)
 c00f814:	28c00003 	ldbu	r3,0(r5)
 c00f818:	10c0151e 	bne	r2,r3,c00f870 <memcmp+0x74>
 c00f81c:	31bfff84 	addi	r6,r6,-2
 c00f820:	01ffffc4 	movi	r7,-1
 c00f824:	00000406 	br	c00f838 <memcmp+0x3c>
 c00f828:	20800003 	ldbu	r2,0(r4)
 c00f82c:	28c00003 	ldbu	r3,0(r5)
 c00f830:	31bfffc4 	addi	r6,r6,-1
 c00f834:	10c00e1e 	bne	r2,r3,c00f870 <memcmp+0x74>
 c00f838:	21000044 	addi	r4,r4,1
 c00f83c:	29400044 	addi	r5,r5,1
 c00f840:	31fff91e 	bne	r6,r7,c00f828 <__alt_data_end+0xfc00f828>
 c00f844:	0005883a 	mov	r2,zero
 c00f848:	f800283a 	ret
 c00f84c:	20c00017 	ldw	r3,0(r4)
 c00f850:	28800017 	ldw	r2,0(r5)
 c00f854:	18bfee1e 	bne	r3,r2,c00f810 <__alt_data_end+0xfc00f810>
 c00f858:	31bfff04 	addi	r6,r6,-4
 c00f85c:	21000104 	addi	r4,r4,4
 c00f860:	29400104 	addi	r5,r5,4
 c00f864:	39bff936 	bltu	r7,r6,c00f84c <__alt_data_end+0xfc00f84c>
 c00f868:	303fe91e 	bne	r6,zero,c00f810 <__alt_data_end+0xfc00f810>
 c00f86c:	003ff506 	br	c00f844 <__alt_data_end+0xfc00f844>
 c00f870:	10c5c83a 	sub	r2,r2,r3
 c00f874:	f800283a 	ret

0c00f878 <__register_exitproc>:
 c00f878:	defffa04 	addi	sp,sp,-24
 c00f87c:	dc000315 	stw	r16,12(sp)
 c00f880:	04030074 	movhi	r16,3073
 c00f884:	84065504 	addi	r16,r16,6484
 c00f888:	80c00017 	ldw	r3,0(r16)
 c00f88c:	dc400415 	stw	r17,16(sp)
 c00f890:	dfc00515 	stw	ra,20(sp)
 c00f894:	18805217 	ldw	r2,328(r3)
 c00f898:	2023883a 	mov	r17,r4
 c00f89c:	10003726 	beq	r2,zero,c00f97c <__register_exitproc+0x104>
 c00f8a0:	10c00117 	ldw	r3,4(r2)
 c00f8a4:	010007c4 	movi	r4,31
 c00f8a8:	20c00e16 	blt	r4,r3,c00f8e4 <__register_exitproc+0x6c>
 c00f8ac:	1a000044 	addi	r8,r3,1
 c00f8b0:	8800221e 	bne	r17,zero,c00f93c <__register_exitproc+0xc4>
 c00f8b4:	18c00084 	addi	r3,r3,2
 c00f8b8:	18c7883a 	add	r3,r3,r3
 c00f8bc:	18c7883a 	add	r3,r3,r3
 c00f8c0:	12000115 	stw	r8,4(r2)
 c00f8c4:	10c7883a 	add	r3,r2,r3
 c00f8c8:	19400015 	stw	r5,0(r3)
 c00f8cc:	0005883a 	mov	r2,zero
 c00f8d0:	dfc00517 	ldw	ra,20(sp)
 c00f8d4:	dc400417 	ldw	r17,16(sp)
 c00f8d8:	dc000317 	ldw	r16,12(sp)
 c00f8dc:	dec00604 	addi	sp,sp,24
 c00f8e0:	f800283a 	ret
 c00f8e4:	00800034 	movhi	r2,0
 c00f8e8:	10800004 	addi	r2,r2,0
 c00f8ec:	10002626 	beq	r2,zero,c00f988 <__register_exitproc+0x110>
 c00f8f0:	01006404 	movi	r4,400
 c00f8f4:	d9400015 	stw	r5,0(sp)
 c00f8f8:	d9800115 	stw	r6,4(sp)
 c00f8fc:	d9c00215 	stw	r7,8(sp)
 c00f900:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 c00f904:	d9400017 	ldw	r5,0(sp)
 c00f908:	d9800117 	ldw	r6,4(sp)
 c00f90c:	d9c00217 	ldw	r7,8(sp)
 c00f910:	10001d26 	beq	r2,zero,c00f988 <__register_exitproc+0x110>
 c00f914:	81000017 	ldw	r4,0(r16)
 c00f918:	10000115 	stw	zero,4(r2)
 c00f91c:	02000044 	movi	r8,1
 c00f920:	22405217 	ldw	r9,328(r4)
 c00f924:	0007883a 	mov	r3,zero
 c00f928:	12400015 	stw	r9,0(r2)
 c00f92c:	20805215 	stw	r2,328(r4)
 c00f930:	10006215 	stw	zero,392(r2)
 c00f934:	10006315 	stw	zero,396(r2)
 c00f938:	883fde26 	beq	r17,zero,c00f8b4 <__alt_data_end+0xfc00f8b4>
 c00f93c:	18c9883a 	add	r4,r3,r3
 c00f940:	2109883a 	add	r4,r4,r4
 c00f944:	1109883a 	add	r4,r2,r4
 c00f948:	21802215 	stw	r6,136(r4)
 c00f94c:	01800044 	movi	r6,1
 c00f950:	12406217 	ldw	r9,392(r2)
 c00f954:	30cc983a 	sll	r6,r6,r3
 c00f958:	4992b03a 	or	r9,r9,r6
 c00f95c:	12406215 	stw	r9,392(r2)
 c00f960:	21c04215 	stw	r7,264(r4)
 c00f964:	01000084 	movi	r4,2
 c00f968:	893fd21e 	bne	r17,r4,c00f8b4 <__alt_data_end+0xfc00f8b4>
 c00f96c:	11006317 	ldw	r4,396(r2)
 c00f970:	218cb03a 	or	r6,r4,r6
 c00f974:	11806315 	stw	r6,396(r2)
 c00f978:	003fce06 	br	c00f8b4 <__alt_data_end+0xfc00f8b4>
 c00f97c:	18805304 	addi	r2,r3,332
 c00f980:	18805215 	stw	r2,328(r3)
 c00f984:	003fc606 	br	c00f8a0 <__alt_data_end+0xfc00f8a0>
 c00f988:	00bfffc4 	movi	r2,-1
 c00f98c:	003fd006 	br	c00f8d0 <__alt_data_end+0xfc00f8d0>

0c00f990 <__call_exitprocs>:
 c00f990:	defff504 	addi	sp,sp,-44
 c00f994:	df000915 	stw	fp,36(sp)
 c00f998:	dd400615 	stw	r21,24(sp)
 c00f99c:	dc800315 	stw	r18,12(sp)
 c00f9a0:	dfc00a15 	stw	ra,40(sp)
 c00f9a4:	ddc00815 	stw	r23,32(sp)
 c00f9a8:	dd800715 	stw	r22,28(sp)
 c00f9ac:	dd000515 	stw	r20,20(sp)
 c00f9b0:	dcc00415 	stw	r19,16(sp)
 c00f9b4:	dc400215 	stw	r17,8(sp)
 c00f9b8:	dc000115 	stw	r16,4(sp)
 c00f9bc:	d9000015 	stw	r4,0(sp)
 c00f9c0:	2839883a 	mov	fp,r5
 c00f9c4:	04800044 	movi	r18,1
 c00f9c8:	057fffc4 	movi	r21,-1
 c00f9cc:	00830074 	movhi	r2,3073
 c00f9d0:	10865504 	addi	r2,r2,6484
 c00f9d4:	12000017 	ldw	r8,0(r2)
 c00f9d8:	45005217 	ldw	r20,328(r8)
 c00f9dc:	44c05204 	addi	r19,r8,328
 c00f9e0:	a0001c26 	beq	r20,zero,c00fa54 <__call_exitprocs+0xc4>
 c00f9e4:	a0800117 	ldw	r2,4(r20)
 c00f9e8:	15ffffc4 	addi	r23,r2,-1
 c00f9ec:	b8000d16 	blt	r23,zero,c00fa24 <__call_exitprocs+0x94>
 c00f9f0:	14000044 	addi	r16,r2,1
 c00f9f4:	8421883a 	add	r16,r16,r16
 c00f9f8:	8421883a 	add	r16,r16,r16
 c00f9fc:	84402004 	addi	r17,r16,128
 c00fa00:	a463883a 	add	r17,r20,r17
 c00fa04:	a421883a 	add	r16,r20,r16
 c00fa08:	e0001e26 	beq	fp,zero,c00fa84 <__call_exitprocs+0xf4>
 c00fa0c:	80804017 	ldw	r2,256(r16)
 c00fa10:	e0801c26 	beq	fp,r2,c00fa84 <__call_exitprocs+0xf4>
 c00fa14:	bdffffc4 	addi	r23,r23,-1
 c00fa18:	843fff04 	addi	r16,r16,-4
 c00fa1c:	8c7fff04 	addi	r17,r17,-4
 c00fa20:	bd7ff91e 	bne	r23,r21,c00fa08 <__alt_data_end+0xfc00fa08>
 c00fa24:	00800034 	movhi	r2,0
 c00fa28:	10800004 	addi	r2,r2,0
 c00fa2c:	10000926 	beq	r2,zero,c00fa54 <__call_exitprocs+0xc4>
 c00fa30:	a0800117 	ldw	r2,4(r20)
 c00fa34:	1000301e 	bne	r2,zero,c00faf8 <__call_exitprocs+0x168>
 c00fa38:	a0800017 	ldw	r2,0(r20)
 c00fa3c:	10003226 	beq	r2,zero,c00fb08 <__call_exitprocs+0x178>
 c00fa40:	a009883a 	mov	r4,r20
 c00fa44:	98800015 	stw	r2,0(r19)
 c00fa48:	00000000 	call	0 <__alt_mem_onchip_memory2_0>
 c00fa4c:	9d000017 	ldw	r20,0(r19)
 c00fa50:	a03fe41e 	bne	r20,zero,c00f9e4 <__alt_data_end+0xfc00f9e4>
 c00fa54:	dfc00a17 	ldw	ra,40(sp)
 c00fa58:	df000917 	ldw	fp,36(sp)
 c00fa5c:	ddc00817 	ldw	r23,32(sp)
 c00fa60:	dd800717 	ldw	r22,28(sp)
 c00fa64:	dd400617 	ldw	r21,24(sp)
 c00fa68:	dd000517 	ldw	r20,20(sp)
 c00fa6c:	dcc00417 	ldw	r19,16(sp)
 c00fa70:	dc800317 	ldw	r18,12(sp)
 c00fa74:	dc400217 	ldw	r17,8(sp)
 c00fa78:	dc000117 	ldw	r16,4(sp)
 c00fa7c:	dec00b04 	addi	sp,sp,44
 c00fa80:	f800283a 	ret
 c00fa84:	a0800117 	ldw	r2,4(r20)
 c00fa88:	80c00017 	ldw	r3,0(r16)
 c00fa8c:	10bfffc4 	addi	r2,r2,-1
 c00fa90:	15c01426 	beq	r2,r23,c00fae4 <__call_exitprocs+0x154>
 c00fa94:	80000015 	stw	zero,0(r16)
 c00fa98:	183fde26 	beq	r3,zero,c00fa14 <__alt_data_end+0xfc00fa14>
 c00fa9c:	95c8983a 	sll	r4,r18,r23
 c00faa0:	a0806217 	ldw	r2,392(r20)
 c00faa4:	a5800117 	ldw	r22,4(r20)
 c00faa8:	2084703a 	and	r2,r4,r2
 c00faac:	10000b26 	beq	r2,zero,c00fadc <__call_exitprocs+0x14c>
 c00fab0:	a0806317 	ldw	r2,396(r20)
 c00fab4:	2088703a 	and	r4,r4,r2
 c00fab8:	20000c1e 	bne	r4,zero,c00faec <__call_exitprocs+0x15c>
 c00fabc:	89400017 	ldw	r5,0(r17)
 c00fac0:	d9000017 	ldw	r4,0(sp)
 c00fac4:	183ee83a 	callr	r3
 c00fac8:	a0800117 	ldw	r2,4(r20)
 c00facc:	15bfbf1e 	bne	r2,r22,c00f9cc <__alt_data_end+0xfc00f9cc>
 c00fad0:	98800017 	ldw	r2,0(r19)
 c00fad4:	153fcf26 	beq	r2,r20,c00fa14 <__alt_data_end+0xfc00fa14>
 c00fad8:	003fbc06 	br	c00f9cc <__alt_data_end+0xfc00f9cc>
 c00fadc:	183ee83a 	callr	r3
 c00fae0:	003ff906 	br	c00fac8 <__alt_data_end+0xfc00fac8>
 c00fae4:	a5c00115 	stw	r23,4(r20)
 c00fae8:	003feb06 	br	c00fa98 <__alt_data_end+0xfc00fa98>
 c00faec:	89000017 	ldw	r4,0(r17)
 c00faf0:	183ee83a 	callr	r3
 c00faf4:	003ff406 	br	c00fac8 <__alt_data_end+0xfc00fac8>
 c00faf8:	a0800017 	ldw	r2,0(r20)
 c00fafc:	a027883a 	mov	r19,r20
 c00fb00:	1029883a 	mov	r20,r2
 c00fb04:	003fb606 	br	c00f9e0 <__alt_data_end+0xfc00f9e0>
 c00fb08:	0005883a 	mov	r2,zero
 c00fb0c:	003ffb06 	br	c00fafc <__alt_data_end+0xfc00fafc>

0c00fb10 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 c00fb10:	defffd04 	addi	sp,sp,-12
 c00fb14:	df000215 	stw	fp,8(sp)
 c00fb18:	df000204 	addi	fp,sp,8
 c00fb1c:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 c00fb20:	0001883a 	nop
 c00fb24:	e0bfff17 	ldw	r2,-4(fp)
 c00fb28:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 c00fb2c:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 c00fb30:	10000226 	beq	r2,zero,c00fb3c <_exit+0x2c>
    ALT_SIM_FAIL();
 c00fb34:	002af070 	cmpltui	zero,zero,43969
 c00fb38:	00000106 	br	c00fb40 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 c00fb3c:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 c00fb40:	003fff06 	br	c00fb40 <__alt_data_end+0xfc00fb40>
